cset: moving following pidspec: 27587
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.965286203 seconds)
loading group "string"... done (took 0.567623539 seconds)
loading group "linalg"... done (took 9.232159579 seconds)
loading group "parallel"... done (took 0.177523299 seconds)
loading group "find"... done (took 1.392297693 seconds)
loading group "tuple"... done (took 2.252399515 seconds)
loading group "dates"... done (took 1.422598501 seconds)
loading group "micro"... done (took 0.237932537 seconds)
loading group "io"... done (took 0.651346607 seconds)
loading group "scalar"... done (took 44.229081245 seconds)
loading group "sparse"... done (took 13.753385707 seconds)
loading group "broadcast"... done (took 1.19671275 seconds)
loading group "union"... done (took 15.539985554 seconds)
loading group "simd"... done (took 5.215672061 seconds)
loading group "random"... done (took 10.749043276 seconds)
loading group "problem"... done (took 2.323101461 seconds)
loading group "array"... done (took 27.129903697 seconds)
loading group "misc"... done (took 1.262480494 seconds)
loading group "sort"... done (took 3.978297357 seconds)
loading group "collection"... done (took 24.147736471 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.744269409 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.153687594 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.176421887 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.220954667 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.235813507 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160051667 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.182965124 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.627255723 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.11007854 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.256797987 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.167122429 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.684065002 seconds)
done (took 6.472513916 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.266269194 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087833748 seconds)
    (2/2) benchmarking "String"...
    done (took 0.15426196 seconds)
  done (took 0.905864238 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.091413337 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.220273231 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.121048004 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.136616522 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.137199364 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.120558203 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.137146044 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.137101176 seconds)
  done (took 1.679650136 seconds)
done (took 3.622035647 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.95491103 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.878124757 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.534298022 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.154735619 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.189810931 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.166562574 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.384028172 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.177540513 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.127316032 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.136838222 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.207672816 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.364391021 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.577024556 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.04906224 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.118478182 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.144010096 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.098644146 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.722575048 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.098162037 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127084464 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.648544117 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.133542323 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.13386508 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141022834 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.223953552 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137356084 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.201323263 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.133258705 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682593224 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120628631 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.210957411 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.116492529 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.180267062 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.298045863 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097457664 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.124603386 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687881467 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.213104476 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.13369975 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.111158834 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68733987 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.100720439 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.226859942 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.134848929 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.134477626 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.209096122 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.121671379 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.113562183 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.121764124 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106859327 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.178263089 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.477440581 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.124497122 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.164730673 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110603596 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.722073546 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.116452172 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.171760639 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142005094 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.123802799 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.116170814 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.117742115 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.188199073 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120060927 seconds)
  done (took 21.485325851 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145550684 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167833427 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.109168969 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1640611 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.171064322 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095510117 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.117620718 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09387404 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.151476914 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.218228593 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.166340595 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.170985877 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090129998 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.110378699 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122126716 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.274340774 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.140992227 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127743887 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.113590816 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110830134 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.16459894 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114904854 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.130245808 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.132814507 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.18901521 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220395681 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.126310106 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.138864193 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.109555723 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.123440121 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.158061079 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.185755194 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09142872 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.109782122 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.214997411 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120998302 seconds)
  done (took 5.877582902 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.188862277 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.24201385 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.133679405 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.245159952 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.232508176 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1842308 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.214709611 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142073906 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.314435189 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.273857816 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.205766361 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147035355 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.1146041 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111429409 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097955514 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092992756 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.117115997 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162578492 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.214592275 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15225321 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125311373 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096720602 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.399081497 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120442188 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097444672 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12198682 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085519646 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.235320847 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.098974441 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123003899 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.554779796 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.138460991 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113399638 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150582095 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.222096663 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135887203 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.169344466 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104875977 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.117957487 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.266672946 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.132999065 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092266902 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.146229003 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148211053 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1371797 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.120439042 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.138579541 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.272498617 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.118284531 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12794044 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.314508979 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.238905088 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.117218308 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.115167842 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.415464436 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118900743 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.126919316 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100205875 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.348428433 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.149150572 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.11647289 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098182981 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.113377646 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105210271 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.111975956 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098665697 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134600487 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.422741824 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.112416922 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.203197237 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.126621565 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102964099 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.129290577 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102946807 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.119282202 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119908432 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.114993342 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092614091 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.11496426 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092688952 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.120545268 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.133430795 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102329649 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.110383086 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16457445 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.142627921 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.1195606 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141079701 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102897608 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.11313812 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142877932 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097395811 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100435911 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.173944545 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.127191855 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.134448633 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102811537 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.15843311 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.114227615 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.199787588 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.113865944 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126271593 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.117200658 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144708989 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.146216831 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09485909 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118385368 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092593883 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.11469453 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164372971 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.114059255 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094779687 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.117942666 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11440557 seconds)
  done (took 27.28897655 seconds)
done (took 55.314631721 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.463771183 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.140891447 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.141873373 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.142354777 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.141337193 seconds)
  done (took 1.77741318 seconds)
done (took 2.491100948 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.425634909 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.253866711 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122737098 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.245255595 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109123235 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.255782049 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.213427081 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.123272402 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.272682106 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101478875 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.239756999 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103269543 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.124865438 seconds)
  done (took 3.34784104 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11273859 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.139749453 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096081363 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109978206 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107963447 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109161952 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12540663 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132131305 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126225185 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100964344 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109700401 seconds)
  done (took 1.980058485 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10763308 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115565072 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.113065056 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106542906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106574544 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123148668 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118508608 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.123330643 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102816911 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106895932 seconds)
  done (took 1.942554267 seconds)
done (took 7.976651522 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237854697 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.115510955 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121389217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.197477344 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.404176542 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.231135984 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.658122796 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.139041554 seconds)
  done (took 13.063016137 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.13263553 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.13481353 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098201201 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.11849405 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096639531 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.11523947 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098242828 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.112652103 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099395546 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.112553953 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096338441 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098831468 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.115177351 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099067457 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.112898825 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09512831 seconds)
  done (took 2.516867083 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138164991 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.137351163 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.123333533 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112017922 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.120502835 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101359301 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.124403227 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104999983 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.117438349 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.1175775 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113931518 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.127888126 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.110005183 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.117096785 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105613886 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.131090618 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100628928 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.122745416 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106584948 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.123716237 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.128655798 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103963889 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.127801713 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112784854 seconds)
  done (took 3.667591556 seconds)
done (took 19.959847096 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.207650585 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102366268 seconds)
  done (took 1.032614012 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.12060751 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.138676417 seconds)
  done (took 0.980300797 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.131816809 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.112539834 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.161611561 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117761859 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.113236079 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095145237 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.154763305 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.113963205 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096947653 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.11337163 seconds)
  done (took 1.935358169 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.10495453 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102762575 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124668915 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138415791 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110690676 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.116107835 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102323984 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117847556 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10308578 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.11260784 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106892757 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.138782336 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.121984228 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125490608 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.119769166 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.121093085 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110251735 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.119044014 seconds)
  done (took 2.820180417 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.096951288 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099042674 seconds)
  done (took 0.920404874 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.10183576 seconds)
    (2/7) benchmarking "second"...
    done (took 0.111132319 seconds)
    (3/7) benchmarking "month"...
    done (took 0.100981706 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115415015 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094741659 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.110706376 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094989896 seconds)
  done (took 1.458650832 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.612129765 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274937677 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.406084457 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.14155878 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.180915697 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.437313709 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.181328453 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.136883811 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.137220367 seconds)
  done (took 3.284501071 seconds)
done (took 13.156905965 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.108703603 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.158263134 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.615793648 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.13372235 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093261576 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.175688505 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.329901057 seconds)
done (took 2.342525932 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405471537 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141516496 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.099514295 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093366219 seconds)
  done (took 1.462183961 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.095430994 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104943468 seconds)
  done (took 0.933971429 seconds)
done (took 3.127488281 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09421747 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.148954534 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09026586 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.112250253 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.210150175 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092116307 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.108696617 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090611712 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.108508785 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093381437 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092273012 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.109808369 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.092516683 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110432625 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090093754 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090224851 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110428974 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089694621 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106844372 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093634975 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090453196 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110747924 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090885216 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107092551 seconds)
  done (took 3.304534331 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.121965854 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.112771505 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102775039 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.118467348 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100340613 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.118979121 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10029243 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.111857151 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101905092 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.113932874 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098671585 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116361483 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096520719 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.11659713 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097159138 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116765214 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.119304691 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095661576 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096876633 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.117659928 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.11819166 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096449559 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.116424882 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102086192 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.117041874 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099173606 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.11449517 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095325117 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119681032 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100005547 seconds)
  done (took 3.983844377 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10475057 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090880053 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.109122494 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104880649 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.108836145 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09494925 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.109591674 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093325407 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09256453 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.108317736 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.093769208 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.10870046 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091590463 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110559867 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094795469 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099657302 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.136660644 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091152739 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.108567294 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092652211 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116916672 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092102071 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.113270981 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091889404 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090307747 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.109493804 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091759286 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108463863 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092925798 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090943316 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.116085754 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100466528 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.108111026 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108443104 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.118288981 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09228991 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.120738987 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091641602 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092432755 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.108264634 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090706127 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108800168 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091565724 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.123955902 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094019666 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092044375 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.109839747 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094146869 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110343789 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095225687 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.108138637 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091311121 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095036893 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111057054 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09944409 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.10790386 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093120222 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.108423756 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093559094 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092312826 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.108065572 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090828786 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.119054671 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092931509 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.143786174 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107101866 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.109558657 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095256437 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.1130911 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.104975701 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111294731 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117826026 seconds)
  done (took 8.158063515 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098719755 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122619377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.093863062 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094057233 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108340121 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091821441 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118829379 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091891369 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111738101 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113839297 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110286168 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094772137 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112419606 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096731701 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109922271 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095289676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121501207 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090293939 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091527119 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114707596 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092711882 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118298429 seconds)
  done (took 3.035257097 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.288076489 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121461597 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.175593669 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115122996 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.138641201 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.132168925 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101267608 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.120062991 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102426638 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125918034 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106194688 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119737107 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.139139701 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106990094 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125638354 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107983167 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119604448 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.125468999 seconds)
  done (took 3.109505069 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.112358379 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.113057836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.124307905 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113739275 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096178581 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.116097141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105029056 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.132488562 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.098298195 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.113649358 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109581111 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115862767 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098827445 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113640429 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09810693 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114671434 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098861901 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113446789 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109190586 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121478646 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104218965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127235252 seconds)
  done (took 3.19023063 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115857393 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114890161 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122980663 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120434033 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091111868 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112482544 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109011958 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.113864417 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106976939 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.115221831 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095358042 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11056419 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105581702 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112862175 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104411993 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112941055 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098462581 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112878188 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09820834 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108102445 seconds)
  done (took 2.926483567 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.147952923 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133564582 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116101516 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14791577 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132730515 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116526313 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148026582 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115166877 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13422191 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135850276 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.133868595 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133272394 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130577774 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.142769033 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11516768 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148121268 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.147992553 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129817409 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134495922 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114925282 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15428822 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134010621 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129834069 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.132900995 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11508385 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133431047 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115280205 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143035636 seconds)
  done (took 4.459756838 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094871953 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094386949 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.109636458 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09131636 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.109172452 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091828705 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091472222 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.1103665 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094195805 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108899407 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094019909 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093972634 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111655036 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094193247 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112172979 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094572452 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093335584 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109266726 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091564392 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109578839 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094429209 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111467686 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094972678 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091002991 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109908953 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094538398 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108919111 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092671535 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094449539 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109022814 seconds)
  done (took 3.749904825 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108284474 seconds)
    (2/2) benchmarking "in"...
    done (took 0.121910634 seconds)
  done (took 0.976240053 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093517914 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134389662 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.093000423 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098006824 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.122058796 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096049629 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.127527406 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121762062 seconds)
  done (took 1.633232281 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.12637702 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.137722042 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.103137577 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.130119909 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.118344766 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.136556897 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.202330706 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103222298 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.122853069 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098285993 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.136855321 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096040248 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.125480009 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104002293 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.124368779 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117444108 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111849444 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10754674 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.122690834 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098653215 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102662909 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.13805371 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.13021919 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107525765 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.118498355 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112708464 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.135449259 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111097704 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.122335413 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115158326 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.123444416 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089902785 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.118875423 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101656573 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111590536 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.117233275 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.139993246 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103729431 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.125926819 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103605835 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126816602 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091539136 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.131313087 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105048383 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.13066715 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103003369 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.120431436 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091570807 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097934815 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.119616248 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091506778 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.119427146 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090906369 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.128666515 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109683537 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144793248 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099103755 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.120945561 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101994469 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.119139237 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104866017 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.121577166 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111896709 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.118499694 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108580922 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.12667221 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108042408 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.11073384 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089213203 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112663684 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110081298 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.14615182 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114780279 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.12140682 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102023976 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.111738719 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104848569 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121642871 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10788319 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.132251757 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101612869 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123107079 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111085789 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.119339466 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10229052 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.123011107 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098560477 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117861462 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097078815 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14819075 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098945334 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.112190479 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099651946 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.132078537 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102084958 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.119297749 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098943468 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.127112449 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089727268 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101492139 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12119173 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10591591 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.138207233 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121139903 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104050949 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.12842739 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110269781 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.122396328 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101589487 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092655295 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122500442 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099354835 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.125944085 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09042419 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.12204947 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104077643 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.121528721 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115450478 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11663303 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104059787 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128605714 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114310886 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.116681358 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092663709 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.121148623 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102264979 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.126219429 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116183672 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.117491231 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092084597 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.109952941 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.11084515 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.120102796 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10788579 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102922325 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.122606043 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090971724 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.11255953 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102532709 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.133697131 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10201817 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.125416823 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112011736 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.125467205 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09999504 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.130639264 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100506857 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.11603345 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111822942 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.123046612 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09144724 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.125914808 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102581337 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.117400722 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10363161 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125936835 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104418156 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.120375694 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099775169 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.121183143 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103385477 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.115416064 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104743934 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098979711 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.135838848 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.120074125 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092328646 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093371172 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.12414335 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098108011 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118663124 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097148156 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.121910878 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103143515 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.122492447 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100633119 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.119736095 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118092616 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129257415 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104436509 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.125263088 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112360638 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.119299611 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106568405 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.118332993 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10437734 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120632188 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111249469 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.124198015 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103960982 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102022329 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.11249076 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106649868 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.129207656 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097450131 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113653784 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097351284 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120729271 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115361724 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.119727829 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103474974 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117360928 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107305905 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126260171 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103013338 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.118505084 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097605156 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102114553 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.127950636 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104618385 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122227404 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113231892 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124081672 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092039113 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126551794 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098611521 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.126554091 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092317611 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.117320721 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098914575 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.123430521 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103497104 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.119871714 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090988822 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111078513 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131507237 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.123186631 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098931495 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101786282 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.136279567 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100964714 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.127753978 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102571815 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.128349451 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.144912781 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098462613 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.120259864 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117601523 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120943735 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090245569 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.125632827 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10013215 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097361259 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118626292 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0995399 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.123736015 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105823713 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.125140021 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091253218 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.121214578 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100249058 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099055101 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.112006877 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113723826 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.124568091 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104846151 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.137989041 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123277425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103985813 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123579506 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102381393 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103047488 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.12327685 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104697851 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.121565981 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100828677 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.116970622 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106477364 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.116332692 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094953728 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.120103448 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103030082 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.12316762 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106767249 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119652479 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1129457 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.12261027 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103958183 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164034017 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098811399 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.116731718 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1042933 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.125298658 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102266177 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.121775828 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092325201 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.128858962 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102866148 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130304573 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102344269 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111130318 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104297635 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.122093565 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104635239 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102853501 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.122848314 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.1013535 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120833236 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103328723 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137932388 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099022589 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.135043736 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107707885 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126894736 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102900161 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.125066086 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102129797 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.116292479 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106084926 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.123533794 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105302808 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.120593155 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108066844 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.124680041 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101780831 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.120214912 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104373065 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.123049247 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106425183 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109678957 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09880937 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.097949428 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121740831 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110799765 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.123255616 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100033218 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119383226 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103501622 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.11950345 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093653409 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.126571137 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107447774 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122169481 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118303391 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.11625703 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104269127 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.139314165 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091177071 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117500281 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095892554 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098389239 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.130988653 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102967142 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.131147205 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104849482 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.117544907 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094812327 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123029573 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099586121 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.11124786 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095699203 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.126519113 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100738421 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099801365 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.122863501 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10683014 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123644351 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.129070774 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102990349 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104760492 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.122925292 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095316673 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.118158237 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.098653663 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.12346546 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10432449 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.117867009 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094985491 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120216669 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105211801 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10361708 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121005568 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101999517 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130090099 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10280616 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.123742088 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108886583 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.110454559 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10453547 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120850488 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101921814 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.117467496 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106361351 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124379681 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105077857 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.130267748 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102979883 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126759587 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103138949 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.113436889 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103015683 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102151256 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122030458 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098588716 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123866588 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113419883 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.115708383 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106605796 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.125625039 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100114371 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.125851046 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105299101 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.125112806 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10955004 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.122259736 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104853726 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.127333485 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10343047 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124615549 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10543862 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.119998433 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110848335 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.117027686 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116957917 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.124133561 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104719215 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.120910199 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101184379 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101822643 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120678116 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101630682 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.132382841 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104396912 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.118103684 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.098860197 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114702829 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106292846 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127546038 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111245737 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.123654629 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105926363 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.111520328 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09498925 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122783257 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100364369 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101514414 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.127556895 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110000636 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.123951812 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099522002 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.119835479 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112089757 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130365541 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108467682 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.120457737 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10967309 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124296279 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104540714 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.120469439 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103352068 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12497206 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108389387 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.121528842 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.099752685 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.136747138 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112507978 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125161872 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102287539 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.127468874 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104143081 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.112855649 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105524841 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.124342078 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111358565 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.124362477 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103725721 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.14067622 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098142574 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.122368438 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110423872 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120555312 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117188258 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111955922 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105919344 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123559447 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106070949 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092846019 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.118640581 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09942823 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.124455022 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.099067014 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.11253942 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120622608 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.131771673 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107045663 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120992819 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101530798 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.1134608 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09320599 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.117741269 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106927183 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.121969331 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118985866 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.117230881 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099952339 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093448777 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123055101 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106222618 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.126744784 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095196418 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.112718438 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10052571 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.126202149 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116467223 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120190192 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102657227 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.124679412 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105559045 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.114212957 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111037544 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094545876 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.127378519 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.140700585 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105530477 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.128330001 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112642816 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.133390828 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105736964 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.112852738 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105271852 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.126064767 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107292627 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106058424 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.127268303 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.150388386 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107105938 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.119035045 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102627834 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107178298 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.120635129 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117544964 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125687599 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104242424 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.128221192 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10114063 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127360569 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113798785 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.129730584 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107456255 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.127089753 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101008897 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.122525327 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099928064 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.122042313 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10630135 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.123718221 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104844525 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126979229 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099022603 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14151871 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118138759 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126178382 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094604724 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.11842265 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100292886 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.092845915 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126186831 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.09663787 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.120119086 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100177359 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119785066 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108763093 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.12661066 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106355238 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124115783 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103376818 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091815646 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.128475656 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104533886 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128778248 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094730917 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.123007141 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104560422 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.133573168 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110541615 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.12135612 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106268502 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.123043011 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108398447 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.113131048 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107580997 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121617664 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104486066 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.118366672 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104202305 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123884995 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107559605 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105718231 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12715399 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104404872 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.128752644 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10571508 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.116195698 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095085463 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.128370537 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097184033 seconds)
  done (took 68.333439952 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.185113008 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10128125 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093086818 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112999214 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.149972738 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096110359 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11230905 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095749651 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09454304 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.135082687 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112268293 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094966336 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.143034947 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.155263991 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12896722 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135160412 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093136318 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116111015 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093277552 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114586328 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142046743 seconds)
  done (took 3.301284206 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.12496868 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.13688454 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135222372 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122755931 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.128804212 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115851221 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.136703751 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135444869 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.140936795 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111707851 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.141158098 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135820985 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111856562 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.129977934 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111235837 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1334468 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.142603437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108493619 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.138224825 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135700306 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113999839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.135991291 seconds)
  done (took 3.620008873 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.109090934 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10235374 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.130041955 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.09565869 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.122165874 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096589389 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.128543814 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099383751 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.129447523 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.104271732 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.120914272 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.103668317 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109070319 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116066278 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101442934 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.119075009 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109982974 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.121660259 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105283435 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115038557 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.147824855 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.115721565 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097044774 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.120777061 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.112639247 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.124357111 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.102231147 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121088141 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.100726989 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102501676 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119008729 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107522971 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.131977523 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101348983 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.119717201 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102959878 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122790172 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096502621 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09785082 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.130229889 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096478091 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123956059 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.1146062 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.119363536 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098831071 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.126292016 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103349818 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.115147607 seconds)
  done (took 6.208437564 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132288858 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168154541 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.1243718 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.164370378 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.142707843 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115103158 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.126284699 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.163959338 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097108835 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.11785633 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124360992 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.141656622 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121516145 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10844128 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122664313 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100888436 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.121531723 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099523067 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12980911 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103169968 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.130875306 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108156348 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.142150282 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.139600802 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107826296 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.119952304 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098883555 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.127761554 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.137002951 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111512549 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127620446 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128927268 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123042521 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.126304348 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103200686 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123149532 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.143849183 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101638528 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1220638 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097570879 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123317162 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109154479 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.127274058 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125704572 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124490686 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.126865917 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101208826 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115550344 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11955023 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123783829 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115897679 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.143664607 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126193301 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10229603 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126930257 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.14316959 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102189958 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.117638455 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107511462 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.139056129 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098310437 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129179533 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.142352957 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104261343 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.13471824 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122136561 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.126880201 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128059163 seconds)
  done (took 9.316841596 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122897107 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.148494974 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125727985 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148029489 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132145766 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112080377 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.131566125 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111643319 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13282621 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.140455935 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112494255 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.195349404 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122954746 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120349681 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132620078 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111869823 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132428865 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111183315 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.133658323 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131000029 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112828675 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.146943146 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111666342 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.146347813 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.151176972 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102900004 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133878897 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130918414 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127125747 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131577424 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151224781 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112802653 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131852765 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.146382415 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133208982 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.133315541 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098895765 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132029541 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111051293 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132870616 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102143549 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.148315086 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.131345304 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103066584 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132301398 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112303178 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.14668511 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.151726193 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.138997308 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121742392 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.132648907 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.146738917 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113770592 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.131703297 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126898536 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.157566659 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147435055 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1455382 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113502883 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.146912474 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.145699105 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.158166817 seconds)
  done (took 8.948379712 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100375126 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098927806 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118755005 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09685537 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119977435 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097953068 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099372271 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120279842 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099602615 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.118903991 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100739043 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096408483 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117341519 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099725121 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117137998 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098582336 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095490358 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117983329 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101354052 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117713496 seconds)
  done (took 2.940752936 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111615513 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.146150324 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.102241105 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132474792 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10470669 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131696447 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10318433 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12388252 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101497538 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124407882 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116910454 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137839569 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120289016 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112186201 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.137111388 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110192902 seconds)
  done (took 2.724929391 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.128420857 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.140247291 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.151338489 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.107917827 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.119428133 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111487521 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.0996779 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.118858476 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.096307914 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.132355164 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108015313 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.133358405 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100502928 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.119969895 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101433686 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.128262411 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.097082573 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12610895 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101226021 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.150770218 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107184725 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.123842508 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102658294 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125329564 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104164649 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128250261 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109524266 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.119702336 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099518386 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123350762 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105449333 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131867469 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096455784 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.127325189 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099593416 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118548358 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101527975 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.122140504 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108910256 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.121246195 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100995676 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124470058 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101903146 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.122500505 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097432207 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.100920607 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.117409716 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10890548 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124522903 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103469544 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122002336 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110131432 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.130442652 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115088362 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.135198604 seconds)
  done (took 7.178313507 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120270685 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125651084 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.109411042 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118296972 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105531854 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.129868322 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106466235 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102927628 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.124617531 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097180001 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125232763 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1054961 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124195072 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105154575 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.124538354 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105687081 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.11543731 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10387993 seconds)
  done (took 2.867256378 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108836387 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099727466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.130870976 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.100858258 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.122037003 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103983672 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117037632 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098588911 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119612948 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101709965 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120226702 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105122828 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098091179 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125684512 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100970807 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122055951 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104067774 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119743864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102824201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116569848 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10476947 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097777706 seconds)
  done (took 3.238579133 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.125620433 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.162795347 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.120373738 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.175270867 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.129688126 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.109055798 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.140577188 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110317402 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.150076621 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.10794552 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.127162294 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.108142053 seconds)
  done (took 2.386654452 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134464595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170847481 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099324478 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125188916 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119358421 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130921819 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108839057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131861592 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145211065 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149120952 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111078025 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144766522 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122997787 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145104507 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138068164 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118522398 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131004829 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129729371 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103923062 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157865743 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109603551 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146299847 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12951817 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110024671 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130215972 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144181974 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125312794 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150069262 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12971194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125939523 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140141939 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108847 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145746187 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149741715 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104510584 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145945112 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129596134 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137914279 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139533981 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14388428 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104175864 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14019678 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144578819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118725644 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14634169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129969394 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118971944 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130163328 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109977249 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16885588 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140280722 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144934206 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119228756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145870289 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145469558 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169139931 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130197948 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146463619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140043845 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151559441 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124466566 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139764925 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144611568 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130163344 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14136314 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145390786 seconds)
  done (took 9.658371183 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157157033 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121713765 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109882464 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151416918 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144906348 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109689415 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131792976 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129371766 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111048105 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123297913 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191582658 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110432178 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14478426 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144431248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111360703 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13006805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110113818 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14509112 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103504918 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168765344 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131469331 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144436335 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124768368 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14586212 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150378629 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1394007 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110959653 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129642838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111027759 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131423497 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118792958 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130538838 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145507914 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101665886 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145402244 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109647025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132314394 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139549883 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110515278 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139439311 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1450942 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138955331 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131135134 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110012444 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152070695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130956071 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110296651 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124901203 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109080261 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125581284 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1513438 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129065505 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.152002356 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145864412 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130183218 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111874733 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130568361 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109925864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130946211 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118469896 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145714091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129618656 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170344162 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111460181 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131247465 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124500098 seconds)
  done (took 9.469486131 seconds)
done (took 179.451370041 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.124965167 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.166655172 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.11862864 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.188456808 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.102706906 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.160099574 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137819819 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.139706253 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10264457 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100826838 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.12412724 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.106618275 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.190722176 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102209895 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.122881505 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108348918 seconds)
  done (took 2.919321794 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.219141091 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.333798583 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130000948 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.131787276 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111958122 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.128063953 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.110197496 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.132036398 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104633888 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.143912979 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106426313 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.128957362 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121689536 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.12844424 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10448124 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.127924399 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122086289 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.126926278 seconds)
  done (took 3.34295833 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.144832259 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.170078953 seconds)
  done (took 1.146316193 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.148772555 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.227616496 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.354319774 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.176298089 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.160733476 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.158679576 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.198548773 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128045264 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.232009321 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.158487179 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.156337317 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111146548 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.164645933 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.139137029 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118293513 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.131356295 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143832005 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135684282 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112876881 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.13593343 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140366279 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.135025223 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.139826627 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115888428 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.220184713 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.156639821 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112632113 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.135924322 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114106769 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.134349897 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.141865433 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137330281 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.155342262 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.219162282 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.140799476 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.216209767 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.145562575 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112023208 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.134442102 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111804724 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.139044702 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.137872712 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132969727 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.132145548 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113532143 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.145609657 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114659922 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.135572031 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123777356 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.147641958 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.144648718 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.122038536 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.234727224 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126989865 seconds)
  done (took 8.99319396 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.95500017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.181274109 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108486877 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.1310351 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146033972 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152715318 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.188931483 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134730116 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.313246982 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.942347896 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.152762498 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127761983 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.306726902 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.301250774 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.223731127 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.414470484 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.804707608 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.147439979 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141046441 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.189674292 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1415795 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168729308 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134523486 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.468197404 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.133838492 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10648029 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140327463 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.144852181 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.208082616 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106932966 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.134451119 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.23254281 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.312740175 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.264959317 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110955717 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.128461515 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105676785 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.237406212 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.313505545 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.282272813 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.209824542 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103052119 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128163809 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125027987 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.159133491 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124059718 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.213436229 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.221849743 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.222501758 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.135971744 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121431528 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143082442 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145293765 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.211118596 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104240767 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.418151311 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.417470526 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106594476 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143637238 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.151794893 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.307124131 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129498711 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.298249613 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143926319 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277872437 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104964662 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.853939159 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.214499442 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128655181 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119538507 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.14126315 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136889251 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124944955 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.20487248 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.439194645 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148898389 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113358898 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127395848 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.262847663 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.128324391 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106509459 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.211684487 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132524819 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120100245 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150509691 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147051526 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.221284601 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.29774596 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148418552 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120016932 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.136752389 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146357885 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112202453 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.258397539 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.293233384 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.207025834 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.280728227 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125552242 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.213289975 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.236230096 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122823244 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.240264191 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11861399 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.150113461 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125699236 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.288959313 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.178257772 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.128101055 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115309962 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139839277 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.180411079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110344763 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13983149 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.217983551 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.513646774 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.214019665 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.125785749 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11083208 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143414791 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210029533 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138362974 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.302873045 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144323328 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.218481991 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.141374315 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104348144 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.142253285 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.214318145 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.147220819 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120980321 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148384541 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117340426 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.321786982 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264402783 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.150265211 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.300804857 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192478324 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.142240159 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.223254156 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143539999 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.218055712 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142773216 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123368914 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133554727 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846748007 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125883201 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.141269366 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113570786 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.226508613 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129523673 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106999478 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.128135066 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104718411 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846024406 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110120004 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.124677728 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10888215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.140847497 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120858762 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140969683 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114062063 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.209950575 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.30936431 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.145429904 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.140460625 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10723384 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.209008026 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.133402701 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108426324 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.127950504 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107982957 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.143503612 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115369619 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130049637 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.222330159 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.207095727 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.294632246 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.594318563 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129675169 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106304768 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.305165644 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105785714 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.380842337 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142099565 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.298963478 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.216900404 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104063599 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.413147341 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.218272949 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.227397729 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.132095814 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.222569669 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102950092 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141566947 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.210832672 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12870224 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11841909 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.206485675 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.152960129 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149249338 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.214668542 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.130561989 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.279096267 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.12515818 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.218384519 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111087649 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146023562 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.385206041 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108133294 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.156150282 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.210926404 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135941523 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108498083 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.858740169 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.130270342 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122313997 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.143175113 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.300049655 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.215572429 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142555035 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120926592 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.146175562 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.212575252 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.258533094 seconds)
  done (took 52.466018573 seconds)
done (took 69.698938568 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.402472148 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.341745445 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.37620707 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.25749993 seconds)
  done (took 2.326230229 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.222818541 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.192179027 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.155547597 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.128752255 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.189721475 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.107866174 seconds)
  done (took 1.852718022 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.645260679 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.565443619 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.436081246 seconds)
  done (took 2.506279528 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.304331686 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.328568829 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.375929458 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.572456993 seconds)
  done (took 2.559122564 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.252461222 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.127772194 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.142652432 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.161397968 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.187268433 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.275451458 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.171086568 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203163303 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135121283 seconds)
  done (took 2.569605094 seconds)
done (took 12.673273733 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.32689206 seconds)
    (2/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.193716624 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.207677345 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.153182045 seconds)
    (5/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115232226 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.202082739 seconds)
    (7/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.209978466 seconds)
    (8/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.351763327 seconds)
    (9/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120764162 seconds)
    (10/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.277491506 seconds)
    (11/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.146196616 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124137953 seconds)
    (13/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.15413344 seconds)
    (14/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.269830159 seconds)
    (15/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.301743329 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13987929 seconds)
    (17/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.127153086 seconds)
    (18/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.248312966 seconds)
    (19/286) benchmarking ("sort", Int8, true)...
    done (took 0.260949557 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.171409513 seconds)
    (21/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.201195217 seconds)
    (22/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.260120115 seconds)
    (23/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.09201459 seconds)
    (24/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.142213969 seconds)
    (25/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.258356898 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.2875575 seconds)
    (27/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120250403 seconds)
    (28/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.182188974 seconds)
    (29/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.166915113 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.261734269 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122490784 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.272385393 seconds)
    (33/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.218408071 seconds)
    (34/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091201615 seconds)
    (35/286) benchmarking ("sort", BigInt, false)...
    done (took 0.30427627 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.129676384 seconds)
    (37/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.213002444 seconds)
    (38/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.23874108 seconds)
    (39/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11184049 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.136808775 seconds)
    (41/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.126663633 seconds)
    (42/286) benchmarking ("sort", Float32, false)...
    done (took 0.203930034 seconds)
    (43/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.104615002 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.139359605 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.169396764 seconds)
    (46/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.279700085 seconds)
    (47/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.08834104 seconds)
    (48/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.14345832 seconds)
    (49/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.210569555 seconds)
    (50/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.139108042 seconds)
    (51/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.143889464 seconds)
    (52/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.192264641 seconds)
    (53/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.274535008 seconds)
    (54/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.177211341 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.13503689 seconds)
    (56/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.115722923 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.150746401 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113940105 seconds)
    (59/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.211038117 seconds)
    (60/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.264604732 seconds)
    (61/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.158006458 seconds)
    (62/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.227954953 seconds)
    (63/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125309787 seconds)
    (64/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.133757303 seconds)
    (65/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.229731955 seconds)
    (66/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.172770154 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.235194305 seconds)
    (68/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.215207315 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090229638 seconds)
    (70/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.232527518 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.147691001 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.149335064 seconds)
    (73/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.138222333 seconds)
    (74/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090196091 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.128621272 seconds)
    (76/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.159312431 seconds)
    (77/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.212774309 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.127266888 seconds)
    (79/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.270152339 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.126549895 seconds)
    (81/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.124626894 seconds)
    (82/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.12228804 seconds)
    (83/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.15974188 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.148646309 seconds)
    (85/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.133730043 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.134261813 seconds)
    (87/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.131953788 seconds)
    (88/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.170328837 seconds)
    (89/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.11153021 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.137261838 seconds)
    (91/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.114243544 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.164593763 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.129702064 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216323637 seconds)
    (95/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.144881678 seconds)
    (96/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.089283859 seconds)
    (97/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.23568928 seconds)
    (98/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091105237 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138105374 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146907954 seconds)
    (101/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.137025051 seconds)
    (102/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.146033825 seconds)
    (103/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111524093 seconds)
    (104/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.170625273 seconds)
    (105/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.092950715 seconds)
    (106/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.135980168 seconds)
    (107/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.161923383 seconds)
    (108/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.184370653 seconds)
    (109/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112490718 seconds)
    (110/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.127410349 seconds)
    (111/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092687687 seconds)
    (112/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.147031879 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.231640654 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122147987 seconds)
    (115/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.17901733 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122897072 seconds)
    (117/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.176010624 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.135205005 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124433922 seconds)
    (120/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.138368835 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130991675 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.11428937 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.19291626 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.145445119 seconds)
    (125/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.143335248 seconds)
    (126/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116551266 seconds)
    (127/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.163737005 seconds)
    (128/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.118623237 seconds)
    (129/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.211027252 seconds)
    (130/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137434563 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.130236416 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116391556 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.113355557 seconds)
    (134/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.197999204 seconds)
    (135/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.14917667 seconds)
    (136/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.16208334 seconds)
    (137/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125946789 seconds)
    (138/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.17357761 seconds)
    (139/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.08895251 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.139073612 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120357131 seconds)
    (142/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.114347544 seconds)
    (143/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.108906576 seconds)
    (144/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139329259 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115822864 seconds)
    (146/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.114737051 seconds)
    (147/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11295252 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.139173699 seconds)
    (149/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16456234 seconds)
    (150/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.120148211 seconds)
    (151/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.096937903 seconds)
    (152/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15786207 seconds)
    (153/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107574184 seconds)
    (154/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.21754125 seconds)
    (155/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.17435938 seconds)
    (156/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.149891189 seconds)
    (157/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.133770294 seconds)
    (158/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.097439636 seconds)
    (159/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.088237404 seconds)
    (160/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.233062217 seconds)
    (161/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.115589914 seconds)
    (162/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.149511392 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.139435365 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114920941 seconds)
    (165/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.114040476 seconds)
    (166/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.089810061 seconds)
    (167/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.176033347 seconds)
    (168/286) benchmarking ("sort", Float32, true)...
    done (took 0.270156808 seconds)
    (169/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.135019975 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.147470994 seconds)
    (171/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.216199732 seconds)
    (172/286) benchmarking ("sort", Float64, true)...
    done (took 0.27168912 seconds)
    (173/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124863208 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140361631 seconds)
    (175/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.113775989 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.139860555 seconds)
    (177/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.096916325 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.140592192 seconds)
    (179/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12684584 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.155193415 seconds)
    (181/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.10531841 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.260393077 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.136363479 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.116624807 seconds)
    (185/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.121972319 seconds)
    (186/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092124746 seconds)
    (187/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090679509 seconds)
    (188/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.116389421 seconds)
    (189/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.115566871 seconds)
    (190/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.12722172 seconds)
    (191/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.118697267 seconds)
    (192/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.137903713 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.125070752 seconds)
    (194/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.13618415 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.094360633 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149138067 seconds)
    (197/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115689873 seconds)
    (198/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.160230795 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123764792 seconds)
    (200/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.142622335 seconds)
    (201/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.099992665 seconds)
    (202/286) benchmarking ("sort", BigInt, true)...
    done (took 0.290188917 seconds)
    (203/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.116502316 seconds)
    (204/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133665163 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.130883334 seconds)
    (206/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113647543 seconds)
    (207/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.137627815 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.152297647 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.135379143 seconds)
    (210/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114180281 seconds)
    (211/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.115806169 seconds)
    (212/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091413688 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.14797962 seconds)
    (214/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.127295604 seconds)
    (215/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.227470279 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114989532 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.1355143 seconds)
    (218/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090796032 seconds)
    (219/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.141546132 seconds)
    (220/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.185985292 seconds)
    (221/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.097605084 seconds)
    (222/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115279561 seconds)
    (223/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.121192782 seconds)
    (224/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091928257 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.159547675 seconds)
    (226/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092230644 seconds)
    (227/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.116432329 seconds)
    (228/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.093639659 seconds)
    (229/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.091455997 seconds)
    (230/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.142348951 seconds)
    (231/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11134551 seconds)
    (232/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.135017407 seconds)
    (233/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.125193442 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13985445 seconds)
    (235/286) benchmarking ("sort", Float64, false)...
    done (took 0.202990566 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107742036 seconds)
    (237/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091308606 seconds)
    (238/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.140239655 seconds)
    (239/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091738379 seconds)
    (240/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.120309201 seconds)
    (241/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.091180988 seconds)
    (242/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092238071 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.139829278 seconds)
    (244/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112565052 seconds)
    (245/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.115473889 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12547157 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.122561015 seconds)
    (248/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092195514 seconds)
    (249/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.139401574 seconds)
    (250/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091846265 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138997863 seconds)
    (252/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.286251397 seconds)
    (253/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.120623885 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143023525 seconds)
    (255/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.115923147 seconds)
    (256/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091353916 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.141703318 seconds)
    (258/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115396662 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.148475012 seconds)
    (260/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.094785605 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.140809401 seconds)
    (262/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.093572156 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.131680002 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109350372 seconds)
    (265/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.152571964 seconds)
    (266/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.245240723 seconds)
    (267/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116029531 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.150268434 seconds)
    (269/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113412129 seconds)
    (270/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.140580955 seconds)
    (271/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.093737112 seconds)
    (272/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.129688293 seconds)
    (273/286) benchmarking ("sort", Int8, false)...
    done (took 0.241301987 seconds)
    (274/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.092891058 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.135231883 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.127481003 seconds)
    (277/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.114798543 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11219791 seconds)
    (279/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090534293 seconds)
    (280/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.115917982 seconds)
    (281/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.115426353 seconds)
    (282/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.116706028 seconds)
    (283/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.093577549 seconds)
    (284/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.115282439 seconds)
    (285/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107569774 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11074835 seconds)
  done (took 43.823129779 seconds)
done (took 44.69020969 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.123728321 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178254337 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.120916343 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.167135278 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125072443 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.150969402 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.141844457 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.12302674 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.146065654 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126558245 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.150255621 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102363165 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.143637071 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121506165 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.144446015 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142752019 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.148852179 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.11768009 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.134972849 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113488074 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.135902854 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114408203 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.137948112 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.101691445 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.142994712 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119389278 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.138599972 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121308994 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.137289313 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109127961 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133468703 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115555747 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.133356103 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123759199 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.135366468 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.113346693 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.144288904 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119744291 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.13788212 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115677921 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115443092 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.138643496 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113682044 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.139981493 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.112897295 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.135568577 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.112332315 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.149262438 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166468938 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110848643 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.116141417 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.143932715 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123643475 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.140621044 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.110424769 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.136316295 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.114143027 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.166764342 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11126911 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136242001 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115343835 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.139923654 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11229413 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.13526539 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112389585 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.143225424 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119383606 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136589782 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119304762 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.137234371 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.124359049 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.13684184 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.111711558 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.132316999 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119804374 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.14171657 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105625746 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112562011 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.138811364 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114073992 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137241521 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108616286 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.138558001 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113972299 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132187977 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103034567 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.132440551 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115166939 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135529676 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.111698438 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.136017152 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114342112 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115342707 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.144417596 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136733555 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115441757 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.136669545 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.114988136 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.138926246 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110696599 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106095728 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13292829 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116558376 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.131462854 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.113856285 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.147357557 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110424557 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.13679246 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.113336463 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.135401825 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.127251251 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.143087972 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11449528 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133958313 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108193476 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.140983121 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110543791 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.13257584 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11084068 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.13704554 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.113521813 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.136559184 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108613224 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.141154227 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123158138 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.106859954 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.13533583 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107876499 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.137914962 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.115556106 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.137619592 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108931491 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.134619912 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105160339 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131625353 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.11031527 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.140451717 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108823878 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.110325302 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.138763171 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111769267 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.137310037 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113430016 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.138525591 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110811151 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.12552657 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111998576 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131802622 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.116150023 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.138042584 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113221693 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.129047463 seconds)
done (took 20.200221363 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.122761423 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.220618376 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.174635806 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.156581566 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.189931226 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.166020126 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.151513158 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.158008913 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.148332118 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.17798468 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.155954034 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.164037463 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.178399202 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126507104 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.166939829 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143831207 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.121063812 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.16299511 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.186051735 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147565063 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.174880817 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.149088258 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14933842 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.176075194 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119447369 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.176338563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.153800643 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121087735 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.151212874 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138520314 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.164816188 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.15185074 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127876254 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.160247271 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12651952 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.1416401 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.165614218 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114623756 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.146109485 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.122639841 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.160302882 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13293601 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.14199321 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.158881972 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122755394 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.149951595 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121197059 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143863556 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121756085 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136539747 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12913426 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.172393833 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144151359 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126584729 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.14966418 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120207747 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.151908816 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.150296929 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127430254 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.150462126 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123823935 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.150127676 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130544075 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.170705388 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.145995982 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127729934 seconds)
  done (took 10.722626412 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.142030363 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.181895635 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.127831772 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.151805861 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.151807254 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.10645543 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.129656369 seconds)
  done (took 1.915120797 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108124895 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.168882464 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.151538025 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.173590897 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133799286 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.178848868 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155096672 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.109056316 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163589473 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123269196 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.165875656 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.201364641 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110268146 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.149924248 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.15297697 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.133408433 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.177816491 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109077565 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142969837 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151363451 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.140330397 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135840108 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.154019423 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10981397 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.158155871 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.111381555 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.218247834 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150246915 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107517544 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143888119 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118151002 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.232283163 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.161817477 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123314101 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131187059 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.169471619 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13571905 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141382135 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141265776 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.141306637 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.136044137 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.142651915 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120181012 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142738621 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119203882 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.150261529 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126790121 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.147100669 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117063275 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.168230426 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.15044251 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135666591 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.135674045 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114863211 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.149271301 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118869485 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152427664 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11744622 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.166942219 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120871681 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.167829283 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.167698411 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.137250289 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.168469546 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132629035 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.160142442 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.159782629 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118124892 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145010715 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120418296 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.168148329 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.1160333 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.150959265 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126558316 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145687224 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.140776514 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.164849732 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115461325 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.149583608 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115109017 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.138400152 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.108568641 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152219688 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114463205 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138225862 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136151501 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151191601 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.143061912 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.116208687 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.165368783 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117551806 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.151602293 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127631732 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.139662969 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133613477 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.171806443 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.15092921 seconds)
  done (took 14.769003535 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114119765 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.110591446 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.142842514 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.111905188 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.134983966 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.110804159 seconds)
  done (took 1.654194352 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.150140155 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.139723878 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.129709574 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.14291975 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185506529 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137487853 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.160787608 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123612853 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158995625 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128979394 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.160504329 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.162362686 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147287893 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.144700992 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137230212 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.145216057 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13668412 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138366394 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128666493 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138530118 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.12984472 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14656736 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113885683 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.163694668 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.142404806 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121554124 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.14370785 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129843181 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153105632 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12541697 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.145112563 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11906355 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.145296949 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123440713 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.164126782 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.144250245 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112210007 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.144436459 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121239807 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142853086 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.140073577 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138277983 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129712876 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144459065 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124927736 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.145185246 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121461941 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144136732 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136431084 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.145322467 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120846153 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145215714 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118791877 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.145231908 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120542831 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.150165145 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144358917 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138708155 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.144170316 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121662983 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.141723461 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11884058 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150325378 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119568215 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142961231 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120125452 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.144981346 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113243581 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138996787 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119693022 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145804406 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116519912 seconds)
  done (took 10.85635953 seconds)
done (took 40.83066348 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.716184907 seconds)
  done (took 1.644467937 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.981102171 seconds)
  done (took 1.913201198 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.409299633 seconds)
  done (took 18.372555291 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.650158376 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.79715297 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.254279115 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.195595693 seconds)
  done (took 3.827963438 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.006634419 seconds)
  done (took 1.954460655 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.366376032 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.285094586 seconds)
  done (took 1.585996874 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.877048152 seconds)
  done (took 1.826184359 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.707767928 seconds)
  done (took 2.650926521 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.441248978 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.226493793 seconds)
  done (took 1.622283691 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.662561796 seconds)
  done (took 1.608493797 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.971129935 seconds)
  done (took 15.92245023 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.284844008 seconds)
  done (took 1.245795726 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.347347221 seconds)
  done (took 1.29744826 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.697550316 seconds)
  done (took 4.647808611 seconds)
done (took 61.059366971 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.123106823 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125471341 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.15059294 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.121561118 seconds)
  done (took 1.466209825 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.132347621 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.147154875 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.127802758 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.147240558 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.131495047 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.148874827 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118561785 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.152228301 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121339513 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149796561 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12244059 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.145878511 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124968668 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.144656227 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116503542 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149103113 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129432964 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.150038984 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121390698 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.149284137 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118188559 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14972349 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.149736595 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121100214 seconds)
  done (took 4.227636235 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.123281443 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.115445645 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.142586689 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.114893318 seconds)
  done (took 1.455779593 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128639024 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.164534746 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138521043 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.153748276 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138956718 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.164504256 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114218676 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.139790038 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117243403 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.153103096 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117320987 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.167741212 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.164039035 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111050762 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155735516 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.107736786 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.139154943 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140883894 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.153447176 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.1296802 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.139691505 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128493137 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.148687732 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.133380091 seconds)
  done (took 4.311416601 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.220905407 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.159126208 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.16910594 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.123971735 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.205842062 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.171581262 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.11436566 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.171736037 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116306619 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.167781969 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118891227 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.205443189 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.167610382 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120078827 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.143546236 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152957256 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.141066043 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.170929363 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118757907 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.157645408 seconds)
  done (took 4.079046997 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126219574 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114264952 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135337575 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114722065 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.147508189 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.117421199 seconds)
  done (took 1.717532078 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110645636 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.108101507 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.133987696 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.107310451 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.137837011 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.108529702 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.106045031 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.133573669 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10731416 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.133157694 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.108239829 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106048347 seconds)
  done (took 2.365188363 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514380421 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114149483 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.153615155 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11542662 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.166638374 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.138195866 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.132804004 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.138795159 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.208001623 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.126098458 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.158493161 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.20408369 seconds)
  done (took 3.135112169 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2731761 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120550507 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.345933848 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.491022333 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193323064 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210208109 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.370770469 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208588105 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.239532633 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168629034 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248153975 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193694224 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186468825 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22140894 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147266312 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.21676233 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222889509 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263159674 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186902789 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266966115 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214997458 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211103747 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231114705 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186190526 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170777558 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205293377 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115107697 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154732359 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226349815 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217614458 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238503614 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190135449 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146361234 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293693926 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292978822 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242936561 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.464726512 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141412573 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.249112052 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.23316823 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.308293729 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174703992 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267797945 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193850932 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133703343 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232395604 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200216038 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.229540042 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.158595362 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172579229 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257603466 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223634285 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.238694373 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171507486 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395842832 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180683543 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176225611 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235701683 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257751352 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247944923 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210525141 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.147894132 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272014063 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229563716 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234989981 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.178594846 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.215795738 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152773458 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224678025 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251545025 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234260426 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212582288 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.304567015 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139796573 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210353119 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215643865 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189169313 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217622124 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200608298 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118566606 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184236293 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167939656 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127628493 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219008589 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119186581 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298572653 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141028697 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.321037992 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306790292 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171927916 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20696428 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210964259 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21632966 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179479714 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.116812161 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183921067 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.204155046 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195461681 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162286714 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170708006 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179871953 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153371452 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159696049 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148004113 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199796172 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13459837 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21215715 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2066369 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.157902904 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209054659 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156906549 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.199991553 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220402345 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238551877 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160841443 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160197461 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249794938 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197045745 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138689235 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223879141 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240247888 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.207442397 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169727765 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224261669 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258014294 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176954713 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246788065 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151006728 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163521327 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.195186521 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201722221 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201108391 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165066464 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154754368 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.194320423 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250961758 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151515073 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137838216 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221717427 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151916601 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128522473 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179242842 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167566837 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145449655 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.188359772 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.167461108 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197420367 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170969218 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191930693 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206542076 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183796284 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269053157 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161195484 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.199484791 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152208772 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.140821242 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.233206284 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239039134 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12712157 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264289124 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.214295447 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286499528 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208128406 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158088142 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23282773 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129922033 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.143705569 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217949198 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204926775 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20947068 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.233198386 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283840394 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.213260123 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190242823 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18372387 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218787246 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.220903129 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211372334 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.179012976 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180079921 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218099219 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.145104789 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120356368 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154043807 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174673491 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132382926 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161035541 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245898697 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212138113 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.301462231 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205993677 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147661676 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232997817 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.15128759 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209772698 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.222686382 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14127982 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.264623051 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230504048 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212326711 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148814293 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222347417 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.14273671 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123457426 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.162174604 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212173868 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132748775 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165226161 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186026639 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23344755 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225375136 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157603619 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.329103431 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213122646 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245296536 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.147044034 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.192883181 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215174185 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170013494 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.22237276 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1627437 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.203721773 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199404156 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181944211 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260653931 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204029348 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219690935 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.3017501 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166149816 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157580633 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185254051 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212448549 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150337018 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202184261 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180538889 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165816359 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165399804 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.170648002 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15372034 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246277859 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17291442 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246976034 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.19365683 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23819165 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121827389 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185720292 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201638598 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175482716 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115331391 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216828658 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249505557 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184719898 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200202382 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224143455 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129043007 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.433925979 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248069817 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244114937 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17009228 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178216025 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176612941 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198066269 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209708286 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233549644 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184264016 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233536321 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197130462 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.146961185 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166566937 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180894428 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157633169 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.196334559 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.165753427 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.192947743 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144797555 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281356632 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150954065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19814037 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215963956 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.173962835 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.162897218 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176327658 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26155051 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198417185 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229139985 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193656708 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.208113592 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239039129 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120082517 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154969649 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.123638422 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234274681 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16061177 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201761426 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.268590138 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324884777 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201381664 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212326516 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166700132 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120928363 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203564772 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185200047 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.317413097 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156430558 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165447959 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246315225 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.181975334 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12822629 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206182137 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397696828 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148943243 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223087799 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.145171206 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.360609093 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149981466 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130874727 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199883479 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217775229 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161520366 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.217622898 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185451286 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181947373 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200677339 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168893068 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274222323 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308807554 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22729061 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229943449 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151115992 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203589713 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210286463 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22477937 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179509693 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.176864504 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171530002 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232793704 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.263996593 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134354018 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206319329 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206655824 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202656477 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244721602 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132826699 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26543291 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131251979 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216136478 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176576148 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120813616 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193798197 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.291017287 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137538202 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223010709 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197863141 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159560383 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123263784 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196659532 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196560237 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180394043 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126506268 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242916534 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.152761001 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207552503 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218494441 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127872218 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191497242 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180103731 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130332406 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178064027 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183118106 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137597597 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.202934566 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239879192 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.159182679 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225182711 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225412193 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209039907 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20272315 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148659874 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.697542429 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124398729 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233093182 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179583792 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249877819 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182959456 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214918651 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203760877 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155963309 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218899069 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187923111 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.256217041 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216972749 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.201615006 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129394105 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184417516 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180015509 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130782344 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187205408 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206616197 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169415047 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136689353 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197035722 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183409066 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.180226893 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14011939 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2390661 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179878849 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24626199 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2352728 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171589729 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21380873 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243893335 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129159517 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207008932 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218783801 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176338419 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195680757 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127331482 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163538619 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21838892 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.118961751 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204661594 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201271517 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2053943 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208283896 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139494313 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203747999 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179289269 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202049358 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121727913 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.193537618 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197858037 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15690129 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12480245 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194932061 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206942091 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.198956584 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124459711 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.201545655 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232975478 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121745122 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163633826 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375696937 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194575816 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253412786 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.192348614 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16453329 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145449495 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197796703 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.19098304 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199362168 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125436268 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158516389 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.158959982 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.189030352 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.190772916 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19788659 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242823327 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205028874 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239414199 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160288727 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.273772957 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170001304 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193613542 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.135635185 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15602983 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175763145 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137456955 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184960581 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.304884659 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216804091 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160592469 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.182575019 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154733909 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12470231 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159983983 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172889776 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194401502 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196781544 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182356452 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113228256 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181158469 seconds)
  done (took 96.764624046 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169281863 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.167805217 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.176164286 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221276918 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197476475 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.277207051 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234946446 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255437686 seconds)
  done (took 2.746816481 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.128744377 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164986172 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.174668215 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.125604766 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.140535082 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.449313044 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.167687029 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.15322694 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.149854583 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.192356006 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.114667142 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.748991793 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119539898 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.152852066 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.136471532 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137803896 seconds)
  done (took 4.298058373 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.769763917 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.596115396 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.122028301 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.301337833 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.287743146 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.208734465 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.799588392 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.245627087 seconds)
  done (took 13.376326635 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.150004522 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.164419189 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.16957676 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.195091474 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149442444 seconds)
  done (took 1.884605832 seconds)
done (took 142.773765922 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.11934931 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122934675 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.146983274 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.122698683 seconds)
  done (took 1.554298813 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.130385768 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100450661 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.129746941 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.098080093 seconds)
  done (took 1.513198077 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.525548814 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.129362653 seconds)
  done (took 1.745734789 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148913495 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.159937635 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.133197678 seconds)
  done (took 1.49620941 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.129313548 seconds)
  done (took 1.187453313 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120260874 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12223371 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.16535403 seconds)
  done (took 1.466358205 seconds)
done (took 10.019980597 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.134366997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.553210826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.408745195 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.161764471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727418927 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429276602 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.066163027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165949182 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198488615 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140035083 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135921481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.72555224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.021108348 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.479495126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004548269 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.482648531 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698370392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142982825 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122319461 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141446069 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011833624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138430732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114842671 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141611223 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.695216356 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.41929574 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141598322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.502008995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113162048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119951708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431673228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112505791 seconds)
  done (took 17.926767131 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116030508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.215021627 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.123677699 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142206184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118640696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141001591 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126103835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160361999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.218712295 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112550111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163751013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111605202 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.145786311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113179046 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165900937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11204015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.14231957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117935948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148819635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117319977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134441535 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139263554 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114598395 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144083509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111934932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15556781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112160816 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.160762118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112745397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.148727613 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119753455 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140699174 seconds)
  done (took 5.466905502 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.168059387 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.229055173 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151660537 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151820447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.206230166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114138504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.242401892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1969874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.220482169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140312427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136784719 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111460044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.183755513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141001887 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140168625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.139364126 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11751963 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142302572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12449214 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142366711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136281482 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139850037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116976704 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116098607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.140825431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129320468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141816404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.160055324 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113232201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120770131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.148355323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111906725 seconds)
  done (took 5.835381127 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124316737 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.152385334 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135955788 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161647879 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.116789009 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.149937116 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125834568 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.115202712 seconds)
  done (took 2.149509857 seconds)
done (took 32.434422518 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.132023995 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.119116141 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.157864338 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128300479 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.151864596 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139253555 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.138750114 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.124837235 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.155134868 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.122445983 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.158988055 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112530831 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.113443873 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.138742192 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128825188 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.146682563 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.129696778 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.151530272 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137908831 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.157617627 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.114687773 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.154660356 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123646222 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.167174355 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.138970318 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.167451947 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.131722245 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.150152701 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.113447744 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.141289293 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132074863 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.171325836 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11518636 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.160062201 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118728544 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.145474929 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.114244743 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.114708258 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.158043681 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.125116972 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.149276894 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.125843223 seconds)
  done (took 6.833068618 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.148312859 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.192871697 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.109915794 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.138677793 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.111047724 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.1891704 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.183955868 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.112353439 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.110058816 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.17321897 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.172563096 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.111915847 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.110057955 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.140014636 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.11028096 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.138516335 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.14284448 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.172421154 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.14985639 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.175404769 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.195349314 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.152142706 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.180748607 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.170734716 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.162423567 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.183828386 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.167085782 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155188171 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.17403576 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.109799021 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.179233428 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149936435 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.139015498 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.109548622 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.189081864 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.184550633 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.146577874 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.190048777 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.176882423 seconds)
  done (took 7.080086732 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126364481 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130005856 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.169290524 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.222015077 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160796525 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156961754 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.125942719 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.166377088 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.134315275 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.144014547 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124328017 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182374662 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133628041 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.152660147 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.12017698 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.160797707 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139628878 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146193018 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121030055 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.165794899 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134568266 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.160393257 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.129434196 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154829098 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114357235 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.159522057 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120678655 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.159436735 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121803494 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.151289194 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.120934725 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.147492469 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12250668 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128342167 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.148287656 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127040694 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.170805223 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.15261956 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126290508 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.185473973 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129824152 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.149321605 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142734525 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.190526017 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115676868 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.153549967 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130355766 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.153066085 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112211257 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.164661648 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127034005 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.143190729 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.141693478 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143902931 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112670079 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159226139 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.116935702 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118493687 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.152221564 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.122430527 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171569983 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120487284 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.159445952 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117545495 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.150171251 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115151239 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141913252 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.125553431 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170033332 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120548313 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.191317524 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114478602 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.152299745 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125654559 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.149378239 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125171606 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142874119 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130054665 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125339192 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.151237322 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125486699 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147554339 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118944031 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.163145246 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.139763105 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.157749695 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151816533 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.1236343 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118743323 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.14482507 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13120862 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144426482 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118533653 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.161735383 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115934536 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14676661 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123041426 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.148889016 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11333203 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159113543 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120648634 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.142040527 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.126183121 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116336093 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.148376392 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125649947 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.149310025 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114777266 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.150995616 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124027068 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.14268586 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12266829 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147635822 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.118786784 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160726643 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.123719757 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118039047 seconds)
  done (took 17.481376406 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.2909066 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.260067091 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.242874079 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.366185066 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.173684575 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147667732 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.25538651 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.206148517 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114726954 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.198563556 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.219450644 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.225664571 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.210576629 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.222781626 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.217723408 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114834132 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.172397738 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.208456346 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.26031158 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.329001845 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.173327908 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.163586865 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171802772 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.199731518 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.168351708 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.16474119 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.14393222 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.173330482 seconds)
  done (took 6.883972397 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138567947 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.193779226 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.124064983 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.181461697 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.176703972 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.116450109 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.15013564 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116725893 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163613748 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137997662 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.146184522 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124760367 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.152253549 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.127091657 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.143002806 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.126771292 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.156954442 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.128523508 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.146166376 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.120483555 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.167541004 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.134800065 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.150227058 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124257675 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.167287705 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124771098 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.14778643 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.175454495 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.130034028 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.180902347 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.110570714 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.155048577 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132965711 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143202233 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124749756 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.146760471 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.117618629 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.146638751 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120577079 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.111573313 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.143742902 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.102718791 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.15533881 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134375218 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153616472 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.118617755 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.151891035 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.119590521 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.150123574 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.11076667 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.14683312 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117833634 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148980581 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.137158715 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.148315577 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.111221657 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.118507869 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.133679387 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.126967708 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.147155404 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108864228 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.152444376 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.10771179 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.152172791 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127116739 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137873385 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124315457 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.146994103 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.121880966 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153786819 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.11970071 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13236664 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.141886339 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.118851262 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161305845 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13207125 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.149428527 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12297517 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.156222395 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114410063 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.131948583 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113494415 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.099024945 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.150694679 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.114082048 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154397006 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.118283722 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.152479237 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.167304111 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129349171 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.152436911 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116023986 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124063546 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.150887017 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111221814 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.150719749 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138048206 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.172283831 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.113230022 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.142167603 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138948882 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.147202293 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.111701961 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.134061778 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127100466 seconds)
  done (took 15.496940729 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.175381014 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.216959516 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.14653383 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138414697 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.187040774 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.205122735 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.13241369 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.124521094 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.146358066 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140723496 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.155921868 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.125864884 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.15604594 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133849244 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.204373334 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.156365067 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.116897742 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162881916 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.122790983 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.220052415 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137589392 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.202248101 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.210117855 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160639236 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121497172 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.200011589 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.208696003 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.130490179 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.158083918 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.182532185 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.160570609 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.209305337 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.212223928 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123902482 seconds)
  done (took 6.688228597 seconds)
done (took 61.529401063 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.211849997 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.386407726 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.16445526 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.181288841 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.22126231 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.190382121 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.16568797 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.360388616 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.848907801 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.152696781 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.165221266 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.16498529 seconds)
done (took 27.29903504 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.217075815 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.325522868 seconds)
    (2/2) benchmarking "String"...
    done (took 1.470189773 seconds)
  done (took 3.877443537 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.164841118 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.165613898 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.39435157 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.163958218 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.166884367 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.183607616 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.166802241 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.167450567 seconds)
  done (took 15.490544576 seconds)
done (took 24.833127218 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.224861624 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.36789597 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.436215425 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.182841842 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.166913164 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.164399216 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.167035372 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.185331839 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.171649496 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.167005184 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.165672887 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.464803668 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.201028875 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.57257873 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.1654302 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.179324864 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.179975292 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.392919626 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.176614821 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.19847853 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.164932201 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.152677634 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.177240987 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.181828519 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.16960946 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.179295881 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.166711636 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.162912418 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.34321722 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.166158709 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.203071254 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.169714861 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.230310355 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.167152449 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.275113035 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.189446979 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.333962341 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.16854343 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.154014877 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.175913624 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.332985379 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.551966482 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.165615652 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.169759351 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.173867207 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.19870222 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.157009587 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.86381775 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.164817643 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.175390176 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.194366324 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.543587606 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.168011145 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.170957893 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.177540913 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.375629449 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.180675912 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.179473635 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.187534104 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.176108762 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.166135621 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.166211975 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.205122295 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.180968906 seconds)
  done (took 140.973648885 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.166293539 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.171672979 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.172415248 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.188225476 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.171865468 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.172216665 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.167264297 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.167936525 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.170660452 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.199203472 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.173174551 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.166870348 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.172464284 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.125961318 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.168692778 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.178486153 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.173653512 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.176096533 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.169253319 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.169407419 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.19489593 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.173149369 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.18566576 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.169516978 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.209339186 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.228740635 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.177273257 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.184415954 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.168222904 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.168734292 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.204729561 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.172499327 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.743217068 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.022605043 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.176954404 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.179158653 seconds)
  done (took 78.864165747 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.165989399 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.165815323 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.168193658 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.166437362 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.196307924 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.170677214 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.697017251 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.69896244 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.88113514 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.576968454 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.379750097 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.411251626 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.17123587 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257047624 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.183425411 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.170378228 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.182764813 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.192570915 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.169754381 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.165333838 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.684971914 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.184329868 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.314394194 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.333582789 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.179076289 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.192689528 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.561451907 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.164102526 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.165518976 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.193564264 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.488283281 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.210031065 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.165597967 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.477272031 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.987599674 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273038135 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.168148577 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.192138579 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.165083396 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.437682486 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.164931561 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.167049397 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.169199623 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.767072688 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.168921374 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.667027247 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.166663065 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.053629166 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.167592728 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.163879336 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.833385445 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.702945203 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.16469096 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.1666603 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.168462784 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.163879363 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.165002915 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.192271345 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.799231519 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.255226657 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.166868446 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.165977884 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.168583324 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.192604805 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.164836497 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.164875574 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.162827821 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.217244437 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.224413708 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.279195872 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.486543534 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.655864926 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.165384043 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25710886 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279242538 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.163639313 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.161971995 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.166168711 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.164040965 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.268990346 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.162292221 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.515524727 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.325182829 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.180573969 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.266084001 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.259986365 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.165118411 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.47399146 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.165923872 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.165214393 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878058202 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254574064 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.163154648 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.164053704 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.1641012 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.513385169 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.654202124 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.314976952 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.16650575 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.165714862 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.168289003 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.527711162 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.650777124 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.771583074 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.169184043 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274227623 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.326552752 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.181484331 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.164006228 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.253818397 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.170913285 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.224571255 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.168787114 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.564637446 seconds)
  done (took 359.478007671 seconds)
done (took 580.396330992 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.924763664 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.831322661 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.966826016 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.853422739 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.823667738 seconds)
  done (took 10.482286128 seconds)
done (took 11.561598519 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.340703923 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.339621876 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.21999335 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.341215338 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.195523027 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.356724585 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.321532047 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.18754394 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.263229228 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.238437071 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.264441043 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215751223 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198968539 seconds)
  done (took 17.565171995 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.417506761 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.170811471 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249468602 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.395434689 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.211144937 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.422589693 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.462273619 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.170710146 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.311333304 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.202360147 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.182435917 seconds)
  done (took 17.278369448 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.416533015 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.170888896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.236983177 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.39408035 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.211391008 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416346388 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.460371122 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.169840226 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.306018664 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.181105582 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.179539638 seconds)
  done (took 17.225647707 seconds)
done (took 53.150351697 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.209558353 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.327740343 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.199943596 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.181515272 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.176886774 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.179305889 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.181825263 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.185295217 seconds)
  done (took 10.726568924 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.174139192 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.174504329 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.176500447 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.176118279 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.173045368 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.173757505 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.175872345 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.172616376 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.175032238 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.173205405 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.173870436 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.177114146 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.175582646 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.176342551 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.174679927 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.174697979 seconds)
  done (took 19.881832707 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.176139778 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.174732793 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.172709077 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.175928949 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.174073821 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.173462184 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.175015734 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.173289931 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.173984304 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.175104827 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.175749201 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.176165461 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.176053957 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.175169667 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.175260048 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.176401804 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.174617607 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.17651709 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.18071554 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.176085871 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.174923004 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.175915251 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.1759579 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.174888116 seconds)
  done (took 29.295281009 seconds)
done (took 60.986773072 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.170236145 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.193521711 seconds)
  done (took 5.45000077 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.237002061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.238312818 seconds)
  done (took 3.563922717 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.17934654 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.17902875 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.179428753 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.179073596 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.177717895 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.178536616 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.179378934 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.178855774 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.179078634 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.178115965 seconds)
  done (took 12.874864411 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.178947473 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.180263414 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.176172213 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.178783142 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.17976707 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.175534858 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.179228575 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.178927205 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.178294005 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.177946768 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.180886902 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.176186093 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.17996728 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.176896919 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.179775559 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.177341373 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.177203939 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.176961495 seconds)
  done (took 22.295951789 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.191473928 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.200744191 seconds)
  done (took 3.479883811 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.308878702 seconds)
    (2/7) benchmarking "second"...
    done (took 1.218531993 seconds)
    (3/7) benchmarking "month"...
    done (took 1.286865468 seconds)
    (4/7) benchmarking "year"...
    done (took 1.275657506 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.219546765 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.197747303 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.22020922 seconds)
  done (took 9.816470064 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.180220459 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.364999686 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.479216144 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.771401164 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.180609048 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.185190599 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.036081525 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.183589675 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.186632503 seconds)
  done (took 13.656819736 seconds)
done (took 72.223065013 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.177823384 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.190825061 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.210406163 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.187660746 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.515951177 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.203615918 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.177028492 seconds)
done (took 15.750475903 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.15819733 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.17213524 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.166457734 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.172113212 seconds)
  done (took 9.759219456 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.123915151 seconds)
    (2/2) benchmarking "read"...
    done (took 1.560495808 seconds)
  done (took 4.773667583 seconds)
done (took 15.622044795 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.182319376 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.181651142 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.179109195 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.184547488 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.179146389 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.18337299 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.17833051 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.179632989 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.18085918 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.181266146 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.182203249 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.182105855 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.182596015 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181965944 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180170596 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179593856 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184221288 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.178724018 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179405299 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.183199307 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.179272356 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.184003095 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.179565079 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.179901048 seconds)
  done (took 29.437910299 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.182529072 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.180616078 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.182785132 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.182172668 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.181769387 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.183981442 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.183341939 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.181094031 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.183950302 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.184218859 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.182473612 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.180813595 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.182934173 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.180166262 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184961774 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.179614088 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.184413587 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182714868 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184894933 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.182935971 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.18451456 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.181284516 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.182057984 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.183410479 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.182849329 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.184438596 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.184077775 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.182046503 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.185896938 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.183601011 seconds)
  done (took 36.578452779 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.187897898 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.191334642 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.18567713 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.185879393 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.185033004 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.186012365 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.187073609 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.184484262 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.186048331 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.185173119 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.187189001 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.185159196 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.185522788 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.18527565 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.186363937 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.1863991 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.185374177 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.187438838 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.187867789 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.18781785 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.186373167 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.18814774 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.186923171 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.186457015 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.186438005 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.187893167 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.187168824 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.188755342 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.186663695 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.185871035 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.186654913 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.186236341 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.186421914 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.186195728 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.188136238 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.186842154 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.190741826 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.193082913 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.187951698 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.187299031 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.187195013 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.187220822 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.187942217 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.188490951 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.186772824 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.188766723 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.18654842 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.187854327 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.187622094 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.188416383 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.188173745 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.18753222 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.187356947 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.188286317 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.187609161 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.187812645 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.188137138 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.189483912 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.1894107 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.187770163 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.188710128 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.187595044 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.18890308 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.187364311 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.189305428 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.188788657 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.188138438 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.187862035 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.189020119 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.189397044 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.189248107 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.188511851 seconds)
  done (took 86.594422183 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.18924243 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.187560336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.187790864 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.187000246 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.186846676 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.188584213 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.186872584 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189380538 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187125631 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.190028277 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189758257 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.18920142 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185716488 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.190395568 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190424425 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.187448019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.190089202 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.187822448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.190630679 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.190356852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19021185 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.188001984 seconds)
  done (took 27.247400242 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190945727 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.190820289 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.187391083 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.191970183 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.189065179 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.191006899 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.191049597 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.192033796 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189949477 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180527165 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177995957 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182452638 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.181229899 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178596972 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178874984 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.181363437 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185478768 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.173221796 seconds)
  done (took 22.43347668 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.172830121 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.172816292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.176309683 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.172313757 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.173948335 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.174491091 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172010999 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.163762427 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.164360913 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.161333129 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.166397503 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16781283 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.168591605 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164640725 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16984157 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.160417492 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.163910959 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160898903 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.159795598 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.160114793 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.161731284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.164057077 seconds)
  done (took 26.756680459 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.164478577 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.158304664 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.155302046 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.156495582 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.156190387 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.159545158 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.159020242 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.15404332 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.16065251 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.158227302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.15479753 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.157009953 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.154983709 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.152077612 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.154313331 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153316165 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.157400612 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.156126364 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154505895 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.150551042 seconds)
  done (took 24.198425489 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.162062233 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.164184835 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.165207918 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165645094 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.163681885 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.16674151 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.164932662 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.16123337 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.163651899 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.162502622 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.162332262 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.159821944 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.162735023 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.160699799 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.165766511 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165377464 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166613488 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166596204 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.168399906 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165256419 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.167389875 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.165857415 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.168424727 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.162683835 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.162578931 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.163644853 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.16307896 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.162985471 seconds)
  done (took 33.66246118 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155002539 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.154273861 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.15433609 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.145987501 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.149014832 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.145195837 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.148493181 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.146313819 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.149526611 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.147256705 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.148586823 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.147080272 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.147533032 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.146006323 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.144784349 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.14395247 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14702527 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.143099772 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.144967557 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143383334 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.146076301 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146018953 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.146060042 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.144186599 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.140909007 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.147507662 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.145519737 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.144751093 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.145973224 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.143464816 seconds)
  done (took 35.468599882 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.190893393 seconds)
    (2/2) benchmarking "in"...
    done (took 1.19196981 seconds)
  done (took 3.438036992 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.143796866 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.146330316 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.143642528 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.143533358 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.142587604 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.145460464 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.146766185 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.143412126 seconds)
  done (took 10.21137393 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.145119588 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.149713198 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.147271742 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.149504881 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.149732895 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.147296678 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.154810083 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.167988444 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.151177255 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.151090696 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.157002008 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.603686585 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.153555461 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.151262267 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.151072408 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.154518223 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.154535162 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.151439708 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.151731772 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.150150063 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.152897803 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.152352549 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.15495918 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.150247439 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.152416932 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.160722998 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.154688158 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.153630166 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.153030616 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.156256464 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.152342549 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.147864322 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.154430335 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.151452057 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.151008273 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.153206251 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.161346708 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.171951105 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.161338304 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.155000923 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.153442769 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.152904746 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.152913897 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.155417717 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.157231847 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.155128818 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.153430125 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.151000533 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.153203401 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.156515452 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.156452979 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.151696331 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.150901502 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.154986401 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.155636331 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.159788138 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.170665542 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.156117123 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.16078798 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.164229923 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.165124904 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.173839569 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.155852211 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.156050585 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.164152825 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.172855711 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16167596 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.166844308 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.154920356 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.154166518 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.160164957 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.167400163 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.174199307 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.158164795 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.157211806 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.157204443 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.156736864 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.155144097 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.161932856 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.176014008 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.156713674 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.156671055 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.167028881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173921222 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.156956465 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.155806553 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.157077213 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.157500811 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.156042076 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.163318489 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.169293562 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.157973025 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.152159092 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.155281521 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.156673729 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.158719745 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.15520744 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.154936747 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.151432798 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.15552529 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.160119308 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.157349612 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.162350211 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.156330773 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.155108519 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.164197797 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.157149943 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.157655527 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.163592593 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.155904622 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.157075045 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.158590486 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.163185462 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.154184448 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.159762657 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.162148951 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.157601371 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.157381275 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.15913733 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.158071258 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.164258703 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.18145718 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.158361269 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.159595435 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.161119956 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.165009877 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.159519417 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.16140189 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.160321159 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.15591394 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.156388887 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.162428441 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.162606754 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.160371334 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.161512799 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16116126 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.159329996 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.161007301 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.160991346 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.16326817 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.160951002 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.163304976 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.16113616 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.161201379 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.161091563 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.162837529 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.166019049 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.159172704 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.163077817 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.161915819 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.150920282 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.152622613 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.155070167 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.153159409 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.150183996 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.151077585 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.150637669 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.152135294 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.151224738 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.149023189 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.148630657 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.150419724 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.149491171 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.149925905 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.152032995 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.14858429 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.144409374 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.148794745 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.148605222 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.148018033 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.148134333 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.14888654 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.150854728 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.155264658 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.149213532 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.145974691 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.152962144 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.151222967 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.149001168 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.147624172 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.151448266 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.153662579 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.150856848 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.156238576 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.151678588 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.149517865 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.150983132 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.148300619 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.149469095 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.151892282 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.152473479 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.154565679 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.160329621 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.170817129 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.153417886 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.154427613 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.151673294 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.154362586 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.15371858 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.151616357 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.151514299 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.151192173 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.15085671 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.149788546 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.151310085 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.152042513 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.149942315 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.152759743 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.15116554 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.150955039 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.154020078 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.151498231 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.152507829 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.14945719 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.152591089 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.15429808 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.150747703 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.151254579 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.152765712 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.152322491 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.152243394 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.151695032 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.159617799 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.150855554 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.153785334 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.154275213 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.151964852 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.151087906 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.151597564 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.155186153 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.152226669 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.160612096 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.16693073 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.15485086 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.160091525 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.169499511 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.151852764 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.154988996 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.15335602 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.149350382 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.154525424 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.158700699 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.151628556 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.153489406 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.156334888 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.153073287 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.155397291 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.160990631 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.152461413 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.15371866 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.152178021 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.154048535 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.152105604 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.152752038 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.155635907 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.154483197 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.15700157 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.154414894 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.155509641 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.153421484 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.154355043 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.153262683 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.157079667 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.156413169 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.161001325 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.160409956 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.155032812 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.155878972 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.157277063 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.158214654 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.156633377 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.156804365 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.155784397 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.166151693 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.173108136 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.161941616 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.156119679 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.155635412 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159390318 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.153482195 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.156107228 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.156908696 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.156222048 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.157445834 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.155162182 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.153643891 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.158098277 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.154744285 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.155807841 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.156579337 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.159564491 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.157766615 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.155136995 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.157136035 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.158282512 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.158122001 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.154993114 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.157435859 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.16096508 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.158981487 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.156122157 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.158688144 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.164847771 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.17378999 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.156570135 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.15740506 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.158086225 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.157522148 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.159020173 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.157685288 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.158527285 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.162095254 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.16192518 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.163323915 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.1601461 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.166833661 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.162377104 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.161600455 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.16093647 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.156856208 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.158564002 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.158332977 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.160024705 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.164563677 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.176448341 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.161960038 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.162449656 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.160471615 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.161451443 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.160733047 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.163895656 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.16537603 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.162603657 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171155707 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.183901419 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.165461364 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165683996 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.158959177 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.163157694 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.163194341 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.160883991 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.165071348 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.163674918 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.166020657 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.160504358 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.161297117 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.162859586 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.162306787 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.163168671 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.158295379 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.162248456 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.168309688 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.181577004 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.165093015 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.161689103 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.166654086 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.163210063 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.168291601 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.180511507 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.162363832 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.163165812 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.1606639 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.162479494 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.162859935 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.162835755 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.164354805 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.161468215 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.167520018 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.162863334 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.164986827 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.166031409 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.164758477 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.163750809 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.171387249 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.185637022 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.165820283 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.166441694 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.160610698 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.163152435 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.16501639 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.164092789 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.162559762 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.165204674 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172043718 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.170762341 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.16428281 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.163424089 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.167039187 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.163538954 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.166554014 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.163090493 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.164166048 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.164418521 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.164828826 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.163823615 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.167982475 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.163845427 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.163140637 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.165001122 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.167218735 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.170787222 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.165099943 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.165436209 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.164313189 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.167364927 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.166210855 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.166568954 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.167527998 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.168182022 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.16697898 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.166267992 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.170865789 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.170932677 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.168132151 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.166563552 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.167612865 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.165386231 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.167749782 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.166428369 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.167088988 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.166791127 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.164859747 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.166942464 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.16480827 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.166916573 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.167381576 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.166443968 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166517851 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.167673323 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.171251694 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167654507 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.164638343 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.167190921 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.167205643 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.164176568 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.169549482 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.171587263 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.1674495 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.17373371 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.172773903 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.170566921 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.167809592 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.168581178 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.170644722 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.168380906 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.168491174 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.167598911 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.169433694 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.169454752 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.170572395 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.169289515 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.172702581 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.168272781 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.169462359 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177201314 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.188471094 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.170616029 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.169429079 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.17248845 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.169568958 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.165125041 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.168634574 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.166679462 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.176000295 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.184190353 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.170940688 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.168733381 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.169290417 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.169813235 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.172621282 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.170012804 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.170187247 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.168275583 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.169196379 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.171190379 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.171731998 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.164796047 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.16736881 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.169851913 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.173070235 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.176080117 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.168474298 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.171575402 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.170411347 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.171522221 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.171818416 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.170400488 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.168057751 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.167643888 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.169513917 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.170993778 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.170660165 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.171704636 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.170216031 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.172575273 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.171299352 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.172479324 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.173549226 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.179423937 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.174764068 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.167634826 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.170242446 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.173083484 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.172628812 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.171380794 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.170428642 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172249344 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.173313892 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.171566531 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173638254 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.172317229 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.174048725 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.184771437 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.191731181 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.172154891 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.173354203 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.176266146 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.172702754 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.169178988 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.172503761 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.171788908 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.176909336 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.178967785 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.172835635 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.178425836 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.189831106 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.173224136 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.175549419 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.176345679 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.17561535 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.175510114 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.174135585 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.174984223 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.177637936 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.186685245 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177183826 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.18109105 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.200571198 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.194296656 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.176018596 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.175598811 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17498911 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.173574845 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.177078908 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.175776601 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.172882283 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.176286007 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.175674788 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.175894187 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.179936347 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.176744149 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.178497191 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.176074805 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.174426643 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.175930004 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.172795623 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.17310516 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.173782258 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.174259766 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.175176481 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.176018924 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.173916916 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187467936 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.200647621 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.177504991 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.176456882 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.171734161 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.179123297 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.178607554 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.18171754 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.181922041 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.174591314 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.17644887 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.177258075 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.177469949 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.175753971 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.177894174 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.175854816 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.177052633 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.175072673 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.187742475 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.19886348 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.180867297 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.179993409 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.179043518 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.178604014 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.175245564 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.178141573 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.175912628 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.178239366 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.181206626 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.180128394 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.177290351 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.176812966 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.18117059 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.183891509 seconds)
  done (took 694.772008624 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.175690083 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.176581707 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.177946055 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.175494397 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.17558342 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176274272 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.176551057 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.175695922 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.176073128 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.17620036 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.176391563 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177959155 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.175311924 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.176673213 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173940467 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.175854838 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176306402 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.174832004 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.175722343 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.179187947 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.178104268 seconds)
  done (took 25.786314884 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.179567561 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.175986874 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.178909676 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.17916038 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.177792009 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.17848652 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.176441898 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180471911 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.180117084 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177588094 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.180352081 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180349777 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.177381858 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.177226925 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176425378 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.181490784 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.181972525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.177209254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.179761063 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.17787816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.178914007 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.177524751 seconds)
  done (took 27.016706515 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.181005003 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.181515228 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.181621825 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.178657595 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.181718547 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.17818515 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.182865529 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.180739445 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.179875358 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.181213171 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.179304169 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.183239432 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.187049515 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.182397867 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.183086151 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.180713381 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.181853881 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.182122601 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.182215947 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.176853699 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.187029112 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.179463443 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.178475042 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.17923624 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.183438195 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.183982434 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.181565992 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.182646104 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.18280116 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.184979595 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.181720955 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.182401013 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.184039626 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.183770539 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.183207027 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.184439059 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.183264256 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.177559999 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.181679065 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.192754246 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.199845955 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.181852936 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.188885978 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.185112647 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.182034139 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.184183857 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.187643114 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.180576906 seconds)
  done (took 57.863768311 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.184082993 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.184278383 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.181210239 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.185300254 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.184430819 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.183688911 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.185118979 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.184811735 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.179398108 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.179922121 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.185120162 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.182677118 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.181298616 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.184058553 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.182540498 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.180854124 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.181242963 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.181900779 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.181290206 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.181579734 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.182321237 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.185293752 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.186023095 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.181514045 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.18613925 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.182755898 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.1823923 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.18506507 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.183173814 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.182034993 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.185665648 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.18439511 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.186072514 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.18257842 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.183633306 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.185702691 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.185915821 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.183508235 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.186845062 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.183033312 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.185843284 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.187798258 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.186777225 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.186375003 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.184589666 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.185447433 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.183657625 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.183243456 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.183141946 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.186980118 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.187304751 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.184710185 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.18777279 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.185197963 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.186266167 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.18631041 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.184654055 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.18306193 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.185832228 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.184136179 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.184018916 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.188240728 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.186748211 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.18861427 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.188390049 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.186009099 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.184266366 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.188188669 seconds)
  done (took 81.631841335 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.187123602 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.186022496 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.188979865 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.187372496 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.187688285 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.188641361 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.187380881 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.188688465 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.188704939 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.18853226 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.188247153 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.187983987 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.189076846 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.189650875 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.186973275 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.188623537 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.188513123 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.187891891 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.187291416 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.188875011 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.189079769 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.188106651 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.188138093 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.186494693 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.189835053 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.189229293 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.189543192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.188847538 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186988277 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.187365155 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.18924973 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.189673414 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.189061956 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.189078615 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.188939516 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.189610994 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.190221729 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.187744011 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.189383255 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.190389927 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.189788442 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.191143699 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.190242254 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.189219269 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.191198903 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.189674477 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.190905241 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.192236309 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.191363216 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.19077462 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.189085028 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.192114979 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194896272 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.189904345 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.190030152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.19212548 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190934315 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.190869533 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.18886826 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.190859471 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.190569923 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.190699844 seconds)
  done (took 74.82947366 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190490321 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.191441841 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.188053069 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.188573692 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.190729731 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.188673263 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.191309179 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.190782022 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.192070441 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.190024147 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190187535 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.187011094 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18972814 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190590913 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.190315193 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189753686 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189472476 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.187791587 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.191622247 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.189605238 seconds)
  done (took 24.894741436 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.18831927 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.191565926 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.188162633 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.190121977 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.193051401 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.190297725 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.192094501 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193736441 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188879918 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191600257 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.190953159 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.192854045 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189565777 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.189469928 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.191924413 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.187858373 seconds)
  done (took 20.14670602 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.19007145 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.191978761 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.192103944 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.193867778 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.190391995 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.189820644 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.192887508 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.189914828 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.19056066 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.193957072 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.192736317 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.194837194 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.193432747 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.193817678 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.190644512 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.192470581 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.192222058 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.191035084 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.193303912 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.192374874 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.192301912 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.191291021 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.194458526 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.194601731 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.191399218 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.19144207 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.192597075 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.193068535 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.191856937 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.195091738 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.192601298 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.191365573 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.192197739 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.193996967 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.196749869 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.192111097 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.196312403 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.194885754 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.19646196 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.195055362 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.198030604 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.192262163 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.194817648 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.195471192 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.192039572 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.193427464 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.192562728 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.193339826 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.194237845 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.19345866 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.196509429 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.198321373 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.196101418 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.195387198 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.197114216 seconds)
  done (took 66.734561208 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195892063 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.19764726 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.193094814 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.195413134 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.197492938 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.192434831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.198330487 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.195575819 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193796107 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.196612339 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.195253511 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.194912664 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196535652 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.19696274 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.19324461 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199301797 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.194067788 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.195926064 seconds)
  done (took 22.624451126 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.195544963 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.197243028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.19777829 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.1951842 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.195927517 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199307147 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196875271 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.197829884 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199302453 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.196046571 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195432807 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.199913798 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199087516 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.197848165 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.197530371 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195477463 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.196726292 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198859214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.196999287 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196168927 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198073535 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19994475 seconds)
  done (took 27.446220733 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.197503054 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.197001626 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.196984622 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.214739375 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.214087732 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.19590127 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.198309403 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.197892813 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.21969527 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.246013329 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.242206247 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.21475245 seconds)
  done (took 15.637113578 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197317579 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199063717 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.197734425 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202026307 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201132655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19786825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197109935 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195192116 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200461314 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199478429 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195005709 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200304986 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201772889 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198239657 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202650299 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201479511 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199057836 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200073054 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199072243 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202236663 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199417487 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201046806 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199651177 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199872308 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201004166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20059834 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205445233 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197414974 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19823985 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201415623 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202573257 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197763669 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20289696 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199110036 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202520445 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202881301 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199941108 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19941703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201490565 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198712105 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.200920429 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199714647 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20004153 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199589554 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199939582 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20110249 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199681333 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199291277 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200343273 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203412793 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203771987 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201087073 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204548195 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201205315 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20225063 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204677298 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20156461 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201576732 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200658099 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203123475 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201673042 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202563118 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202572691 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202093811 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205338256 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202705107 seconds)
  done (took 80.348396182 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19982597 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.203704515 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202174055 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202105338 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201334504 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202047656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201558554 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203029888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201382911 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203773466 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204933614 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2027041 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20379761 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201901883 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202810186 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203440229 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20451611 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202449393 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202675415 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206968087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203117383 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204081796 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20595956 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205344975 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202355672 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20653628 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20299273 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202860721 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204959198 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203032776 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2038758 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203913226 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203815981 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.204813946 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203768485 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203927675 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204784289 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205181654 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203638195 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207674642 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205243955 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207919125 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20387754 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204072046 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206970411 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206331114 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20648385 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203764719 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20402012 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206346957 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204365211 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204047848 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203335882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207005003 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204557345 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204371468 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205677042 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206596817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204610539 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208222972 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205087558 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206128122 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2085986 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205158954 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204430586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206123948 seconds)
  done (took 80.596660205 seconds)
done (took 1637.444979839 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.370383862 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.324469603 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.206910171 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.221963997 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.207250988 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.200443933 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.21468946 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.20719276 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.206237967 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.207451762 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.207249351 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.395175538 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.262565326 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.205104851 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.207163065 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.303759424 seconds)
  done (took 25.05949573 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.230402955 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.216819162 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.323362904 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.230045802 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.23856412 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.391718845 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.269814493 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.220936966 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.37519406 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.255818316 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.22031635 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.237086695 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.213674692 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.207321694 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.230598002 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.393734111 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.451986819 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.2056136 seconds)
  done (took 27.026419719 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.631068493 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.223598021 seconds)
  done (took 4.9697805 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.235618924 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.220346116 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.219812044 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.215516496 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.205602785 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.207299901 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.218131966 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.211615899 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.21526768 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.336846752 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.22271643 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.231043264 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.236858939 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.219246087 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.217350679 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.256101791 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.369495972 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.216852741 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.214808467 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.224940927 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.219236958 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.31556151 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.257346318 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.215717658 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.335639435 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.216088633 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.222382368 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.224384313 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.361511386 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.217099943 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.220668194 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.216485278 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.218869848 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.119585957 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.734238726 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.211217755 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.257220651 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.226916376 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.217193488 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.364998666 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.22209146 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.225213625 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.221489625 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.728459059 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.36573469 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.332387551 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.225924276 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.239421646 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.222718245 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.284206005 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.221881425 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.2226094 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.263648362 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.00210794 seconds)
  done (took 78.967149636 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.224590375 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.213949172 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.389803697 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.22839148 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.212530625 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.212641919 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.225395692 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.481391046 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.256997971 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.212249228 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.500055502 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.767561694 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.228491976 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.274701501 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.090912451 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.215886014 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.215019338 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.228450118 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.212464708 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.215947202 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750838959 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.214673074 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.212061695 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.36261994 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.25268708 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.713275815 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.215255744 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.222668532 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.216541172 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.211968852 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.717320484 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.231494758 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.280743272 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.211717325 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.483782592 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.574385142 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.536886706 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.222751625 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.245474677 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.21492919 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.241621229 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.695540538 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.556474817 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.211843891 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.216232051 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.703332749 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.215380403 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.219995436 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.221063908 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.464074507 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.215767709 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.216887317 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.229493847 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.218335269 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.215110134 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.218582539 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.295267163 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.713611289 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.216953135 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.21658051 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.23715636 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.218617858 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.22201781 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.217459574 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.229674921 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.561791184 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.370896897 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.224810163 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.556868123 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.717650274 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.232949645 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.806168953 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.23111031 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.245005314 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.268372893 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.217330464 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.21465323 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721949114 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.247930085 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.217463404 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.540804607 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.220161057 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.500879076 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.235000136 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.218979935 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765436787 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.220614976 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.22487518 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.218763509 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.231561753 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.218281231 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.222884641 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.507093327 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.252973888 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.218190214 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.219814856 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.260220326 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.218825712 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.22562966 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.222873784 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.78602516 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.236757367 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.217502256 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.22077059 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.218622394 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.216514238 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.22074738 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.218598216 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.484449039 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.22260374 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.222020104 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.218538287 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.219374141 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.242701965 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.372236701 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.225423572 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.511921402 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.219671287 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.219100577 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.21887419 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.218215715 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.249690498 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.218232545 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.227582094 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.077858732 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.479495384 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.238474024 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.230986366 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.222113161 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.220658203 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.220650485 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.21882595 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.268074629 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.223280505 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.970444632 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.24905982 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.257666401 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.219264087 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.223920097 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.223624055 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.222813547 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2210464 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.510139358 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.489098394 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.369126575 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.226907356 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.221591442 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960579545 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.28484753 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.402407802 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.240440523 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.221758375 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.468896516 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.385015685 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.222326908 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.221303899 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.223155976 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479982732 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.224772238 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.537686514 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.753510477 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.237682958 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.229616242 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.975519302 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.941534479 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.226216452 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.226605646 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.50551933 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.238299057 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.222978307 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.22277988 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.223485531 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.237069353 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.22498034 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.22997577 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.225230311 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.224449368 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.283884389 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.415050521 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.240065464 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.229912108 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.717744614 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.248431945 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.229285132 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.228176327 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.225258349 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.225185817 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.291652991 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.228636146 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.253646311 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.223891225 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.230659269 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.735452551 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.223998492 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.225702971 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.416541124 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906042853 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.239364026 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.23009635 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.238277411 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.150086195 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74231884 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.284189944 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.519074987 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.232334859 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.26217503 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.226412965 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.279241656 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.744637798 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.229929331 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.2419403 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87371986 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.237340953 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.855437453 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.22700701 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.227659874 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816914923 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.238643094 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.228079852 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.224739332 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.226727941 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.532937011 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.227386356 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.242730201 seconds)
  done (took 472.244896613 seconds)
done (took 609.378242504 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.22476528 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.230867287 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.214789986 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.23218821 seconds)
  done (took 10.037756411 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.236583087 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.232958271 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.242099836 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.230450069 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.235657351 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.231288609 seconds)
  done (took 8.543919139 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.225494524 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.233907719 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.233468893 seconds)
  done (took 7.827980314 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.432742968 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.245306342 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.559340319 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.250235811 seconds)
  done (took 8.625215982 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.244056745 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.24390242 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.245527427 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.237843239 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.238899545 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.238760999 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.239509485 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.239196999 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.241219623 seconds)
  done (took 12.304687305 seconds)
done (took 48.474323187 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.300125933 seconds)
    (2/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.381075222 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.387311545 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.264871069 seconds)
    (5/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.244274991 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.230215872 seconds)
    (7/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.257697218 seconds)
    (8/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.316336487 seconds)
    (9/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.243781847 seconds)
    (10/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.974067711 seconds)
    (11/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.26628193 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.240123994 seconds)
    (13/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.279317752 seconds)
    (14/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.875549068 seconds)
    (15/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.409001777 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.237757818 seconds)
    (17/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.246904718 seconds)
    (18/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.305882933 seconds)
    (19/286) benchmarking ("sort", Int8, true)...
    done (took 1.609788195 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.275516095 seconds)
    (21/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.401140313 seconds)
    (22/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.912683729 seconds)
    (23/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.965792017 seconds)
    (24/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.263644875 seconds)
    (25/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.360133706 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.216941994 seconds)
    (27/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.278547787 seconds)
    (28/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.351035223 seconds)
    (29/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.260815093 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 1.647318736 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.248570039 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.363636305 seconds)
    (33/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.95835582 seconds)
    (34/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.923649368 seconds)
    (35/286) benchmarking ("sort", BigInt, false)...
    done (took 2.233683387 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.248419087 seconds)
    (37/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.357413498 seconds)
    (38/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.319862475 seconds)
    (39/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.244979568 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.311663159 seconds)
    (41/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.247795691 seconds)
    (42/286) benchmarking ("sort", Float32, false)...
    done (took 1.433551952 seconds)
    (43/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.380034326 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.251888163 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.264913819 seconds)
    (46/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.964717504 seconds)
    (47/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.286637508 seconds)
    (48/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.239549663 seconds)
    (49/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.285909523 seconds)
    (50/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.258560043 seconds)
    (51/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.271454767 seconds)
    (52/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.355498396 seconds)
    (53/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.305095491 seconds)
    (54/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.319603729 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.24444371 seconds)
    (56/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.291458227 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.279929276 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.28443373 seconds)
    (59/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.997316544 seconds)
    (60/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.242556424 seconds)
    (61/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.526111999 seconds)
    (62/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.331430624 seconds)
    (63/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.249229763 seconds)
    (64/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.248093314 seconds)
    (65/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.218014809 seconds)
    (66/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.297855624 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.334558579 seconds)
    (68/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.219680202 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.332434128 seconds)
    (70/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.380772198 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.254724547 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.330743542 seconds)
    (73/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.242443409 seconds)
    (74/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.360847331 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.327844911 seconds)
    (76/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.25973908 seconds)
    (77/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.354594327 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 1.467267466 seconds)
    (79/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.288797665 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.250514242 seconds)
    (81/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.217943599 seconds)
    (82/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.289863173 seconds)
    (83/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.417427512 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.333618995 seconds)
    (85/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.248549443 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.254867817 seconds)
    (87/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.249789769 seconds)
    (88/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.284381506 seconds)
    (89/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.263683214 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.285522234 seconds)
    (91/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.2509817 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.31983283 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.352888133 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.239436679 seconds)
    (95/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.374318965 seconds)
    (96/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.288179888 seconds)
    (97/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.221950025 seconds)
    (98/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.259678581 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.289841798 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.259134385 seconds)
    (101/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.283395492 seconds)
    (102/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.2487897 seconds)
    (103/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.235519533 seconds)
    (104/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.280235863 seconds)
    (105/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.891095825 seconds)
    (106/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.239174358 seconds)
    (107/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.249990314 seconds)
    (108/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.259109674 seconds)
    (109/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.331509703 seconds)
    (110/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.226200863 seconds)
    (111/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.225873851 seconds)
    (112/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.270125455 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.269519954 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.244951108 seconds)
    (115/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.296392411 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.269248035 seconds)
    (117/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.243592911 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.318399181 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.270570771 seconds)
    (120/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.245927595 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.255818026 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.974565745 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.398754728 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.265129047 seconds)
    (125/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.254349805 seconds)
    (126/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.244418896 seconds)
    (127/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.436312648 seconds)
    (128/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.500039338 seconds)
    (129/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.963532747 seconds)
    (130/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.247916221 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.320107357 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.250309782 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.501681179 seconds)
    (134/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.1068509 seconds)
    (135/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.265764538 seconds)
    (136/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.423863179 seconds)
    (137/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.417270789 seconds)
    (138/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.29171462 seconds)
    (139/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.314167935 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.345735724 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.248130473 seconds)
    (142/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.89732873 seconds)
    (143/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.298227096 seconds)
    (144/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.24954251 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.340607988 seconds)
    (146/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.430017326 seconds)
    (147/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.297799725 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.396844122 seconds)
    (149/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.240731113 seconds)
    (150/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.316217915 seconds)
    (151/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.268664734 seconds)
    (152/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.257892681 seconds)
    (153/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.286471427 seconds)
    (154/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.050649332 seconds)
    (155/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.249625882 seconds)
    (156/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.248288773 seconds)
    (157/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.247640786 seconds)
    (158/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.269369322 seconds)
    (159/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.254732635 seconds)
    (160/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.923964796 seconds)
    (161/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.226210293 seconds)
    (162/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.311540561 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.308135939 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.249310044 seconds)
    (165/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.009345251 seconds)
    (166/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.372078294 seconds)
    (167/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.263900331 seconds)
    (168/286) benchmarking ("sort", Float32, true)...
    done (took 1.802785341 seconds)
    (169/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.25882244 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.249185629 seconds)
    (171/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.315746045 seconds)
    (172/286) benchmarking ("sort", Float64, true)...
    done (took 1.876620496 seconds)
    (173/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.259145731 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.248720328 seconds)
    (175/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.251664259 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.332985616 seconds)
    (177/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.272994064 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.322722708 seconds)
    (179/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.423295421 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.436705866 seconds)
    (181/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.385676147 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 1.465129952 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.252217315 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.402516761 seconds)
    (185/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.361725507 seconds)
    (186/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.385303298 seconds)
    (187/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.359087866 seconds)
    (188/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.227136494 seconds)
    (189/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.262794545 seconds)
    (190/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.384396697 seconds)
    (191/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.277802696 seconds)
    (192/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.259039067 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.303747482 seconds)
    (194/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.251981883 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.890322222 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.332745492 seconds)
    (197/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.250996386 seconds)
    (198/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.250243104 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.265689702 seconds)
    (200/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.260814672 seconds)
    (201/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.240952392 seconds)
    (202/286) benchmarking ("sort", BigInt, true)...
    done (took 2.248386558 seconds)
    (203/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.327427513 seconds)
    (204/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.262022686 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.323077982 seconds)
    (206/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.261218059 seconds)
    (207/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.276741294 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.262255352 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.249432069 seconds)
    (210/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.251713325 seconds)
    (211/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.061939738 seconds)
    (212/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.296940463 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.446948028 seconds)
    (214/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.542422713 seconds)
    (215/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.229856756 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.269017486 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.252764079 seconds)
    (218/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.355763748 seconds)
    (219/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.324274652 seconds)
    (220/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.47400051 seconds)
    (221/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.279677273 seconds)
    (222/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.265181921 seconds)
    (223/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.361318484 seconds)
    (224/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.23700271 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.249343209 seconds)
    (226/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.272398752 seconds)
    (227/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.916337189 seconds)
    (228/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.94464439 seconds)
    (229/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.017180621 seconds)
    (230/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.279784197 seconds)
    (231/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.263877283 seconds)
    (232/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.257092601 seconds)
    (233/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.253361402 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.343608539 seconds)
    (235/286) benchmarking ("sort", Float64, false)...
    done (took 1.445932155 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.279979617 seconds)
    (237/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.297411598 seconds)
    (238/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.254650645 seconds)
    (239/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.396576885 seconds)
    (240/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.366983069 seconds)
    (241/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.357896167 seconds)
    (242/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.239100359 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.258293494 seconds)
    (244/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.273703893 seconds)
    (245/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.230527744 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.302109475 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.390318114 seconds)
    (248/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.23149028 seconds)
    (249/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.28932196 seconds)
    (250/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.304558962 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.314593053 seconds)
    (252/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.247086201 seconds)
    (253/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.456887878 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.260896194 seconds)
    (255/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.263758834 seconds)
    (256/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.233146987 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.330351636 seconds)
    (258/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.328703595 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.369224075 seconds)
    (260/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.3716052 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.262942034 seconds)
    (262/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.390192213 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.2766817 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.268917923 seconds)
    (265/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.25403657 seconds)
    (266/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.099947236 seconds)
    (267/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.271801392 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.424150607 seconds)
    (269/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.247037294 seconds)
    (270/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.324272407 seconds)
    (271/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.464831394 seconds)
    (272/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.283806278 seconds)
    (273/286) benchmarking ("sort", Int8, false)...
    done (took 1.380636328 seconds)
    (274/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.082891628 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.270118993 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.259576478 seconds)
    (277/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.997523882 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.272519091 seconds)
    (279/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.359818006 seconds)
    (280/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.388598168 seconds)
    (281/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.274459504 seconds)
    (282/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.100677395 seconds)
    (283/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.909441459 seconds)
    (284/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.39312857 seconds)
    (285/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.337228803 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.265749012 seconds)
  done (took 442.483516657 seconds)
done (took 443.62193047 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.292142025 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30660845 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.260169445 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.294296791 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.374354545 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.432425097 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.271229654 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.299584298 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.308138991 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.309956648 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.266102128 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.432723896 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.262574904 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.261630691 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.261169161 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303249197 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.259197498 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.257966584 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.279240621 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.295242427 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.279945126 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.273897364 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.310131834 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.434116841 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.264324722 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.261763371 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.265384672 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.285764733 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.378406415 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.265374743 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.263377956 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.273402711 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.25763578 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.264380491 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.255878551 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.284868184 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.271980086 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.271121916 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.297657008 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.376559394 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.257060778 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.282254092 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.265760048 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.263627809 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.263851389 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.303123764 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.264576141 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.323219356 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304650213 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305327749 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.25653528 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.274973048 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.270732792 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.264890868 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.274572838 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.265954849 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.32256277 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308791949 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.283886637 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310075071 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.253693122 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.265119079 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.303483457 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.282957835 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.275490638 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.267682621 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.26087468 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.301902104 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.256948878 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.267514353 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.253953846 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.275036168 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.267480722 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.276312496 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.301178418 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.265637153 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.257278028 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.265412056 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.273603161 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.263443255 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.311813836 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30639127 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.315894285 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.267423637 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306593781 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.439213423 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.275596498 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.265362013 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.301416279 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.285392901 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.276640379 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.278049816 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.300672068 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.268343828 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.312358634 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.323719661 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.278402204 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.281490653 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.315843035 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.277254202 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.257009342 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312799266 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.263659095 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.263720107 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.266758643 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.3876732 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.260156441 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.265951422 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.301012065 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.316340299 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.328142324 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.257160633 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.279845052 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314418561 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.277599718 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.328331041 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.270656098 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.257994844 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.272103128 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.388936632 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.269523262 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.275066296 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315340323 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.32667149 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.269913901 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.257997276 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.268668548 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311450899 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.38896399 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.279680275 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.38375537 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.267720442 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.273029855 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.300538386 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313938694 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.304153153 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.328728553 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314577804 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.285222845 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.2694195 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.282551885 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.27991077 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.272647032 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.328792285 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.267061154 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.299772166 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312444885 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311315475 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.302890536 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.390431341 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.274627482 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.262119122 seconds)
done (took 213.570550307 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.330070641 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.266962977 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.375042114 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.267578855 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.366607615 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.36475119 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.264687934 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.265875571 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.265228991 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.643142945 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.26605142 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.264973266 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.266861424 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.264175509 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.350965131 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.269126394 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.263821697 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.609123532 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.269885309 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.342414885 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.270818099 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.266237112 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.269020537 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.635868713 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.268038001 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.263769599 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.343904396 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.269780414 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.603810301 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.263644087 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.267178086 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.607793661 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.359408608 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.285212366 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.279572162 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.276062069 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.368903084 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.282685383 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.350340278 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.351647562 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.378945387 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.308015132 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.264583235 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.270031044 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.268155664 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.271103234 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.266450604 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.295130267 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.268619737 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.267732962 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.610875765 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.280057224 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.276922182 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.268304041 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.269146112 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.29197437 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.269593502 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.270216439 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.359626281 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.273709107 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.333805322 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.644095001 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.645754549 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.271680343 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.267786532 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.268458591 seconds)
  done (took 100.085565267 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.338359855 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.347860933 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.38386906 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.271353517 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.321695358 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.382712153 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.271254454 seconds)
  done (took 10.484288711 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.279740165 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.273757383 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319674961 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.322845248 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.272010506 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.484009673 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.275263854 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.283457487 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.26954161 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.355323073 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.284035352 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.275125669 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.279024061 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.270830558 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.321005587 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.286253775 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389766196 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.275282528 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.276868518 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.426168827 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.270891126 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.280156249 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.352942811 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.284760802 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.283656608 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.283102744 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.219305653 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.27519955 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272382537 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.274873411 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272356974 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.384817681 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.275549877 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.272495937 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.274219663 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433608568 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.274695527 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.273207825 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.273938995 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.268469459 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.275261804 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.277477382 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.276649264 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.273602009 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.275213634 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.300132339 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.274971494 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.275226276 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.275075262 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.276340929 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.353828867 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.278050673 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.272608695 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.271939561 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.352736534 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283815679 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.276382291 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.273431814 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.275968779 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.275110224 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.431985167 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.324521764 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.276435123 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.324343977 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.276107249 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.279183903 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.276824356 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.276540735 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367792889 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.277342951 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.326335641 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.274565678 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.499495253 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.299994201 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.278464134 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.280362954 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.281578426 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.280028312 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.276387311 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.28594996 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.273966977 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.278068864 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.283101234 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.274241365 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.275547627 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.463613716 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.433523851 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.276230299 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.29112188 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.285658657 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.277973623 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.356470155 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.27933993 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.275624127 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330559528 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.392937326 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.357189761 seconds)
  done (took 132.48353789 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.285796534 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.288322861 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.283331318 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.302762692 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.280328346 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.279941159 seconds)
  done (took 8.892042595 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.281020604 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.280845183 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.28033587 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.279521073 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.278338519 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.288792763 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.288399093 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280911362 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.284219346 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.279776133 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.28794597 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.279930295 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.279891252 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.280734374 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.289732538 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.278604536 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.288094876 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.276058234 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.28062441 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.28128974 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.278947729 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.28043477 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280581553 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.279585946 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.293381172 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.281489884 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.288872425 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.278789202 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.280912025 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.286855192 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.296884794 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.287917027 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.281346392 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.286131381 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.291785305 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.28373541 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.28573591 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.28225251 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.277169491 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.291088319 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.283722667 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.281191677 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.283314535 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.28380776 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.281514751 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.286951694 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.288117615 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.28984571 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.290437921 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.283840016 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.283400271 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.280662453 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.29035964 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.284486502 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.282421861 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.299383604 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.287920547 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.289129948 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.284267944 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.287556142 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.283532718 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.291155681 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.28286818 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.295108995 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.279923387 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.285002044 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.283947788 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.288457195 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.283688356 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.28267675 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.285948291 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.279148829 seconds)
  done (took 94.658674071 seconds)
done (took 347.767425612 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.696652432 seconds)
  done (took 3.87389175 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.290491258 seconds)
  done (took 3.471830394 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.935444871 seconds)
  done (took 22.118330967 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.335580675 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.363826615 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.296492454 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.28638877 seconds)
  done (took 10.460772581 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.528020235 seconds)
  done (took 3.709682777 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.289817335 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.278222948 seconds)
  done (took 5.753085745 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.506390062 seconds)
  done (took 3.685875704 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.60125069 seconds)
  done (took 3.782463933 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.298255403 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.291464534 seconds)
  done (took 5.78038735 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.273152334 seconds)
  done (took 3.452610958 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.152324331 seconds)
  done (took 16.334877138 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.289405412 seconds)
  done (took 3.473536445 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.3045193 seconds)
  done (took 3.485413332 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.781421529 seconds)
  done (took 5.962393143 seconds)
done (took 96.523435766 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.282348502 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.281195824 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.283668122 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.281459729 seconds)
  done (took 10.308904195 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.322272407 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.320745412 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.34045982 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.331990912 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.326235724 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.34066249 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.328084062 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.328853861 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.335221103 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.326312385 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.321040984 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.322154837 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.321848392 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.328592494 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.324138391 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.342013749 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.336328044 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.321423527 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.312512662 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.32405697 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.287329032 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.331315135 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.324300775 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.286706501 seconds)
  done (took 32.966659419 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.803814651 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.357113716 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.440007135 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.340677943 seconds)
  done (took 7.124120835 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.365893954 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.357664377 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.366741789 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.405493808 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.430286997 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.368480494 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.315780301 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.312252354 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.297401269 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.359474823 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.416686412 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.346171336 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.436809976 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.290000162 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.490951134 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.290312271 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.289758734 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.366134752 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.405823954 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.421409252 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.289750075 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.367934807 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.368257915 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.350462688 seconds)
  done (took 33.893484183 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.290693761 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.305671473 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.287861572 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.287827876 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.296079841 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.286824157 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.289109782 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.290899012 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.291421842 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.796837714 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.291949226 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.302385158 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.773565721 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.292550417 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.295969802 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.291648995 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.780570185 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.776729834 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.294412893 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.296433162 seconds)
  done (took 29.002498689 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.285228562 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.284649279 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.63532156 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.537987583 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.283755647 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.284650464 seconds)
  done (took 13.496571684 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.362646914 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.502965233 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.2959304 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.637644685 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.718736181 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.292089258 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.292892699 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.537376073 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.845631976 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.825501983 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.347512316 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.362457584 seconds)
  done (took 19.208516767 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.298058369 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.286748295 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.296318251 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.307630344 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.346117639 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.29558031 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.300499101 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.285688319 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.348525189 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.350676796 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.293882881 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.350530388 seconds)
  done (took 20.947733395 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38338932 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28375739 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28500356 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300744124 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286350745 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15127847 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293235996 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977906855 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.306836605 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564212493 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289130428 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386658946 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.545021402 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300238025 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287973966 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.27193587 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517915311 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783714603 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28756768 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301468987 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321471431 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303285312 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.300955065 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.494390722 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294508642 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289700796 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.551192167 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290411508 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574137442 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.302168768 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300793234 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290481747 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566084149 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932565997 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413254429 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495685177 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303995828 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306118632 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.292295412 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.290026763 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324739218 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293396272 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302439386 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289394333 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290587098 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298109633 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994555628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.311689379 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.288083888 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292580856 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550933587 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390195359 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.295783334 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293239516 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342595842 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291603279 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.294047129 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.289437427 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889935428 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298917921 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294589322 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.290849343 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301978175 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321835286 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910922911 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.298282505 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.294587432 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.297162799 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290667333 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30654975 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309477324 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292250488 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.317816301 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293422565 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985213972 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.294937882 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293919139 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851581268 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293948974 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.298146853 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523916421 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292357288 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294062617 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.292351549 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.294139967 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986578094 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30075844 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.278145299 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293971482 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.021130757 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.517703991 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321030627 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326339562 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.517442404 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.274936178 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29687022 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.308388367 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296114982 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316937704 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.995388451 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308818886 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.299210364 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553580625 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.507481387 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298819899 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.27997978 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769600161 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313553775 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.314511051 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295214853 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.499966264 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.881229698 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310954926 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297114561 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329662537 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.297986921 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027176746 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296517329 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.416697451 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298532182 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555889415 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.065760677 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295744649 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36094733 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300628805 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.297130278 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29854277 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31215696 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295799283 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.491907374 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316300127 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.3076115 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.309838299 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296209935 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.301803823 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299607066 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.298997867 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.523540224 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308440987 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57466173 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2989402 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296977026 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296399922 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.520832576 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.296943746 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.634132443 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561297359 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31224514 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296821578 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31143141 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316575096 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407814476 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330476397 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.306708109 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558501665 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.303201666 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.303643233 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29951174 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31269728 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306450221 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.307845801 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301320333 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87692811 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282892935 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303231911 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190477264 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.314089212 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363738266 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306725853 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508676349 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.300688867 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313301922 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.319125191 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.300514232 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542407524 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311893034 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.302830051 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37545042 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.76669698 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.896660167 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314145959 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.302591734 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.295566057 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.299527661 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30021495 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299576198 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.301198889 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508077172 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317356083 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315775641 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.899263319 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301768577 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.299206717 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.304507657 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316520302 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.307477738 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300374818 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.299325692 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30125803 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313508889 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.313841329 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441476577 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.315416494 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302508419 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.818076349 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307449218 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30228759 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.303229922 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337337155 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303483968 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099987981 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563588325 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325378382 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577654712 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.302394933 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.332640871 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.303306076 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302876204 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309521722 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.315424243 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328198333 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.31791664 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304751076 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304997398 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874425887 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032101167 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838281443 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313225707 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.316268016 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303275412 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.013745561 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321002326 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302191251 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545772892 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.00787771 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320929531 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781832188 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.335570705 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067038021 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564491541 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535768785 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314487432 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.309665956 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566735694 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517216408 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33723229 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30485631 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304594288 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.28795841 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851489125 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320489047 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40088334 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014435685 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319898447 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306961828 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.341953027 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.303532355 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699221264 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321543401 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306324977 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317880819 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313910534 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099798139 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.309697843 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305886992 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929436232 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30678024 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.786707873 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324771451 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.513230313 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.325500722 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.308935692 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.31942984 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.315004472 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.56190464 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566115646 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310161131 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306353174 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859487711 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.176550393 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.312007357 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30867239 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040715613 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307927299 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608398473 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.315363881 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.310340871 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312889238 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308911411 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310133043 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.304579729 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312934604 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281955061 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807181499 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.319907527 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325563755 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309783167 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310011572 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.564801497 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.322672244 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.892600739 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539881067 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332892105 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34673255 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.311218474 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318193607 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.29401546 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309860907 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308445071 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357496581 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.532875566 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30925407 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.29369593 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356422961 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520697577 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309237591 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317962494 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546494146 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.312185716 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.334319043 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033837686 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343401212 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319268998 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310823574 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32389419 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325653226 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397784259 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521920734 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.326488926 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.323519098 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705179408 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339182619 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312859566 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.326847402 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40988593 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312976205 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.318389972 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.090839922 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901347037 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040514673 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.900904283 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574787698 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315395153 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317189806 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311640029 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447946148 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314162584 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590760603 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313732508 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.325203957 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350464163 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325557198 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322782756 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526703752 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591412792 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31612657 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3262809 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317110241 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.312161857 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327193045 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.526995635 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8182303 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879162289 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315835605 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313446002 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04500944 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606183528 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31654933 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315750974 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314141574 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.316234079 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.336724882 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.319157915 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314948227 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456824747 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575599136 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97279704 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.340915707 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.350375604 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.83664989 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317073651 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.56975659 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311904513 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.524089877 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905940395 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016501664 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583305045 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38459897 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524359048 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.31848572 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455580785 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.323118351 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320223281 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31659274 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317486167 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.312584773 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.328106694 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906315044 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582422081 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.32078519 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.320837936 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351241415 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.327738291 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542338502 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024842743 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542896528 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328378236 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320903045 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319274899 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907130599 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580180368 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318984884 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.321812335 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553935944 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323010801 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344108683 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.835662282 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.318315618 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895468983 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.211676574 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340710073 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31831519 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.021329049 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907710175 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.330115219 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824759118 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322400901 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330520229 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599278211 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.325252588 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332137126 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596709426 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.324150822 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325221899 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529861341 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.909148858 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086772546 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.32641521 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341740247 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.323013651 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322014942 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349221166 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323993194 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329475663 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.727142429 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34185612 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324379072 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33247627 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.324135723 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327215626 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.322115055 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321743228 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.328415634 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.310770647 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.320564448 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331033998 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.326842054 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895265488 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343844663 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.993904072 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.649664726 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.579413079 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323137828 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.310047181 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.329538773 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323129267 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324109251 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322798675 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331545853 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909649889 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.323240921 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.338476086 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326386954 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.5421328 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536607622 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326331841 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548548842 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343510052 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343922915 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.308772323 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324836158 seconds)
  done (took 946.018422085 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.337136496 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.341998067 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.349918904 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.349060657 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.338823645 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.37262916 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.333301086 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.343009571 seconds)
  done (took 19.98875572 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.325520385 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.3345247 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.341357104 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.334055486 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.330732704 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.797728436 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.356730084 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.332736384 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.338149795 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.33049197 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.337340531 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.045132622 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.33343523 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.336092069 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.314024128 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.338279563 seconds)
  done (took 31.749129921 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.243614156 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.452936137 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.17921686 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.363713994 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.37022954 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.333669514 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.548799259 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.340601431 seconds)
  done (took 26.056547573 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.340249565 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.342832011 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.339570929 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.339774011 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.340691076 seconds)
  done (took 7.927149769 seconds)
done (took 1199.870388363 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.334218776 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.335665814 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.334550583 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.334742535 seconds)
  done (took 6.562979439 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.315620508 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.316964371 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.314705721 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.329005392 seconds)
  done (took 9.498472625 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.039489071 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.933704376 seconds)
  done (took 5.198289065 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.331964498 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.084813318 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.076938038 seconds)
  done (took 7.719132786 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.625958452 seconds)
  done (took 2.849954371 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.753015359 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.700470944 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.52232419 seconds)
  done (took 6.20300995 seconds)
done (took 39.256260132 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.335191 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.664926067 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.528105728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.342184439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.489143271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.48989492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.066256387 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.334498336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.340628208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.338705858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.327787867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.518189304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.050686946 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.670003763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.053228155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.668308112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.532568333 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.346937215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.33894277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.340077234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.06657124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.329088335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.353568803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.329661864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.508564287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.476510934 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.340881965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.66763761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.331973412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.344486429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.477397184 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.331746698 seconds)
  done (took 81.558656321 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.345841607 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.331199197 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.343469966 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.341085167 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.329874351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.357573971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.328453981 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.337076351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.334352823 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.332638362 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.340098439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.335354759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.33153357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.329107876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.343917578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.328904328 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.345694915 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.333106549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.346384234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.330148615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.331476013 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.329761363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.332586444 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.329307264 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.330028464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.335248369 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.351810397 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.331436738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.348689301 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.332776171 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.332697578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.362098585 seconds)
  done (took 76.022553472 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.337442283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.330370198 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.348925706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.330544094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.356129655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.336597869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.335967544 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.330771218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.353644781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.333664028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.331878807 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.348563205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.332156016 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.331851489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.332465644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.333128897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.332700111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.338342279 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.330992781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.332269362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.348955069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.333362667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.347521904 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.33135551 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.333107555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.334326829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.334783844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.333398087 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.34606935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.334838017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.337015564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.332967675 seconds)
  done (took 76.016509185 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.617115368 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.343828932 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.344388503 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.319876312 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.344391778 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.343723994 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.335987396 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.617438281 seconds)
  done (took 14.49623159 seconds)
done (took 249.319036 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.335551038 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.332782222 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.535213733 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.362661953 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.339742466 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.362703774 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.366541093 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.555818647 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.304838647 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.572374183 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.354447608 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.357915636 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.345568565 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.360675639 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.608894369 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.483847458 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.241612786 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.337170216 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.670290099 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.350775247 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.596696408 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.333310559 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.604857665 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.294049102 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.355845882 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.334781038 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.335368659 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.228314784 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.374714285 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.682245186 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.339553875 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.32921095 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.420429972 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.442267451 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.546408087 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.493155809 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.336627243 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.420966089 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.551713247 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.350099333 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.345395 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.10716415 seconds)
  done (took 81.234243796 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.345482005 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.464081873 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.347967408 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.346714413 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.347090066 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.467277879 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.43877992 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.346286553 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.347562851 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.346353998 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.34866835 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.345777302 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.345329751 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.347853822 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.346189327 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.346374381 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.346743861 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.357267178 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.359471874 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.392692442 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.471710059 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.368500573 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.339017998 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.346626439 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.449753941 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.483142015 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.349337149 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.340027117 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.392608709 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.348454873 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.351613017 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.390108164 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.346506249 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.3495469 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.467918387 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.448982141 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.35856281 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.345078751 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.461911762 seconds)
  done (took 54.978798649 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.349469014 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.589485915 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.778584784 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.352415004 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.350957895 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.354110777 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.428031995 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.349330092 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.355200765 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.35451295 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.514814882 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.349598599 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.383914452 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.803293991 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.350671897 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.350449054 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.351442026 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.350461507 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.608020759 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.358095472 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.445080213 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.349371123 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.42841617 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.358802016 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.372289577 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.353044983 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.358389971 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.917273525 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.353053021 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.517587476 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.120399609 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.425801605 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.874189133 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.79274256 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.120809721 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.355561197 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.352697484 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.520000284 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.353248773 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.353100182 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.428913203 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.352791676 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.79597069 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.005137731 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.367827642 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.353809482 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.944145196 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.517717791 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.587510738 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.363847238 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.822174394 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.358273951 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.354110938 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.354039474 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.592628052 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.358097544 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.356549898 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.925235296 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.3708481 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.429339603 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.353076221 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.355598485 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.609348049 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.353755147 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.598043056 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.35935362 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.364068619 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.37169453 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.798864465 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.351882755 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.033365555 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.369933083 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.351670523 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.5187966 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.600659839 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.966957776 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.360993117 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.613019582 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.888192764 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.424210441 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.359095716 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.90501807 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.430967735 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.360278028 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.35672657 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.35950108 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.353441913 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.437176513 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.426637285 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.963853959 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.023500089 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.946823817 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.447833264 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.369386467 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.35720174 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.929045671 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.37185135 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.355997754 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.791273334 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.029907671 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.375134631 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.363505412 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.033506091 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.373500107 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.430163744 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.362598198 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.802359577 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.357559863 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.454529937 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.355287073 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.361309668 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.371316462 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.428602138 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.361174277 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.35487689 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.999742411 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.538901446 seconds)
  done (took 178.82757373 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.34679323 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.345015448 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.347852728 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.362535804 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.346428197 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.356108459 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.348665502 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.347921871 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.354923066 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.376781842 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.348097191 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.349224816 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.350484032 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.353834108 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.358148115 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.35593734 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.349053349 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.349246825 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.347756027 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.345873281 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.348732332 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.372084285 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.350010975 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.348129649 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.349525985 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.350837382 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.351457223 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.350383746 seconds)
  done (took 63.104289824 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.357794136 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.89990128 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.354540239 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.483789275 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.373849859 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.35391145 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.482387345 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.40860505 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.356092908 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.356105851 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.355927466 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.647424865 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.354072711 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.850609566 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.539902602 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.479156799 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.853587665 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.371056652 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.355098035 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.354361394 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.486170055 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.364360833 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.64849515 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.898774374 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.355936819 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.900523993 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.345536534 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.359569707 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.356598969 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.904925059 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.353790759 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.648098571 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.430288425 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.411088819 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.901786823 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.852008757 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.866320052 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.495739414 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.359882486 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.355718108 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.356040352 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.349149323 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.90804609 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.356778407 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.360643459 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.900015408 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.372504275 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.360542197 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.353333383 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.356868997 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.417250072 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.416339782 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.652279493 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.980334037 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.430054238 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.360571718 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.486869983 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.639768483 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.360402286 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.864494103 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.349485572 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.908294393 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.361186217 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.348657664 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.358429309 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.35358112 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.504278539 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.482983001 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.855853788 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.374548959 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.859150125 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.51569177 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.357790636 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.361985697 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.36257675 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.909870566 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.857586333 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.515721251 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.488936645 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.547648595 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.348320125 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.362330552 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.349627642 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.43732087 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.358604941 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.912220995 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.875219007 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.377370246 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.363832245 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.362510748 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.362238106 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.536822701 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.910685058 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.435723051 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.855998989 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.675751358 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.654943479 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.362286814 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.41857483 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.373333108 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.722930904 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.362245768 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.417063675 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.68518325 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.657244384 seconds)
  done (took 161.264415951 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.592682957 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.387423508 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.450777583 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.506744196 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.951598787 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.933925811 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.358454051 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.487527746 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.465452626 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.612867314 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.356268928 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.462736359 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.572225999 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.435873283 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.070246542 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.429295658 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.450124067 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.505893747 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.497386558 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.352650961 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.009201166 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.654269583 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.547176859 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.377017186 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.484908632 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.095534398 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.92876236 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.924336366 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.529927993 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.354895412 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.907132618 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.365448264 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.270544171 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.022455987 seconds)
  done (took 63.603935278 seconds)
done (took 604.244479008 seconds)
SAVING RESULT...
DONE!
