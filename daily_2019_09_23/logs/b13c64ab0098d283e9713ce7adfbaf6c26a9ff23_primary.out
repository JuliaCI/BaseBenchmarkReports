cset: moving following pidspec: 4161
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.235347129 seconds)
loading group "string"... done (took 0.611756129 seconds)
loading group "linalg"... done (took 7.132922108 seconds)
loading group "parallel"... done (took 0.157384728 seconds)
loading group "find"... done (took 1.113185319 seconds)
loading group "tuple"... done (took 1.751964603 seconds)
loading group "dates"... done (took 1.25131654 seconds)
loading group "micro"... done (took 0.219518742 seconds)
loading group "io"... done (took 0.91437117 seconds)
loading group "scalar"... done (took 36.255610592 seconds)
loading group "sparse"... done (took 11.293045057 seconds)
loading group "broadcast"... done (took 0.908066951 seconds)
loading group "union"... done (took 11.831010372 seconds)
loading group "simd"... done (took 4.134701371 seconds)
loading group "random"... done (took 8.522623654 seconds)
loading group "problem"... done (took 1.85488076 seconds)
loading group "array"... done (took 19.802959954 seconds)
loading group "misc"... done (took 1.665644246 seconds)
loading group "sort"... done (took 3.143018216 seconds)
loading group "collection"... done (took 16.579993153 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.488188072 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123597886 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114671003 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11887336 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145810351 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114951981 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123089011 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084029163 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.780465835 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148116679 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119660694 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415052448 seconds)
done (took 5.092407215 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171561432 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084142828 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081212176 seconds)
  done (took 1.295242717 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065327408 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121684629 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066190485 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067403043 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066981647 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066745228 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066078919 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066466211 seconds)
  done (took 1.652852752 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073781271 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068925463 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06883325 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068264785 seconds)
  done (took 1.413539678 seconds)
done (took 5.740610897 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.76637608 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202523804 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184400978 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401191332 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129032234 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155720068 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643125561 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309557152 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185354509 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081011081 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.1082275 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319057503 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108880472 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64141252 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073880078 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090394503 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13678927 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435250388 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06745364 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081971291 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089083511 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128522748 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087766714 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07413142 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144062797 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067782513 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131307511 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079992287 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066063857 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208695621 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172805514 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677961314 seconds)
  done (took 10.218472001 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097611517 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096838518 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068941416 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136873234 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096814419 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069389139 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070826131 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067428812 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086705452 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128125499 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089149644 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101650471 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065657546 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068876657 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084470153 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204303878 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081197751 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081608279 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0704543 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075461237 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116780012 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07833093 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077961158 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077489299 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128901222 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180646463 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099122311 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098149189 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069079203 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081541015 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115203784 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125990735 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065190053 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066024541 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124765804 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09421413 seconds)
  done (took 4.616755228 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.289336109 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141356243 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090707897 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131851142 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06517051 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084326953 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106670639 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065421488 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083611352 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2002962 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.289731962 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577869476 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111288816 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103672662 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067917099 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068570999 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066889758 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347835076 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108660344 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102831569 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081012158 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069348482 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068940619 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342338767 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067321828 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063471189 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067830195 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058114253 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123705828 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067749128 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.919205504 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124019929 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066115525 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100100268 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169330042 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.088900586 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.217939702 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142423375 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068710736 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063830669 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149419944 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069497703 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069061321 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083283748 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103129779 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112124842 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065377795 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066477656 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16146488 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06538108 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079216827 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.981307156 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153893698 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076160467 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064955707 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245280692 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085877943 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069292949 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065142355 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183049844 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135814035 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067394747 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066337952 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06766674 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069223466 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364103146 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067700122 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.702611147 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069567235 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076040057 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069023632 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069461498 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072755332 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072247143 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085419996 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066419658 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074905647 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066121922 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065591963 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06648035 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084031193 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358397418 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066324634 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068320714 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064624683 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086001661 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096247099 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066352368 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065068069 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099968083 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067923686 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066132944 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.212408857 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066780289 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08416858 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069453367 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113081448 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067603368 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09113366 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067915772 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064852565 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096526533 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069627944 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098887582 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081445349 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067777635 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397260471 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065424085 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064450859 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068094233 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063701642 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065317737 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065870234 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067226952 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079690635 seconds)
  done (took 20.825721868 seconds)
done (took 38.083057739 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271106808 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07500617 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075386318 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075634432 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075109924 seconds)
  done (took 1.804744816 seconds)
done (took 3.018552275 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119518129 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098280652 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06439403 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095833883 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064270308 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099744808 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098837021 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080323176 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098962251 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064596495 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095910977 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064349548 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0643104 seconds)
  done (took 2.343408909 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084066293 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08301991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070435348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082650225 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063993903 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08204724 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080790457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088041628 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080880255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071978564 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063747258 seconds)
  done (took 2.060923834 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083011605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083178755 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069179102 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081556329 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063802134 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081251902 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080571597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085672666 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080929322 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073109681 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063509463 seconds)
  done (took 2.047086729 seconds)
done (took 7.655667734 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078148524 seconds)
  done (took 1.270746466 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591592938 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.231619646 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081272496 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112174949 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183532115 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119535184 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281534161 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08663131 seconds)
  done (took 9.066333028 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088893739 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082155099 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068320327 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06962893 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072311522 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069208299 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071511727 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07230946 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06987617 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071169202 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068131768 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069136502 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071113844 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068892864 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070722713 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071176722 seconds)
  done (took 2.42447033 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092133968 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091203614 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073769438 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074407413 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071882408 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072343867 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074791097 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073528259 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070442865 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072007952 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074359601 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073852765 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07123949 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065280929 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074055088 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075548318 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071122218 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074091464 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074591093 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074785692 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074324949 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064278229 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071189746 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074033668 seconds)
  done (took 3.085620308 seconds)
done (took 17.051729775 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114966921 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071774232 seconds)
  done (took 1.388357831 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083014163 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083774985 seconds)
  done (took 1.372717671 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083080176 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065530704 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091734627 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077944712 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066333322 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06584699 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087207486 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066392232 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065942285 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066007138 seconds)
  done (took 1.942010908 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069594638 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078046463 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070063902 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081502771 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073865928 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064230943 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072526478 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067665395 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077620124 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062523284 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070570182 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08220492 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071098544 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083634936 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072564323 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068334367 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07039739 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067153239 seconds)
  done (took 2.513305752 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066811743 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067042798 seconds)
  done (took 1.349124916 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068222118 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063790354 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06678252 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066897625 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063342644 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062268669 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063404996 seconds)
  done (took 1.664280481 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386290353 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110789335 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293886805 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070376945 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081596354 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250800655 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065334861 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070848485 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071108152 seconds)
  done (took 2.655202411 seconds)
done (took 14.104155936 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080524093 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086102424 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095050137 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364296275 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092049491 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066028273 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114061724 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.1894065 seconds)
done (took 2.315258577 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216553101 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616255106 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385744233 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196928504 seconds)
  done (took 2.412425221 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325337632 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086083814 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058807088 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066389247 seconds)
  done (took 1.759905145 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066737681 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068402004 seconds)
  done (took 1.354973192 seconds)
done (took 6.968564866 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067631584 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083630988 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064075958 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067419448 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064638385 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066002648 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065815459 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.063777564 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063626515 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065901914 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068832563 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066019998 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065974183 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066286615 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063326768 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063526978 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065485483 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063618795 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066936957 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06533904 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063494835 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06575674 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063594922 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063689805 seconds)
  done (took 2.837016817 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084739523 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066811749 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07232026 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071710187 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070630266 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071628732 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071219962 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066509032 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071345554 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068240262 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069634946 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069972039 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068296876 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070244742 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068262864 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070424075 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071181162 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066519172 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068499685 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070693948 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070936976 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066462197 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069761559 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071123058 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069808697 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069770334 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069201175 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066403385 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070609495 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06942648 seconds)
  done (took 3.334586348 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071515374 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064042122 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064004016 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070960355 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06345209 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064672128 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063035869 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063677499 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064255759 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063811903 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064762808 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063779593 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063361493 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064753565 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064712164 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067316871 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079277261 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063889703 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063361154 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064294451 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066888936 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063271289 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063794001 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063353863 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063300885 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063555919 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06370318 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06337748 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.176141854 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063474863 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066181082 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06728016 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063102555 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069817026 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06742042 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063064653 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067322038 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062904581 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064022636 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062964484 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063094558 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063250378 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063983643 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070340643 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063970005 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06490821 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063676346 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064694131 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064004704 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066370074 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062973894 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063240641 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065652028 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064208641 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067131352 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062823216 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06407851 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062941891 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064394588 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063096949 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062838614 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063115377 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065650085 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064128338 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077754184 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069553722 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063169109 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064804446 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064368026 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065633083 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065045705 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076575423 seconds)
  done (took 6.042433483 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091677284 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087496014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065637308 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06535732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062331377 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064255586 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068007574 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064254454 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065479672 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069745193 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06408029 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064868661 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065490643 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076481809 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064780271 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065267181 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069811888 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061663731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06387506 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067399753 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064081537 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067354487 seconds)
  done (took 2.744339411 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156908454 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069873841 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105877943 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073113825 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067800113 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073056351 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069788211 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06990681 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070163361 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068073681 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068153777 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069863409 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067696165 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068215262 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067986511 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067993916 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069861775 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068144645 seconds)
  done (took 2.611597419 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07869019 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06584808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086560613 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066406112 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065983998 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068675963 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070876202 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074194234 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06804006 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065929919 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074532344 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068265609 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068492896 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065908555 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068285044 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065873436 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068461384 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065679249 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074280364 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070627859 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070949674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07381172 seconds)
  done (took 2.785068172 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081488141 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068305205 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082899477 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069229692 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061882171 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064141803 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.0700275 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06570797 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070507494 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067899398 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065840179 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064013342 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069241476 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065938288 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06907434 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065647083 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067743897 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065571552 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067443682 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061520118 seconds)
  done (took 2.605930971 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087882608 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06742598 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067998025 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076330884 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067420293 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067278679 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074977924 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067340025 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067440608 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086950178 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066995352 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066901812 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075489551 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072251568 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067350029 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075447147 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075188658 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075327859 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067238803 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067100319 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087308565 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067324234 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074872451 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067138208 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066883148 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0671587 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067496152 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072148161 seconds)
  done (took 3.253944813 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067477719 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06635465 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063279726 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063204801 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064095876 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063058086 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064151259 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063344007 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065562787 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063401177 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065560359 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065749459 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066191395 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066080674 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065945057 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066160539 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065662264 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063116966 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063319832 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063304934 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065665359 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065485344 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065673953 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063185934 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063302823 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065577239 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063061698 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063345813 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065364552 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063746923 seconds)
  done (took 3.186153763 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076882162 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07325398 seconds)
  done (took 1.397930791 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065122627 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080552144 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063592456 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069993413 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069598385 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066730892 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073304001 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0699747 seconds)
  done (took 1.801770858 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083180229 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077314105 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068508657 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080711164 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076434247 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082771773 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133329644 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066891753 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072740664 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064221076 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079263662 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065341 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072067596 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066603374 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0718269 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072510605 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063948364 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072410789 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068734828 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064410295 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067510425 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074601281 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068372517 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06153912 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067217938 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087821491 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076965721 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065630014 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06885515 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073617336 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07181909 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06012177 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065891355 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066698691 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064031573 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075655833 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080959066 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068645761 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074410491 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066759595 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076626055 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061270457 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070408725 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072483638 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076019433 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066505852 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066545784 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061310039 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063990558 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068651538 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061391558 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066267554 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061171404 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075662204 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069837823 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076654855 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06536931 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067583494 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069487212 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06955534 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073002892 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068108493 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068863299 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065926351 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073041949 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070368933 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074988952 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061283113 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060522603 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063873479 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076251021 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088484442 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072666314 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066995963 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06708536 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063911539 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069111846 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067179365 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071894957 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.0729128 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066054008 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071780154 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073348406 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06658232 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068507234 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074721968 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064423824 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069115299 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06394662 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082154567 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06521739 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064464458 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064076778 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076398903 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069585347 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0662934 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064840413 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073549389 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060816304 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067068504 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067740699 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066998293 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076125087 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069667937 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069720293 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07344393 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072242539 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065361605 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068336284 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06157615 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065798948 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064111707 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071844247 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059731081 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067423084 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065413872 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065293407 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197957046 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064939499 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067013807 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074617518 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072610014 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065314652 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06320663 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070074348 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066870938 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070490953 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074508394 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066230954 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061978916 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06150453 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069989957 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066835226 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070813799 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071870486 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070524174 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061426113 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064312828 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071857075 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074879599 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067145365 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067865073 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072346526 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068177633 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065756316 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072376857 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068946877 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066408906 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072760455 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067377219 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061896487 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069794812 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069181928 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065227563 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070454581 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07012427 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069324113 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067629076 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065719712 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074401306 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067631763 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06564976 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066300194 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065695404 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076465786 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06842749 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061874046 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063751135 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076173498 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06410499 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06643341 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065345724 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068832318 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067447435 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065202559 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066053005 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068418821 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076671777 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070261959 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067860165 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072865867 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077645096 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066433803 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068920748 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066083941 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067199199 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067078505 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074974006 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071677606 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070845175 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068847887 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063348345 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072152302 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073827579 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065768367 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064217997 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065665641 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070627835 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071926823 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070567268 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066749257 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064182706 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067017831 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069324657 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068842366 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.0660968 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065670618 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072975958 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064864614 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.0734411 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067097233 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076185653 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069224999 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061582481 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069426228 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064218112 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072102312 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061323146 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064497494 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065798277 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067113075 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06530413 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068750241 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060391975 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073034599 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072700121 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065319833 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064613715 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06507898 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071747357 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066510716 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068640984 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069086407 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070701545 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07515494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065017368 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068236308 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075302886 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065043316 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.18780865 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072407232 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065999312 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066545605 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065978061 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065127847 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070359479 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075769121 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073621533 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060513329 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069688793 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065778799 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066214923 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062456148 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071317966 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069801857 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067581099 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073387214 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06855157 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067711932 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070602313 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066896878 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06799734 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068375079 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069820204 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067588269 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068543887 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066271752 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070061359 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065731513 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064884043 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069477616 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066528834 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067195115 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072423345 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06612344 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067228209 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068495653 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068147186 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068108817 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067198814 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065961153 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070406183 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067525628 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066731242 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069063139 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061512136 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073736615 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06569197 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073780502 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067278879 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063233837 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074711962 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068654946 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072355871 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.0673747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067817339 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068050973 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066304408 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069453323 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074343998 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064714071 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076577529 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074670058 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067621967 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06892713 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067000976 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068437427 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066263675 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067572261 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067493731 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067766906 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066589415 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071038793 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068859785 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066385992 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067674159 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066951569 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06648044 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067218591 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060644122 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065570789 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06599119 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066685275 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075840129 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066707337 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066046875 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065532329 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06731772 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065824257 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063576877 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074871884 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076298267 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067480001 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07327517 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065274045 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067617321 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076862674 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060553037 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064251955 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064053 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064398517 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073316093 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067159502 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075605008 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066068565 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065568198 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063690748 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066785417 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064480855 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060530568 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063452501 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06826385 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063953061 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064340191 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065403505 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067198632 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065683025 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07421583 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064275906 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065744625 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065124724 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062426517 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064448866 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064560507 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.199251363 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068600853 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065219664 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064626625 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066118383 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067449432 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068285755 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067221472 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068385755 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075795602 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066499458 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070297924 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070024863 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061827741 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069975765 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066935785 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067092735 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066665333 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070228987 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070625409 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068028541 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076421003 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067147557 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067731396 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067037465 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06548032 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066491888 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066805761 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067339876 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065971179 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067591889 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074333541 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06418262 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069321332 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066905691 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067873907 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07333239 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068304487 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069886644 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073698782 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067446557 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06837798 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074177107 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071535049 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069631023 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068506506 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068771319 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072257857 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066726067 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072940755 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067056957 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067900347 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068931257 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064564046 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066366828 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066504075 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065257208 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072168213 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067059268 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065830809 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066239787 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064157918 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067980163 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070710806 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074663565 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069088761 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069847041 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06143606 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063912514 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068090724 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064347973 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068126371 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069285996 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072182141 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068462265 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066719155 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064645135 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075091873 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072238926 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069857258 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064295274 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069580018 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066879303 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068334697 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067335546 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067118073 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067540045 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070397202 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067799608 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066161775 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07375119 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070284581 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067371409 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068535394 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067591137 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067029141 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0620935 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067290432 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068207282 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071618249 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068609608 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06689324 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077185316 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064113246 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066938173 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069685227 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065775544 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070622226 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061569515 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067755466 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066852692 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066488953 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06079819 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064964479 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063441973 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067545194 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064537716 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060385527 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075531931 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073737153 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067689075 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064341315 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064131637 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060268025 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06031536 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.194790208 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068026193 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069698323 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076925635 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065954225 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065298834 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062260024 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067246236 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069265069 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069855716 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063431627 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062104706 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06690018 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070036419 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072827594 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065366783 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066126332 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069967005 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068984376 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065290125 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07041597 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064327276 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071034181 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079327497 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067840599 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067447877 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073903715 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074836832 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067822881 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061701673 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066838286 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069585343 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06722597 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067392375 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067669006 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081165678 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070983366 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066169359 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065419028 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069136282 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066185678 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075157319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06746303 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067048474 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071504828 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068229701 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076661205 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069276172 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074081922 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.0702695 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069319613 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066409448 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067633992 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064588509 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065088087 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067632251 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067978309 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072441137 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074445797 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066930194 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077150428 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075425755 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068547635 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063234812 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066201742 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066424539 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062197349 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067335496 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065010688 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064593556 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064361614 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065823486 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067254929 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071754505 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067266879 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067264425 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065823807 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060212979 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068028823 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068299332 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066854215 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062850132 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066177369 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066660872 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070200937 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069414411 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063762698 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068168372 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068053455 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06704832 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06155627 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073014068 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065677938 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068406088 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065885332 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066882546 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067567321 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070169527 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071754189 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06761202 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069227054 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070315826 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06875002 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06387141 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063553359 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071378066 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064110144 seconds)
  done (took 42.575186627 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102554937 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063497967 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061969156 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06242955 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074212403 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063286917 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061903442 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063235744 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063118781 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065368748 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061908169 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062222632 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070874214 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07792404 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074232332 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066816445 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061982506 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062936021 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061956507 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063083357 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071330185 seconds)
  done (took 2.761126871 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075330142 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070429948 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073421156 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075706676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067509075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071028779 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072441984 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070684574 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075944315 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067188065 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075968403 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070956006 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066933663 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066964513 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067246145 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070836379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075882928 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06785342 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070515677 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08137899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070691367 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073045325 seconds)
  done (took 2.897770507 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068687708 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065762017 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067924837 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06117235 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066023394 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061549544 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069762501 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06398239 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069077803 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065567305 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06491043 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065237038 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067465638 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061139777 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065578021 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063515662 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109090547 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069427871 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06593313 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066829591 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061737483 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067529971 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061571107 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061780076 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065309002 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068955229 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066496515 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063925867 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065293054 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065162658 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066277818 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063955348 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.0674607 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066368739 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064956495 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064829636 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065362616 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065588315 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061763003 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064188871 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066392391 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061764476 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066395536 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066891697 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063815996 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063680653 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066913373 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065252259 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061021257 seconds)
  done (took 4.562181239 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080824896 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109024464 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067266693 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088572762 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080567957 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075706911 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069667169 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089239561 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063780279 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064212459 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081509943 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08002068 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065810596 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070384999 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072196995 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065519492 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067080682 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064874411 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069800646 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06529463 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070366371 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072045293 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079871107 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079253527 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069745341 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064951814 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064837259 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069856417 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078408432 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070470266 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070624168 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0712591 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080478044 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071218668 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065439642 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067688321 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081450185 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065738981 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067980856 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063270062 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067503874 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069999922 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072030441 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081876641 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065651294 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070663511 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065402964 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062855418 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078627687 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068273468 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073142857 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080246999 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06943769 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065774203 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07002143 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080484927 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065515649 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064090855 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068388801 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077750075 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06334708 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06921253 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079396164 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067664838 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072707753 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079725524 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070987153 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069527884 seconds)
  done (took 6.365598227 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076104707 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073430719 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080921946 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081042514 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072094937 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072823437 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072450346 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072280839 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071936758 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077141981 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072751151 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093430752 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067504402 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075234777 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072218773 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072474354 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072344498 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072568593 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072581032 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072595545 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072506014 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080424928 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072488514 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080636117 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098461179 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067872059 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072141847 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072741213 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080686187 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072339812 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079614608 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072238361 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072400255 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080450826 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08015976 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072203166 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064892465 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071943084 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072252417 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072321699 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067592797 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080323627 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072390308 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067553209 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072389889 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072275166 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080477088 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079579261 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07513923 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077378602 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073121583 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080592686 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072321448 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072740058 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080282515 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105554455 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080160333 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08031306 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072721974 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080285372 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080309963 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086569305 seconds)
  done (took 6.058154029 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086316787 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076667271 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077430387 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062268689 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064576906 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070068365 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064121329 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064448559 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074681786 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074697409 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077048554 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070074562 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073353524 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077255163 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069968507 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072979523 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07009982 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070021445 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074790845 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069728267 seconds)
  done (took 2.788026574 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075765121 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083442414 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067536955 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072577629 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.0688419 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071835856 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068289247 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068822317 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067212204 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069403728 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076083351 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076737823 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067007122 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072038237 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076219158 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071791667 seconds)
  done (took 2.492679876 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076417761 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072618969 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08012995 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066447749 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065154438 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063067558 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066383696 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061420004 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062560077 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078073319 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065879884 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068910167 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06567788 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06473274 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06289715 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069167961 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062585218 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063949462 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066117151 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078312106 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076607025 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065123868 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06651712 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065817829 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066068437 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071179855 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065854655 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063886963 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063622453 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066678941 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066945176 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069557741 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06333679 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06389255 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064815385 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063442577 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065898993 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066103945 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068809994 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066302694 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063862003 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065577779 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065776713 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066900888 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062213074 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066039228 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062013099 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067756523 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063596393 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066073331 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065726168 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068422223 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066149258 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072479724 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068700573 seconds)
  done (took 5.021764648 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081128326 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069189829 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061791927 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063889303 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068564462 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067698007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069287718 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067419139 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068528694 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06405888 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067879173 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068290944 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067868611 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069633903 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067601997 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069431867 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06202608 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067664069 seconds)
  done (took 2.574144096 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07269925 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066102191 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072572642 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065983831 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066004871 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068122951 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062183038 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064520285 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064535162 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066346208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065875068 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068588972 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064443872 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067904157 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066055765 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065848414 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068219678 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06472604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066328354 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062021032 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067872774 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064357716 seconds)
  done (took 2.804299938 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072610764 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092127075 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137834312 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084149138 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.0814613 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078204716 seconds)
  done (took 1.891295628 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091657058 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079532304 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066831069 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088354909 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074206227 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067545644 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067556463 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067646776 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076687593 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076027803 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067779941 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076065254 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075756142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0755304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073290922 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073488082 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067642693 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06715624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066586992 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084342658 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067921812 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076075755 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067588144 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067041874 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068187051 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075264842 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07607772 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076114666 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067180972 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076331323 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073029703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06775438 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076798254 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07635494 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068930543 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076698013 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067662682 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084626001 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073086512 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076134148 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069154769 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074317181 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076537096 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072582263 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076219965 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067700022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072572259 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06776604 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067718758 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086579208 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073575053 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075538024 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074046287 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076384457 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076744717 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086299422 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076618572 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075770475 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073799202 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078996795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075819355 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07334062 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075970177 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076976055 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073690263 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076125988 seconds)
  done (took 6.237775594 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083635277 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086534022 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068064488 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076547424 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076238292 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067944468 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067696282 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067794706 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068135039 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067497671 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108446737 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068489251 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075828808 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076110014 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067935331 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068004155 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067696966 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075779524 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067617899 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08630246 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068190832 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076348293 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075639844 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075701694 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076415737 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073447651 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067850572 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067935358 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067868537 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067962689 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072413215 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067976757 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076052642 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067217292 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075849582 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068025869 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067755917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072886417 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067646494 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073416917 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07590744 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08415398 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067819547 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067556503 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076759415 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067702944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067396385 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06733384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067933142 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067366389 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076051149 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07593344 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076057634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075421221 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067900483 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067467756 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067389866 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06773732 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067912861 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073201151 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075537577 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068150073 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086092682 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067512429 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067358851 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07569677 seconds)
  done (took 6.143488398 seconds)
done (took 128.992248484 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185945538 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165243123 seconds)
  done (took 1.686976853 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070604545 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097341516 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076427517 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128592651 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066515012 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100541687 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099246064 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077905782 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066353675 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066217378 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066331392 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06831395 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131318315 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066742565 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066320255 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069015105 seconds)
  done (took 2.671282506 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098655336 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156658201 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100060679 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064909783 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097160359 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07319151 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064700182 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074834237 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071189236 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065499294 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072781767 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070768944 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065427085 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070766863 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070973155 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072938617 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065292718 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07318826 seconds)
  done (took 2.783395176 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102228475 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091955926 seconds)
  done (took 1.548710799 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157679096 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104688503 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.155244245 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346067747 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167582211 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230120973 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128113125 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12712691 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117561515 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123427141 seconds)
  done (took 3.00870988 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099127211 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150703457 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257796448 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115211515 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072626198 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095272574 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116656033 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077893473 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080871982 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080734154 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08065135 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076658547 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098622348 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073356614 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073284702 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076084332 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102298414 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072355421 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074270888 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076862381 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09951502 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066215653 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073837846 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072443369 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077699168 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077375143 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065700503 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065473714 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077222202 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073916888 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076730023 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09369426 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077329298 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106728324 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.06990856 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108013778 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076563942 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073877486 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074026462 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073848307 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079040198 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078752686 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07202321 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076135152 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065080879 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076460987 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065397144 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065192867 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078577263 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066650586 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078455688 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077092208 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106885823 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066714771 seconds)
  done (took 5.965074412 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103117865 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104714217 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071533555 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111447938 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099974431 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071219355 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101466846 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093174258 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10322966 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070189783 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06851267 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070576417 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082240765 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.0833128 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112446983 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104204651 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073278396 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070524748 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104033658 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102587112 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06877719 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095006688 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090027757 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102010454 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067500963 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070524518 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068021703 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070463059 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076959806 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078856849 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069833324 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080887774 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085078771 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078591876 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067059831 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067758368 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068955905 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080261552 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079859457 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079437928 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077953253 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067648345 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0679719 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071196089 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070084138 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067546746 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079199339 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080455992 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079030169 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069507211 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070246064 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068072662 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069948534 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080519053 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078294213 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080992416 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080415682 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0685131 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068283849 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071572041 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081258478 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079091356 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079339765 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070073546 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07980812 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068744841 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080490691 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085103207 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068171331 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070102706 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068773409 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069542133 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069594265 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07815142 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07828021 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069930881 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069485008 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067933097 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080180278 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078613764 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068469028 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078454272 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067553128 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069045819 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070708672 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070057563 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077583212 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080048644 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070127154 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068249326 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069469982 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068766619 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067075161 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076798266 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079463078 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077798688 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07738424 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068759161 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077696804 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077192881 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068901353 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077856985 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067143386 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0688958 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197097936 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079426133 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077885863 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080579176 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069617652 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069986416 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078719177 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081844545 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068943667 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079485466 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081130082 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080864123 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068046545 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081515038 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068911368 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079971511 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070451543 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080988871 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068323574 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08084741 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068476832 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068025681 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069281829 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079629431 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069886722 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068981168 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069865774 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070275916 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080793744 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083434154 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071155371 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082252504 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079110479 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070310239 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079366279 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069087998 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079692406 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070601425 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070659195 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067510565 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082433828 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069528562 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06858062 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070216944 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081403265 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068730581 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080075457 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079227526 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068637954 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08170823 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080344394 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078254228 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081111113 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06986939 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069286026 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068246603 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069448277 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079139254 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080225666 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071336691 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068679229 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078148804 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079859967 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06785899 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078551044 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078137408 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079149086 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0684037 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070078111 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080727406 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081029944 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078723925 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078909211 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078533697 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068379088 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077872484 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078338385 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067948096 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085293772 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068612375 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082659106 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079370532 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07751582 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079132699 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080864479 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080699362 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080574689 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083502796 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068256311 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067945658 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079668621 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068154119 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06946428 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078365957 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069799864 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069405761 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082045272 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067474169 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078100352 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066595945 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077315866 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065886463 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068548993 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082092018 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067413599 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068362098 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.211027457 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070806408 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078383992 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081082204 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079324901 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069154469 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070305656 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08043191 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079682559 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068837778 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06913977 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071116243 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079444707 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078028376 seconds)
  done (took 18.67845405 seconds)
done (took 37.708455856 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210625719 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151478595 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179561039 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118198054 seconds)
  done (took 2.114044859 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122548401 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100162741 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095016851 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064875192 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101776327 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065415109 seconds)
  done (took 1.945106334 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312258471 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211669169 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182110901 seconds)
  done (took 2.096067462 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199462502 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188083547 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393793277 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252998519 seconds)
  done (took 2.536397102 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144784557 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089322202 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066911501 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082913419 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134940555 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161007753 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101366701 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126060271 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077595421 seconds)
  done (took 2.433552709 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147244538 seconds)
done (took 12.665431776 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.121092745 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.108349872 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.19736746 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199050201 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.217245064 seconds)
    (6/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073652348 seconds)
    (7/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.212863417 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144661704 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081481471 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100425754 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077383506 seconds)
    (12/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07279197 seconds)
    (13/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073449194 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073455836 seconds)
    (15/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.206363271 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076648047 seconds)
    (17/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165625953 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.114237566 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169879065 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074890118 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091795517 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186185604 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122827744 seconds)
    (24/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.217649149 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118935378 seconds)
    (26/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091474029 seconds)
    (27/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070822507 seconds)
    (28/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064657909 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071527366 seconds)
    (30/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109541444 seconds)
    (31/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074321383 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.205907157 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077170201 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.197623612 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074641221 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071395783 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079123028 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.073671803 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174440815 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087912738 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139266 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097385108 seconds)
    (43/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07092179 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072284729 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138404568 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073966871 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091229668 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065070278 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05120378 seconds)
    (50/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072988463 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097990725 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087858097 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06693054 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074715078 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089297415 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095767047 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078332875 seconds)
    (58/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.10863438 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072151102 seconds)
    (60/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075608 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110758719 seconds)
    (62/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.174675317 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089098148 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184815433 seconds)
    (65/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.14259771 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172865991 seconds)
    (67/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.194328667 seconds)
    (68/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.062241651 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092208094 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.194504693 seconds)
    (71/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.193090839 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051982417 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.194411368 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067847408 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.1284258 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067820457 seconds)
    (77/309) benchmarking ("sort", Float32, false)...
    done (took 0.125969274 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093878398 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073550399 seconds)
    (80/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076055328 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.065326392 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158835767 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.290818329 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073702219 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052150729 seconds)
    (86/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051176121 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06444507 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151276157 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17808482 seconds)
    (90/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052329514 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052555503 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072523855 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.10985333 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051200523 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.184508959 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075876819 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066313758 seconds)
    (98/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079788547 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067995843 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092218669 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149957189 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150617457 seconds)
    (103/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185775297 seconds)
    (104/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.314752713 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.134287272 seconds)
    (106/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.1066533 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091309923 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114124642 seconds)
    (109/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051589698 seconds)
    (110/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052856727 seconds)
    (111/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112709676 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060774681 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139391147 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066831047 seconds)
    (115/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078083257 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052112815 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09341633 seconds)
    (118/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.18538159 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175874374 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065251728 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106495682 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052895938 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.133666257 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086481956 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073937879 seconds)
    (126/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.14606029 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071954403 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075163185 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08830677 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070878045 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052566471 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071769064 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051020136 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148493984 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086717157 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119678391 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.148957012 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087227229 seconds)
    (139/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071182111 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071707557 seconds)
    (141/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052131024 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.148804343 seconds)
    (143/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074925802 seconds)
    (144/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095535093 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073745434 seconds)
    (146/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156891977 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064841086 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072144823 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064972777 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.076240849 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050926294 seconds)
    (152/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073674076 seconds)
    (153/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078918616 seconds)
    (154/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.14655043 seconds)
    (155/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075249682 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067272551 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073347733 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065193001 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064984361 seconds)
    (160/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079182385 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088961853 seconds)
    (162/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.183500241 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120496013 seconds)
    (164/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098020942 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053325998 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067873019 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051276494 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072128666 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.135031008 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142276011 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07318464 seconds)
    (172/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06751902 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06649621 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115263575 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050804159 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066395951 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071410231 seconds)
    (178/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067117203 seconds)
    (179/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109260358 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117719197 seconds)
    (181/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.05999961 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071991782 seconds)
    (183/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097227466 seconds)
    (184/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060276024 seconds)
    (185/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094038255 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064605279 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065667582 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071194613 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.097787771 seconds)
    (190/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.062094579 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.147738741 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072356251 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067101724 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070786921 seconds)
    (195/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071702621 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066713634 seconds)
    (197/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068487014 seconds)
    (198/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050160197 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050006197 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073610759 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08702516 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050834267 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087917698 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065127789 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05065134 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062636434 seconds)
    (207/309) benchmarking ("sort", Float64, false)...
    done (took 0.123242848 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072076368 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064022592 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064629278 seconds)
    (211/309) benchmarking ("sort", Int8, false)...
    done (took 0.135701726 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063927088 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069634135 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05101885 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087831552 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073430824 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071578719 seconds)
    (218/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052483766 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176203625 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070708572 seconds)
    (221/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065565724 seconds)
    (222/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061025896 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064449397 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063693918 seconds)
    (225/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065648616 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050738987 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070032836 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074861305 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063564459 seconds)
    (230/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.097725136 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050790831 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.183891346 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134264226 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165075345 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064620846 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050693951 seconds)
    (237/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.09506808 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132189014 seconds)
    (239/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071049061 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.049823635 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062772977 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08043053 seconds)
    (243/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.069715588 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.049852321 seconds)
    (245/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061584499 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063495798 seconds)
    (247/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.085262415 seconds)
    (248/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.081513358 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051553532 seconds)
    (250/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060249061 seconds)
    (251/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.050788225 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.091775314 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050106282 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063630894 seconds)
    (255/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065112018 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063048451 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.083798983 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05016222 seconds)
    (259/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.068820111 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051083455 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.084958771 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.050884391 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051185384 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050065741 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069374667 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06513369 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.070839317 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064692924 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.049942465 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085539305 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063595594 seconds)
    (272/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067192219 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.052657842 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.049757366 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.085331749 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163602592 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085278628 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062709474 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063904495 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069931562 seconds)
    (281/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050469664 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138536261 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052043485 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061311161 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.049727198 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.150563211 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062004162 seconds)
    (288/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070845233 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069973366 seconds)
    (290/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050474635 seconds)
    (291/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06033379 seconds)
    (292/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050183038 seconds)
    (293/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059824323 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069221693 seconds)
    (295/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068382026 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.103758006 seconds)
    (297/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077530199 seconds)
    (298/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066564706 seconds)
    (299/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051226326 seconds)
    (300/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.063304708 seconds)
    (301/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066615541 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05024229 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.063827863 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064168213 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.068541971 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.062811409 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065588689 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132261444 seconds)
    (309/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050910726 seconds)
  done (took 30.071704134 seconds)
done (took 31.480506739 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095943103 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095013805 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077346454 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096505287 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083993024 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079527394 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075405779 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081026547 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08307485 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085073378 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081806244 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057407319 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077116833 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076936393 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077537948 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094524828 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081080258 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074931608 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075269189 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066960061 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075003545 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06765539 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069584904 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056713144 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080146434 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073713648 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074453753 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075774636 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067511459 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067776774 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070675456 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075303013 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067873286 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079763167 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073473923 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074766577 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076382621 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077798634 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069298166 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067523517 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076038989 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067589543 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074367358 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074843342 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07343163 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072892533 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074155897 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079044692 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093716433 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069035621 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076078839 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076951742 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077747184 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073239434 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070469661 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074651547 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072253407 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092562701 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073819781 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068895046 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074761527 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074587995 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071408683 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073664467 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074150641 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076139792 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076475034 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071573183 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07534934 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072000274 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06617983 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074166995 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069976371 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066407283 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077349691 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078084715 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065708162 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071749617 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073615236 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071731182 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066083288 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068812632 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068086548 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072672513 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06796023 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05552554 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069427383 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072114065 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06533783 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074247634 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072008026 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073374701 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068198987 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076777009 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066066719 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072624093 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066345683 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067232736 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067669687 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070253066 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066283655 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068514668 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075166015 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067558096 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072199946 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080111835 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066246191 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072465107 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065517251 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065654232 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080185706 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075422379 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066565332 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068900428 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065399155 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073246752 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065199375 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066338364 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066339958 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066452845 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072077378 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066348778 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06797865 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073294455 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078459055 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065773185 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06964363 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0679149 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065844241 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071128435 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065879961 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065910197 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201142917 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062678722 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069318686 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066909126 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074033696 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068648063 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073334586 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067829241 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074607402 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070696604 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071647754 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071514157 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06486647 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059492128 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068687372 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068625054 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068356817 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066495903 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068087461 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06623185 seconds)
done (took 12.833447299 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068883775 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144841597 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099020188 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09583736 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087094124 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067036334 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076877695 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102467936 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068908862 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103051115 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087887569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086263971 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1131632 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065533491 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066360428 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070044224 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068107368 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082448285 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101237158 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086617487 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116651048 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066059021 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095252205 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090653479 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087636427 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092632329 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06712026 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070339959 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069611729 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101218697 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087283893 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070253565 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067372063 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101258527 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093064534 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087519871 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06717348 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083131431 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06736913 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066602051 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067860994 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098905222 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080389619 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080995866 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07095148 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070287131 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068090857 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084268779 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089804803 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078981345 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087499607 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103758938 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069711692 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066223761 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065186786 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086464711 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065950149 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069445954 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066727788 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069172795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066730386 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070121489 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08195093 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082616144 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070173198 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081074952 seconds)
  done (took 6.885920212 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085766286 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091883081 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084556132 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084741535 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066730456 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06712123 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066996287 seconds)
  done (took 2.089107844 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069002126 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089784262 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08933083 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089690345 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085193446 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088227625 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076329901 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067314533 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081442619 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068195772 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088651312 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102879934 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067571954 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073264767 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091866658 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06715814 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091694329 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067324249 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070169563 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091070293 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068908526 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082893599 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071124274 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067890854 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081714538 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067517521 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114272488 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071660844 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068792383 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070193562 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065057312 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108229379 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081246948 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076164052 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067014596 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081672613 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081841851 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065861298 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083541637 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072205195 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081407949 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06781284 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067816328 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065460259 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07129892 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077817211 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067813018 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06782394 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069547563 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08674317 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067890554 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080708399 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072549649 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069710397 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068318048 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070808085 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077037563 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067808438 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086571387 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068398816 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083669347 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083133764 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080411648 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082913646 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069292304 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080370425 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080552888 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06987714 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068908774 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070286467 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082844694 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065122081 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0686816 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07732515 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068564444 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089637758 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08963948 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067847318 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076664378 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067724891 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067049429 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067308361 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09010775 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06917247 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066639029 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071215434 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069835479 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065443438 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066065172 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070329841 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065377894 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068201255 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069747664 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069815388 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069798983 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083079353 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068874152 seconds)
  done (took 8.869347834 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07138009 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068921302 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069918529 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06791873 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068349531 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069139462 seconds)
  done (took 1.976456517 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096391568 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069238672 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081692647 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073269234 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105750013 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087665204 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088011826 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079536979 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084471648 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079940472 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087503167 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088668227 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093753907 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073432678 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08731278 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072546045 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087846526 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076266843 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079124498 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073817614 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087560515 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073634915 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074070908 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082419241 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076497355 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073478714 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068519763 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079890083 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079105304 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079720272 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07360297 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076895823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071256113 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079216816 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087728618 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071163211 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072446778 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078014312 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073027364 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076723213 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088545239 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073473441 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075249568 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078051766 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079316666 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070977178 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077713457 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076904246 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087110597 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077807309 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078038659 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07204481 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075445834 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07794829 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070453148 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078466694 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077395747 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086671221 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072299214 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070184399 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06907648 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075548976 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078156085 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075204337 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079362222 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077397215 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070785114 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07311778 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073375452 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071992811 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077573974 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069420544 seconds)
  done (took 7.175331196 seconds)
done (took 28.523210256 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.549741639 seconds)
  done (took 2.075431056 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610009708 seconds)
  done (took 2.161658453 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.64341116 seconds)
  done (took 8.194047886 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394379118 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.483892712 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.697471785 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132425476 seconds)
  done (took 3.302386409 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.677472378 seconds)
  done (took 2.239988406 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211690571 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19901833 seconds)
  done (took 1.981382368 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.38217565 seconds)
  done (took 1.936506797 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.124562733 seconds)
  done (took 2.678756476 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264302989 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164131788 seconds)
  done (took 1.989720743 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464596565 seconds)
  done (took 2.025313618 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.870478209 seconds)
  done (took 6.431959657 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208159939 seconds)
  done (took 1.819960098 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243320082 seconds)
  done (took 1.802975254 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.714211402 seconds)
  done (took 3.274627362 seconds)
done (took 43.474652198 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08201862 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081216279 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080650794 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078159447 seconds)
  done (took 1.868025051 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078777862 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073308177 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076090666 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073188836 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076675702 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072262995 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07407846 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077121597 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072409989 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072932028 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072625415 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072419035 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075041213 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074531863 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070436159 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074914054 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076129111 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072430123 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075570799 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073008179 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070959495 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074642449 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074813426 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072150906 seconds)
  done (took 3.339696461 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078700925 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072869365 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075018746 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072291844 seconds)
  done (took 1.873239863 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078734545 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091504747 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089151451 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077050872 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092333757 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086011351 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069122669 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06888521 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073099701 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076690873 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067731948 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096429893 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087407006 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07683908 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079104364 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066246036 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068331126 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08665951 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077684748 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077430993 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069829333 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077422477 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067814532 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087808254 seconds)
  done (took 3.459087835 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078458361 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103666155 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077459743 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087025662 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090194422 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065437522 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074504252 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08929826 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122193536 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065042464 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07038288 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065409683 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072148022 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065353967 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076006739 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104241233 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107904535 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068228565 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095887509 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065470958 seconds)
  done (took 3.224202946 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074544924 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070630196 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065455657 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06899714 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077051024 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07292372 seconds)
  done (took 2.008120239 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069724673 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066968226 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067679599 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066940941 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072240561 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066684626 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065839481 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066983308 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067612221 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066901342 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066345195 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065590819 seconds)
  done (took 2.380962112 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.424068683 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068823074 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069337487 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06558594 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07035479 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066444783 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080023873 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068240323 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090637548 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066005312 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066361113 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068683193 seconds)
  done (took 2.778442714 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209852564 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076362413 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237406053 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136339435 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11135482 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115561227 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103626343 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112376069 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1439472 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101614551 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167828536 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166030209 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107202543 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137126291 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088934908 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098180255 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156203515 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162403387 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103555705 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165902114 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144056371 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124741574 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146425237 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100903034 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105989322 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121720884 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070862596 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079806043 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170558804 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132371646 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14658 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110672371 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093482081 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177276727 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170802451 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142995159 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134020348 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084120436 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102252251 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133652886 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200034963 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088764517 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164427062 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245806532 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081497024 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133938621 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121321223 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120972035 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10671883 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090643849 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145658577 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18549516 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13902513 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087062283 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112330404 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116141323 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116710772 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103743337 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182051454 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16183854 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127577412 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071437785 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100530033 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153353357 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131739338 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108747963 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12652348 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093255784 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133677376 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154161349 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118651228 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142950839 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128467144 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088509104 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118925398 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14029127 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129413661 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170818408 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124643161 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072626779 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124703993 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103434208 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081727027 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141797813 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075339615 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175789935 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098856703 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106747481 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112937814 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108621905 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108362978 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161728595 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144054473 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242981709 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065642489 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103738126 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11955666 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148162054 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088051498 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10874011 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117348862 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078918221 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141200589 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075031447 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123089634 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075027483 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12525937 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132234827 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076010495 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121488574 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100986075 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100552221 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133865171 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161185976 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089027323 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082172787 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16725757 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122668417 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104100308 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144236964 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155308627 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098867185 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103326261 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150423133 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180536013 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089098906 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162408057 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107249888 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083924692 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087234919 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124418196 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112414285 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122361484 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08230731 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118737165 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168405791 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.0747362 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095284835 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134007183 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079380555 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081127591 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104022067 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101445062 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09495134 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099988314 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104313576 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138103751 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12342537 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105171263 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268952319 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09926701 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172811223 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0887581 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101189718 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103196202 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070148336 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137911091 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157463635 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079880184 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164387475 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123728357 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10621314 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119601292 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082712024 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140447439 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079215078 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070067248 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144411418 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11131419 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110317285 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150802673 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105089015 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127683556 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120566566 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134960157 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13259273 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129123024 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104688985 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087935197 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111703419 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125514582 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072677368 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091204774 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079874218 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103672475 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095953117 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08304035 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142646241 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125390686 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100270257 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111965962 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096642114 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147435884 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076568042 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1294715 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119730909 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094471662 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152659682 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152410317 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131450785 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099052259 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144802954 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070452497 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073815801 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089788122 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265581263 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083557243 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084109497 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117363638 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147823395 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129083471 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138063622 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111976817 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121432342 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155142768 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069536911 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115535121 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14754568 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122124653 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103917719 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08955057 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098745609 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141839343 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108625725 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182397955 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114000783 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126267455 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152041664 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098843172 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079727444 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107448763 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136233228 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104770904 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144888663 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099958532 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08776863 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109854065 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074083362 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100056161 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12683291 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120039806 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136185399 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114298025 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133090972 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077616896 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117598488 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120315282 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123033601 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065054907 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120731214 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162163105 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093847439 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118993748 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153166327 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07919705 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123491184 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320325155 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146472367 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084368791 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110621811 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118436382 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128506875 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119788001 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141427315 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108135599 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135156445 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110458641 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085051787 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087968963 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097300669 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104432004 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095070686 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108224173 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114684743 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095173803 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132259013 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102866954 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109095612 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117701955 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096793561 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088996727 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096814517 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175969758 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121136717 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173480097 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099350667 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144964199 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164261157 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07495027 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078823588 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078454441 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139785323 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083710153 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130771213 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097396478 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10592236 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124048351 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142626895 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094828634 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068416011 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108240866 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134873494 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111946243 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098626594 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104892549 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164292199 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101138336 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082154998 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113130194 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104393397 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10208818 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172644955 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061455721 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239431937 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076478866 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081585013 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12823434 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154418052 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081122375 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102893765 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11915416 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110380296 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127860068 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101660205 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099536588 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115028104 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151226557 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128980706 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089649379 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112115029 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129878249 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156945853 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105441534 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095204691 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174053999 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152371497 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160162431 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088598306 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11468193 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130859299 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107977906 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13952728 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083289848 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163858903 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081975353 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136533306 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104294975 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09010378 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130341089 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098820589 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088004841 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148128574 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117889119 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082552786 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077776378 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118244175 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120340799 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107089557 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075435454 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139890114 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072500189 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132341588 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168490143 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08102981 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103873075 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096205812 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223047683 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10909698 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102882326 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090428192 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099015028 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174038081 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088251048 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150804525 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141720235 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113719029 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137307522 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100658151 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63587125 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077786423 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152187639 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116265543 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173289656 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097747144 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117277478 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109624179 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123363918 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145625316 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105130115 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177986994 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132762183 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115799155 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07932242 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103108049 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10294533 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089033202 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104889134 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113497173 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116686261 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094152768 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116156685 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123586185 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082459722 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095172391 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156630704 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116917549 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144498496 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140768834 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085305502 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11798236 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139454524 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080283281 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122515092 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151861794 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109778665 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097389099 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080192942 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102126043 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313898411 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073515211 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164032302 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11956944 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109895965 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112992983 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114820064 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132462379 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108538166 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121068544 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093429771 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110822202 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112290354 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082514897 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077543523 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104496869 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11250724 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098399761 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099118812 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097578305 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152675989 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07131418 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095441348 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103330819 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145783458 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174564495 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087869154 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082599505 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119876145 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112321207 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114077744 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120579963 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079224803 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082135128 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081905666 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077110991 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108536737 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112195635 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104672744 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111329081 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163607135 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082140215 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224068805 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095031925 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104725771 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069644945 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078478052 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095691546 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097513651 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108490285 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101065183 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170637533 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094904566 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090803132 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093185978 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07288036 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082252386 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127625759 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253953976 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120142692 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098116419 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063498091 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109127389 seconds)
  done (took 59.00893181 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109604618 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082447242 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09653045 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149691646 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122961615 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211911529 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158242182 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199358284 seconds)
  done (took 2.814576726 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069982674 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093141919 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100105852 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083869892 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067064274 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068789417 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225084154 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080694544 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066164175 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088566918 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079449259 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069378821 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422588375 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065901687 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068655699 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062874769 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066972349 seconds)
  done (took 3.45487671 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.366723696 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363253923 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371126666 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073075691 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.81840763 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088289002 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.077528516 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096323934 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071947652 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.281905072 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703269845 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091985813 seconds)
  done (took 14.093327281 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076700542 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069462938 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084678699 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083807569 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072292775 seconds)
  done (took 2.06926938 seconds)
done (took 103.972099305 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080960684 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391483902 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053626155 seconds)
  done (took 2.155289369 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084473159 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08521421 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083866444 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082870277 seconds)
  done (took 2.026313737 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075830323 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076327346 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084642974 seconds)
  done (took 1.918410902 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224884968 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140574074 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08659249 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08341268 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07857266 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078048206 seconds)
  done (took 1.928180062 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073228928 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074601835 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072295415 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075711664 seconds)
  done (took 1.978228202 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076721045 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052302028 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055018229 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055608947 seconds)
  done (took 1.9205749 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087174334 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078551429 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078011761 seconds)
  done (took 1.926212527 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107513907 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085147168 seconds)
  done (took 1.87700115 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082417393 seconds)
  done (took 1.766217499 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099576313 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113542101 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128714969 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109066922 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136657463 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108917339 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085388773 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087038023 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077038075 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087395075 seconds)
  done (took 2.713058934 seconds)
done (took 22.424589727 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079429246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365565711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361809673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091485186 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668055483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356823104 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981662346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091811874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113074726 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067916698 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084012379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649434674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.006965731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323948498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.996649691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.410342282 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650247428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068117724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067498568 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068038013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964837395 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067483046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068096814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068430852 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649084481 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371091493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068600583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.414091472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068085162 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069569189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355369733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068274107 seconds)
  done (took 16.395823407 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072241826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117184466 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073459032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083423836 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070655596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069625894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071005018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068917978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119476388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068183562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08425853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067509747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071906731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068513175 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087190798 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068496696 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068572454 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068792572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067860756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068245439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086522783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068045056 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068255943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068590932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067890434 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079484354 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068166063 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067836299 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068390372 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06999804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070792603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069026873 seconds)
  done (took 4.080447793 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116341201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124969854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073860965 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102544633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111668518 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069969476 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143546799 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09300513 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127470607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06821884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08463144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06864132 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100771607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068840972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087939119 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06868058 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06952536 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069147121 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068158944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068437034 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08717317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068505606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068439128 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068985184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068405221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081626589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068398528 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068437973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068361979 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070405449 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071562398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068895459 seconds)
  done (took 4.339359218 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073561906 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075533587 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082496848 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083831757 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069340716 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072595457 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073531145 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069811498 seconds)
  done (took 2.297396702 seconds)
done (took 28.798671305 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080803165 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068795774 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072253019 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081325473 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073423391 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078883225 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066941905 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074637702 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072115714 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073140475 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074919128 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067619355 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071204999 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067704462 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07423934 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067787325 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079216738 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071905537 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079327052 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079354446 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069830436 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073027893 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074191905 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079276312 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079582907 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079031735 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077757442 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073416621 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069194851 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070593619 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076595006 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084134423 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068939216 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079233973 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067625547 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067941087 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071717094 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068030387 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079448283 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076773159 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069541758 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.0759574 seconds)
  done (took 4.782613998 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090288452 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090603148 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084603787 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061876871 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067294504 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06516665 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088768878 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059705022 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059667824 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088374436 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05599833 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059220517 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062604131 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054306616 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059849992 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057182678 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061853557 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056186678 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059331633 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059803283 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058664343 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05411326 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060411058 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064986667 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056654766 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062364638 seconds)
  done (took 3.404102987 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075091067 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084196663 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088874601 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126263403 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104195657 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076631132 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077649598 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091720156 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084968501 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066908498 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071195348 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093643687 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087769873 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073764655 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067248965 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085181094 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081830312 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068700794 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073565536 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090835718 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083802409 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083496163 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092711051 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080631975 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067128082 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070120493 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071257941 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081098447 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072385267 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076787496 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071875818 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07107438 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069320896 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078414222 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071064967 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068909245 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09076828 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076777707 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077572838 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068257968 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070917347 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06865559 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088988447 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122347383 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066909793 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074131097 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074981099 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.088511395 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067259553 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086074156 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078027661 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066892128 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070271357 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066402021 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067334845 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080169372 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069102474 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069579339 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07618928 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070235835 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085228346 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071313715 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082486622 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067086423 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075130312 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066551374 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068844058 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066915952 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09224779 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069002509 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107963823 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068633091 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068342367 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076296179 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075326069 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073137873 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067736593 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082363391 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077499327 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071033172 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076046937 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07119678 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070717503 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087300977 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069915101 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06905821 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068508779 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073833802 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069894742 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068621287 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080402349 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068047236 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07058276 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084649603 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067814488 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068760664 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073577627 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072103003 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06739436 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078565303 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072702246 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068229016 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076995816 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067485735 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070315511 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078211447 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073558656 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066448235 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072119342 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073361642 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068590124 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069140111 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070956996 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069562722 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075667359 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074152824 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072024405 seconds)
  done (took 10.612064236 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16059713 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15392571 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069827256 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144949269 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075780042 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078913509 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147399578 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094077439 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067562332 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06843009 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069313103 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109635641 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105883918 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115480295 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078926501 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06787753 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083431811 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113498933 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149025457 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142918437 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083443724 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076660274 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069714278 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069550299 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070248083 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078056526 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08531027 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076686788 seconds)
  done (took 4.443028871 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08241133 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096740801 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074651551 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088474838 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091053597 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067831549 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069830614 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069129469 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080146481 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079133435 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067658549 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073946546 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074462319 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071190751 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068985769 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074221864 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075021683 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068861745 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070601544 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0732083 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077276125 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080697112 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072130387 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067142932 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074596861 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067362652 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06476631 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084721135 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068639031 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090576272 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065963057 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074954761 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081636682 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068418137 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067620928 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067836634 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067805329 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067494172 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069792875 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066742454 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066235659 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.0578761 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067167822 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079515428 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074142008 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056858043 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073293516 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073546994 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073016178 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065387815 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070847369 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070361299 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070953314 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075524922 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072912423 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073169102 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06845991 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065683983 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075447962 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067699768 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064517801 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066333438 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072426798 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066461194 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075556527 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072410107 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066073202 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067281025 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069470059 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074020999 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067672784 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070843821 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065597785 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069539683 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072005238 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069746676 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068590816 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066364369 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067314884 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067583839 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055474336 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067378136 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053709693 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070769742 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065713905 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066012377 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067366207 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072435819 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080198556 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06849021 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073175867 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068510375 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066580867 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071079276 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060636475 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070568832 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082435307 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082908922 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067720329 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065829441 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081735573 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071794814 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066291863 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056209621 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074807961 seconds)
  done (took 9.199193293 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09582678 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087763208 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070439027 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083439388 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090662777 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086889028 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075155149 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076370682 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069625168 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082299519 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073525719 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076431848 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068778492 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077167336 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093029399 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077007241 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069612127 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076712141 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071745626 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100921988 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082668295 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081886258 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074667842 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068200452 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075832096 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079817796 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088933846 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080220779 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078512942 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075407361 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079799911 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089453855 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074478662 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071937251 seconds)
  done (took 4.451204715 seconds)
done (took 38.587379734 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.780675056 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.959990841 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.780073528 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.127053284 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.063175767 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.792326511 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.918255255 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.77484034 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.939127442 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.818577759 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.002031894 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.822365471 seconds)
done (took 65.491681404 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.794360545 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.91521715 seconds)
    (2/2) benchmarking "String"...
    done (took 2.051427564 seconds)
  done (took 5.680908553 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.074361238 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.381875672 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.01792917 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.773578312 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.776272683 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.069986548 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.571912769 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.292588928 seconds)
  done (took 30.60050201 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.991918278 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972527707 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.454747025 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.496941562 seconds)
  done (took 15.679162962 seconds)
done (took 63.625884149 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.790656235 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.784973706 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.788591491 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.751184322 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.822219119 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.770730588 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.29272843 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.810937184 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.762233745 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.755823814 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.764059416 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.188115967 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.77035674 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.134700401 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.760972301 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.770193768 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.828805906 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.296731327 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.913273983 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.76449439 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.782856462 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.807521557 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.757004061 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.765781429 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.773777501 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.759793049 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.19740413 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.760712678 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.375192598 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.760318347 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.78438938 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.239496207 seconds)
  done (took 203.995463561 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.756541565 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.744127314 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.808046531 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.780467104 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.14487712 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.952146022 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.885102223 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.188965539 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.758244155 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.76348364 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.918671353 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.757728043 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.949347661 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.797710002 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.764033474 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.756118156 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.932427404 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.966062632 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.757773749 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.034219497 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.76819481 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.801460324 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.753198707 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.906919506 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.789211165 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.776092326 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.779329348 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.773971081 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.941277512 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.908207302 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.768249111 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.78483221 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.885488985 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.627776631 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.765332579 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.762722692 seconds)
  done (took 168.909723356 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.894499154 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.753840817 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.752281134 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.753520211 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.759047977 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.75115838 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.752698955 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.873076845 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.874757369 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.206712868 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.998378358 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.8047293 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.577742601 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.752602213 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820864753 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.766541877 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.755961003 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.76878081 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.779222993 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754775358 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.754509289 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.876968572 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.765528722 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.778104762 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.761685031 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.753762763 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.757644872 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.12287015 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753385887 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759010682 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.996146401 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.75314153 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.754765427 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.655855207 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.120073726 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.927072686 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.852836905 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.761710866 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763740297 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.76103514 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.987370962 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.759528841 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.761411846 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.76276744 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.034752351 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.760366467 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.88482036 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.759748633 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.263934903 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.759302951 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.7620239 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.625631776 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.445520255 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.760709487 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.760619778 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.76303244 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.758828908 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758331011 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.765854633 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.625986596 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.83895824 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.763649249 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.764044311 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.765886068 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.761185992 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.929047153 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.760016075 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.876888766 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.81827271 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.877431997 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.880722015 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.762674232 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82675322 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.855474653 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.760969983 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.760178852 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.761669192 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.762279368 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.841984713 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.760658618 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.906479062 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.768915494 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.763602429 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.812974809 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.830764479 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.761791104 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.649356434 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.763388926 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.761489002 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.07661871 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82722486 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.762313793 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.761080818 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.761749261 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.891171303 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.881601745 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.547126378 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.764008367 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.767314274 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.764860459 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.762253393 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.929252345 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.763319432 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.947768816 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.767865423 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845634455 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.768703527 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.765588405 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.764837365 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.794314489 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.764690685 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.764475032 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.764354947 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.819956132 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.136064861 seconds)
  done (took 401.466692978 seconds)
done (took 778.028990066 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.442347901 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.400641338 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.517734294 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.43553362 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.403775816 seconds)
  done (took 13.90519568 seconds)
done (took 15.610200332 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.849967434 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.857235412 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.786606819 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.852616613 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782839349 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.851532324 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834457041 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.789086477 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.819423506 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.78917543 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.822597268 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.787263655 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777932674 seconds)
  done (took 25.307310873 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.990788872 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.000947219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834701048 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.999681653 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.811245093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991455305 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940672087 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.915852117 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.915972061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.779986708 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.778525536 seconds)
  done (took 22.668261944 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.998208222 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.003995228 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.837873199 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.000251691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.812413233 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.999911791 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.926409037 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.920028167 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.914518489 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.779021607 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.776616887 seconds)
  done (took 22.678028846 seconds)
done (took 72.355641886 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.778335963 seconds)
  done (took 3.485735271 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.794314328 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.933556615 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.779849561 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.7763881 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.774308263 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.77400235 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.776807544 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.774920132 seconds)
  done (took 16.094865794 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.770042604 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.772218532 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.769283158 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.771091147 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.772810228 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.772960963 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.773677346 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.773943296 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.771251097 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.773316681 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.770908275 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.772933283 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.773612079 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.770095141 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.773750251 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.774425855 seconds)
  done (took 30.066870788 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.774991568 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.771834293 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.771945145 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.772926056 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.771421551 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.774148726 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.773966843 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.771030728 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.771661958 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.772123154 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.772435643 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.771886715 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.773154635 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.7720428 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.772148402 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.773188898 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.771533986 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.773465626 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.776763849 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.770958531 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.772787991 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.771303225 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.773416247 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.771995081 seconds)
  done (took 44.256655647 seconds)
done (took 95.609298693 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.481000111 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.219449694 seconds)
  done (took 8.411979575 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.775791832 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.77419593 seconds)
  done (took 5.299136788 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.776408176 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.775621705 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.774138483 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.77563472 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.77501341 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.77586554 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.776148085 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.776453897 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.775224502 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.776501753 seconds)
  done (took 19.469854544 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.778314237 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.776345399 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.77412564 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.776941732 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.775797448 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.772356613 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.778469258 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.777588928 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.777400909 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.775366091 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.778314568 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.776749929 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.777140551 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.77547655 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.776181678 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.776596221 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.775162247 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.775386406 seconds)
  done (took 33.688231119 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.775766806 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.776695181 seconds)
  done (took 5.26738397 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.774163106 seconds)
    (2/7) benchmarking "second"...
    done (took 1.775920749 seconds)
    (3/7) benchmarking "month"...
    done (took 1.773512083 seconds)
    (4/7) benchmarking "year"...
    done (took 1.774551877 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.774871204 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.775493293 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.775988265 seconds)
  done (took 14.14035537 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.778541507 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.939586369 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.023964941 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.443161498 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.778563798 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.779855454 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.730101075 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.781029227 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.781889371 seconds)
  done (took 19.752318364 seconds)
done (took 107.737018382 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.602415632 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.776815034 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.118987665 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.829619248 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.83119337 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.073830421 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.793330526 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.999432321 seconds)
done (took 42.740097234 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.850029967 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.318071695 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.342331848 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.862174735 seconds)
  done (took 12.235636342 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.757713512 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.303550968 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.812483715 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.372169848 seconds)
  done (took 19.970672558 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.141990924 seconds)
    (2/2) benchmarking "read"...
    done (took 2.134015444 seconds)
  done (took 5.996262239 seconds)
done (took 46.764007593 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780096262 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.776471818 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.777511658 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.781258071 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.779403477 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.779947604 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.77847256 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.777370473 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.776835802 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.784284856 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.780397307 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.781069452 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.781160838 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780720643 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776787895 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781331208 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780513668 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.776713763 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776845679 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.780882525 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778849139 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7795502 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.776659023 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.778344172 seconds)
  done (took 44.415805893 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.780433092 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.780311128 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.781704781 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.782077971 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.779167763 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.782409357 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.780813022 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.781456602 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.780735402 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.780338891 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78099532 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.778865784 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.784221164 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.780280239 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7820995 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.779343714 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.78437758 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78032125 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786075148 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.779621096 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.782237688 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781432296 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.780648662 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.78587038 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.783472498 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780774786 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.783410915 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.781768006 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783711376 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.78512144 seconds)
  done (took 55.17249398 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.788970093 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.790970004 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.782880328 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.784251144 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.785337704 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.783604096 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.78382391 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.783627232 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.783789686 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.785737752 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.784795714 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.784919051 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.78293334 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.786236192 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.784484602 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.788877732 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.785089229 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.78461039 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.783802841 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.784556855 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.783879066 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.786052018 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.785102426 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.785826973 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.784386337 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.784778575 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.789602692 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.786399217 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.785506711 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.786170212 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.786487646 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.787049383 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.789029265 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.78666389 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.787294377 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.786029065 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.790669866 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.794984782 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.784978023 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.785423657 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.784592197 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.785597318 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.785803703 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.789338068 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.78575569 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.784073663 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.787086783 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.785341508 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.785914036 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.787791427 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.786146526 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.784624655 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.785146573 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.78698585 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.786275078 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.785157437 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.785630803 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.785440439 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.785130479 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.785401633 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.790361391 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.784654156 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.787720104 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.787037415 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.788234709 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.786428482 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.784096953 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.78663004 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.786873982 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.785158402 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.786380652 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.787906704 seconds)
  done (took 130.319930261 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.786127574 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.784407137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.783186224 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.784859685 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786573417 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786083742 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.783923268 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786858668 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785373826 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.790123836 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786843037 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.785019253 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78582993 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.788183218 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787405932 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.786947376 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.786836868 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783760959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.788275633 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.788419964 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786041286 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.785490417 seconds)
  done (took 41.017800353 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786801397 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787583217 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.784736568 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.789913573 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783864784 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787537758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788076536 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.789506312 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787452757 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788120126 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786310577 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788170412 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.787047491 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785947871 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786753005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786307982 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789529 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.786452656 seconds)
  done (took 33.891457 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.787478301 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.787584242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.789099251 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.786609775 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.78676675 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.78920865 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786211552 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.78941846 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.788507152 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.786043516 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.789488416 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787735938 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.788079463 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787800726 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789005921 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.788000803 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.787996328 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787711856 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787749064 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787733479 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.786142413 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789114707 seconds)
  done (took 41.05696968 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788255684 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.790490182 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.788090024 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.788113351 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.788658747 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.790468142 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.790114066 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.788530954 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.789161655 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.791572216 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789363629 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.789781178 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.789232725 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.789610303 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.788799637 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787931281 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.791432353 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.788409521 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789302206 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.788488121 seconds)
  done (took 37.510761056 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792548801 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791975004 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.792989501 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793524462 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792981114 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.791635114 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793281568 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.79298839 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793233305 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.793226061 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793243732 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.792905136 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79260373 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792594671 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793774325 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793746197 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793976777 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794033741 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79383544 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793871275 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.794560799 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.794411061 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.794714154 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795020246 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.79412074 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794838345 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794824327 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.794855059 seconds)
  done (took 51.946716303 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793432389 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.79335507 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.789854801 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.790143783 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.791289963 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.790413386 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.792077651 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.790730766 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.792953242 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.790801957 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.794084812 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.794726846 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.793864196 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.794246763 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794227317 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.793742202 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791874879 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.792906858 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789979741 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790841454 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.792044229 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794083089 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.792878693 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.790290338 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79181418 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.793875728 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79043786 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.790363173 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794794938 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.792003816 seconds)
  done (took 55.495647024 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.813534846 seconds)
    (2/2) benchmarking "in"...
    done (took 1.811951436 seconds)
  done (took 5.353000178 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.791919421 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795516409 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.794869894 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.792702588 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.792433237 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.793505174 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.795673776 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791260551 seconds)
  done (took 16.075594775 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.795916012 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.795788947 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.794626448 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.796071944 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.796328432 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.797791034 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802305052 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.794630863 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.797533017 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.797708638 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.802208564 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.805133197 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.800217868 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.796275411 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.797414934 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796624465 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.795311748 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.798066456 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.79557895 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.7956667 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797998967 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.798392224 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797907578 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.792216511 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.798605224 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.809312657 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.802956965 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.796951719 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796362617 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.802838577 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.795101022 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.793482107 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.798034651 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.797757714 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.7983958 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.798494883 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808634387 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.798587565 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.804067875 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.797368863 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797325416 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.794215315 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.799021194 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.803358414 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799362926 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.798778149 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.796338359 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.794611978 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.798312094 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.801809494 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.80251681 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797039963 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.793941654 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805524013 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.800075801 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.807945043 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.799150828 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.800073529 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.807398857 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.811336805 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.813153367 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.806051288 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79998724 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.799096853 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80863302 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.823349808 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807226635 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.794875219 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.795914105 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.799847542 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.806815416 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.813615732 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.809671463 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.800520626 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800254111 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.800499954 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801236794 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799188523 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.808466313 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.803018675 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.799639578 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800825058 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.809469111 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.821548813 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.801083155 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.800924472 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.800859012 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.799987627 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.800737617 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813761306 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.802676593 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.800804519 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.799219139 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.801259115 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.804315419 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.803033091 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.799730008 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.802116515 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.799835713 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.799977362 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801167526 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803061778 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.810425266 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801875144 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802139577 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.811587657 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.800082477 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799664778 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.810697559 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.800802587 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.801470182 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.80036795 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.80853026 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.795931873 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804439195 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.811323612 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.802108805 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.803152407 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.804248842 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.803541446 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.809862795 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.82848411 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.801108181 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.800640741 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.80701066 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.816053696 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801332884 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.809493392 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.801152353 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.798892028 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.797571777 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.804313993 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.800322305 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.804447945 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80218902 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.804817647 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.799262924 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.802444011 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.804279248 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.803748201 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.804786575 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.804704482 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.804296204 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.806131212 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.801994152 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.804568982 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.809727367 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.8018843 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.803068373 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.804579963 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.800092539 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.803548129 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.804054269 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.805528693 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.805936752 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80510943 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.800855458 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.804345563 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804151949 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.80248394 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803066588 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.804512179 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808198869 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.804373938 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.808952922 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.80383873 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.801336555 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.804452768 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.804281737 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.80560926 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.80502721 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.802546845 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.805748159 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.815237998 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.802535289 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.805100084 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.807957103 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807774733 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804975503 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.804972858 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.807384447 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.811478812 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.804946485 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.812792549 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.804199908 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807498014 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.804653585 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.805027859 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.806316377 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.806375804 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.810022428 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.811570693 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.819636953 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81661708 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.805106175 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.808627767 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.807359395 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.809583619 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.810699687 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.807285885 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.807015272 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806990787 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806673871 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806738068 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.807938353 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.807733106 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.806540204 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.805762518 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.805033831 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.808263662 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.806949503 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.807645435 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807639675 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.802241463 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804948356 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809240433 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.806485881 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.802928803 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.805661202 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.805924037 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.805971112 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.808444838 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.818061301 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.802288578 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808195199 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805239882 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.805260231 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.804435827 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.80590574 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808961769 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.806660718 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.815012551 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.808516969 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.809116963 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.814606862 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.808844525 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.80763738 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.809535854 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.807364837 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.802637601 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.810067475 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.814910436 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.808397194 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.808010697 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.809186788 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808571192 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.807588722 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.81621096 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.806322478 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.808266644 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.80971521 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.811785482 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.806265217 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.812251491 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.81001253 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.810207835 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.808969909 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807887405 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.808897632 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810308796 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.808386589 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.811107071 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.81086344 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.812262674 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.81852279 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.816832392 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.809901705 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.814863994 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.812053536 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.813155106 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.811715154 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.812597799 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.808936519 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82341997 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.819935412 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.818091452 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.813020774 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.809826557 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.81615965 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.812051938 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.815658042 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81106502 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811121779 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.810438901 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.809885541 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.809762996 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.810827276 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.810406736 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811807861 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.812750703 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.814251945 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.811937344 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.809070855 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.812270971 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.813878159 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.81234531 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.81109891 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.811111587 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.816233047 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.813952394 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.810668768 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.810806957 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819649863 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809720808 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.814128916 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.81044035 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.811765838 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.810279666 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.813345434 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.811523671 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.815681735 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.821947984 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.815109946 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.823257088 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.812530554 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825966258 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.810840263 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.813456231 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.820484168 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.808710656 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.809420442 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.813143671 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.812534012 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.820991978 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.811376337 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.813875503 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.817181344 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.81263962 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.815280777 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.811948205 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.81503945 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.814090536 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.812148886 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.8245918 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.813711915 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.818430038 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818807856 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.810434517 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.814250406 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.812008362 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.811410071 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.819911857 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.812335512 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.814274271 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.811769732 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.814102863 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.813408339 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.8127692 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.812933325 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.810541499 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.81351215 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821570142 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.814828872 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818857652 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.815009564 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.82771492 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815581304 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.822122581 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.813730278 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.815304841 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.815700132 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.81366037 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.819557348 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.814053369 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.816549312 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.814773443 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.816027937 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.817344014 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.814173197 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.81763116 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.815244065 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.81476392 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.813870039 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824089473 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842195563 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.815470874 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819887657 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.812636646 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.816127172 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.818363319 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.815690926 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.815085577 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.817845919 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.82778727 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.823230131 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.815821248 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.815756964 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.816982516 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81558702 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.814096501 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.816632365 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.81648361 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.815346333 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.81929601 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.816101854 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.822613714 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.81523365 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.816406368 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818424735 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.815486152 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.827806031 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.816350453 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.818841781 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814353304 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.815325446 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.817449039 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.817188451 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.818424396 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818144511 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.816559186 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.818675118 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823661347 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.82440891 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.820206727 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.815415223 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.819510415 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.818605883 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.819907007 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817420339 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.817654431 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818381724 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.817687188 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.817044279 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.81990396 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.816942176 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.815234662 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.818939318 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.817260717 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821255378 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.825559184 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817829145 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.815503284 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.81625417 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.817018348 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.816371633 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.819242633 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.829781573 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820949965 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.827578129 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.827473776 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.819455117 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.813869671 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816519814 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.821456228 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.812299555 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.814777389 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.814544589 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.816416059 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.815129188 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.817315662 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81516035 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.822106464 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.812543549 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.813736701 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822718496 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.816193549 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814676419 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.814971741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.816666947 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.815631019 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.810631878 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.813707301 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.813131315 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.822115856 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.817935538 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815656304 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816282991 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.81320833 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.81564906 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.819711658 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813789847 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.81634589 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.813120437 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.8154736 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816457617 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815191262 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.811448372 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.814103105 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.816054916 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.819079845 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.822142033 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.812084257 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816695946 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.81678502 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.816768124 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816140678 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815385395 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.811060322 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.812952167 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.816841882 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816094589 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.816739609 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.820782708 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.815927679 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.816886025 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.818351782 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817208977 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818668935 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.825694105 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.822516503 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.812023376 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.815837261 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.817960837 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.821832118 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.818105547 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.817194644 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817396577 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.819431481 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.815627494 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.817893418 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.815868441 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.819630256 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.83401327 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.815777981 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.816859448 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.819961736 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824650095 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.81637563 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.81449907 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.817965162 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.821546977 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.820017136 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.826874201 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.818626942 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.825452078 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817415827 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.819388207 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.820849739 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.821828472 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.826151686 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.823173285 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817667911 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.81813095 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.823701663 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.836951035 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.817089198 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.828436491 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.847487119 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.818966196 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.820382356 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.818528392 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817385706 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.818626766 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.822748279 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.819591421 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.818811493 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.818481731 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.819544793 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.820685889 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826098119 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.819652175 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.818767341 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.818475624 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.820311839 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.823447014 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.816706875 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.821160067 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.819544348 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.821160266 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.819948393 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.821848914 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.819457395 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834703789 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.830350625 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.818371517 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.821228964 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.81625035 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.825581973 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.822937093 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830939146 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.828581542 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.821686471 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.819841315 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.822423813 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.821750538 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.816909237 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.821740588 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.821401487 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.819908177 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.818588133 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.836023928 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827804517 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.826098363 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.820614268 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.822043232 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.820856125 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823806501 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.822614115 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.82123932 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.826673145 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.821587575 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827124076 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.82192768 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.820007415 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.824320482 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.829534945 seconds)
  done (took 1081.626788521 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81790188 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.819679893 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818305811 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818948301 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81925431 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819050919 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81920508 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.818862754 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.820069841 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819612287 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.818494486 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.817555314 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.819312657 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.819864369 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818112805 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820562658 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81917963 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818532536 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818773862 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81905203 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819100874 seconds)
  done (took 39.954739534 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.822749292 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.819616267 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.819837792 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.820865153 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819560483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.821771958 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.819925959 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821843811 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.821091923 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81981814 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.823706211 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823116762 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.820403718 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.820210375 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820184909 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825081223 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.824420838 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.821024687 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.823114897 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.821761548 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823555508 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.82375124 seconds)
  done (took 41.834669021 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.825951889 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.826116432 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.824272755 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.822236293 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.823984392 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.821154811 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.824913539 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.824359112 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.824692901 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.827157554 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.823874571 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.825207162 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.830914416 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.82947431 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.828628285 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.825003683 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.969191003 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.826165051 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.828358589 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.828413903 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.822302936 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.832139505 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.823754595 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.822367967 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.823920562 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.826276852 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.824980558 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.824952805 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.827591235 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.828386232 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.831480664 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.824221555 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.825647812 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.829522455 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.825862916 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.827808336 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.829167491 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.827691683 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.82291073 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.825452702 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.835226887 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.847351901 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.828200507 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.834222637 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.825720421 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.827115022 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.831371427 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.834857328 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.824230628 seconds)
  done (took 91.433088402 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.826323765 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.827135246 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.823484621 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.828805848 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.82699235 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.826892197 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.827768565 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827279636 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.823976431 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.822534463 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.828147452 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.825093663 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.826222994 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.825756731 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.828636234 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.825974734 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.824848632 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.826381389 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.82375878 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.824390192 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.826195295 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.82655125 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.829686121 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.825751218 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.828610389 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.824011426 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.824405225 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.828037028 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.826732422 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.828783919 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.82850549 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.827923126 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.828035072 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.827657473 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.826344169 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.828234768 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.828782345 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.825719887 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.829459689 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.824383477 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.827746487 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827322693 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.828796482 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.830226634 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.825628461 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.827745282 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.828193698 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.82664614 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.826363923 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.827490395 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.828406163 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.827422711 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.828870526 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.827054179 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.830107015 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.829662996 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.827315162 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.827754248 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.830302157 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.827010603 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.824954681 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.830382296 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.82871877 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.830694375 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.827831148 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.828368325 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.826964118 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.830812716 seconds)
  done (took 126.015495366 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830464522 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.831665123 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832231023 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831484595 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831882136 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.8321288 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.831343634 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.831934583 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.831424966 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.832794606 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.835271252 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.833281773 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.831767184 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.830436538 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.831426285 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.831081987 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.83267717 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832985461 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.833305492 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831412358 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.831824516 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.834073602 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.833427131 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.833700738 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.834704028 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.833545529 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.83101963 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.832647385 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832868332 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.8336174 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.833238274 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.8328106 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.834383945 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.832434185 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.834876755 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.834896341 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.833707538 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833041559 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.834712258 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.833110506 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.833889555 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.833136299 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.833196851 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.833586277 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834164722 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.834149223 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.833871481 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.835599446 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.834297943 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835189897 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.833736612 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834213135 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834364267 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.833854174 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.835187032 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.832392918 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835675616 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.835783202 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83372524 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.834083352 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.83347265 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.832425373 seconds)
  done (took 115.42507594 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834769377 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.834197815 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.830080644 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.831149361 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.83364424 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829626365 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832888305 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.83275805 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.83291522 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.833426418 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833390078 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832386028 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831445032 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835397605 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.83085025 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830520412 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831078467 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.830580598 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832651743 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831386551 seconds)
  done (took 38.411720885 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.832967612 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.833969852 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.832335001 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83426949 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.834909603 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.833382577 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.83524097 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836348354 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831659449 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833774661 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834754832 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.835145896 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832198165 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832898956 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83526533 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.833544518 seconds)
  done (took 31.110945121 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.833945606 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.835427835 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.837702115 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.836724916 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.833450549 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.833111521 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.834904728 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.832393958 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.832571392 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.837244285 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.835661659 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.834460733 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.835921106 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.837654883 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.833413184 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.836471053 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.835392889 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.833731771 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.836926075 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.837717019 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.835178853 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.833249376 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.83782494 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.837678763 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.83590953 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.834796755 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.83526752 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.834248148 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.833711619 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.836867988 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.834403206 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.834956713 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.834375318 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.83275741 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.838882029 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.835030989 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.836362873 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.838093315 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.836871122 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.837626708 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.837595775 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.835312775 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.837429735 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.83764375 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.835631026 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.837510494 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.836871898 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.837076804 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.835444771 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.835021658 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.838568678 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.83998109 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.839088532 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.839338616 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.83994932 seconds)
  done (took 102.753612953 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83810265 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.837886814 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.835887222 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.837986749 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.839084926 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.835270376 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.837055701 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.836263935 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.835381983 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.837600531 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83780585 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.838424554 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837350369 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.837373432 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.836716531 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838921182 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.836874938 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.835371719 seconds)
  done (took 34.84090136 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.835944061 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835590939 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.838253535 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.834922887 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.838227416 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.84088615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838920531 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.841266959 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839661289 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.836821588 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835843437 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.839217496 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839611682 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.838665417 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.837944765 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836851491 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.838871081 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839674165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.836105768 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836049038 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840159264 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.840232558 seconds)
  done (took 42.211957539 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.84092772 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.839377912 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.859029134 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.883136269 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.870526125 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.841448472 seconds)
  done (took 12.907578938 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837518694 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839399841 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838461594 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841346123 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839250172 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837734646 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837429262 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836936355 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840514239 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837998201 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837695363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842082998 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839664724 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838268583 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840256653 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840299208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837894254 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837926177 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839396738 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842072841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838148004 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840476568 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837990579 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839739138 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838754093 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839761885 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841262613 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83903421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839119139 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840756147 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841579619 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839525301 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8419698 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83890258 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841823752 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841469418 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838349551 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842778308 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842726985 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838756396 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842841225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84291521 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841688684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840159882 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842496181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839115903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839538663 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83972206 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839889593 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844010321 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842616895 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843004924 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843374964 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843161631 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843222976 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844934408 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841212456 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840958149 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842665765 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841611599 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84166061 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844309272 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840731363 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842942919 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844596704 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843160048 seconds)
  done (took 123.258610642 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84181104 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840617754 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84170952 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842475417 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842745086 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841469165 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84378357 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841121092 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840993098 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840417324 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844397533 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84106499 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842371627 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842261217 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842382128 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842489608 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843834574 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841528844 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84304847 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845677593 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842140483 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843108848 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841797692 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843743292 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843187593 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846142678 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84365862 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842907026 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841884921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842920607 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8414164 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841818809 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843177114 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.844774411 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843254097 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84357546 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842513322 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84565726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844582694 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846957624 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843646185 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848364176 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843660687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843299448 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844070828 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845467997 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843507747 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842416705 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844419383 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845059824 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847527698 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844717344 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843681123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84496613 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844185048 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843221281 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844088925 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844026201 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846198847 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846178528 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843991885 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846071474 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846970768 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844229915 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846304725 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847234185 seconds)
  done (took 123.462760749 seconds)
done (took 2519.218655342 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.865772362 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.862893694 seconds)
  done (took 15.509269828 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.006960004 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.963832782 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.84618396 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.850048134 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.844934363 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.868380759 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.864440472 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.84445058 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.847138392 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.846538927 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.846808308 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.033566176 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.849862941 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.845310004 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.846946934 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.940781828 seconds)
  done (took 51.930962109 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.852387641 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.850358131 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.862300176 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.85426316 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.849898982 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.864208793 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.883180685 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.855765628 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.885625516 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.861499888 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.921060892 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.859750286 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.84934888 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.898586558 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.86163817 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.865871608 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.94096138 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.924114474 seconds)
  done (took 35.523056792 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.926985109 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.848180743 seconds)
  done (took 10.564660651 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.850994769 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.868052708 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.847825816 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.844984116 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.861488639 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.864584581 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.870735327 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863047982 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.867260359 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.875750312 seconds)
  done (took 70.400309811 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.855985807 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.853480539 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.853827556 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.851357889 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.842432564 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.846337446 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.849628886 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.850143678 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.521339513 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.888085819 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.854109934 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.855830425 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.85110068 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.851168686 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.848711576 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.876313482 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.99060261 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.847796809 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.847991871 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.855622282 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.853039456 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.903842564 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.862748671 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.850898019 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.880423664 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.527053972 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.858287048 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.857998031 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.969185258 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.848591737 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.853803902 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.851163306 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.854181502 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.253527714 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.152572017 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.848509589 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.858215367 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.859699671 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.851436935 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.982622568 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.851937597 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.85682392 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.845459921 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.147534415 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.932976849 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.892542087 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.218649054 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.853953231 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.854903344 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.884142421 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.853909849 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.856798762 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.866405481 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.363616466 seconds)
  done (took 131.737949093 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.849045627 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.13835149 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000234817 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.848833309 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121350485 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054321214 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.790966731 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897242168 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.852145134 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052508969 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.064698478 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.95611961 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.852072484 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.84976778 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.845447799 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.845829079 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010260719 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913511163 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.849978342 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.845535007 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876948641 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.056309862 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.970127161 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847162006 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.870850368 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.060113545 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.970759491 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953537778 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.309907492 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.847380991 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.914628813 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.851884561 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.851983324 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.845825137 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.005434888 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.948397664 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940329241 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.851995879 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.847881866 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.846828026 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.50912533 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045757711 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.949376525 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.992480674 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998862884 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052808928 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.49642465 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.848238461 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.489363993 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.013617523 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.06283665 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.057377345 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.976727502 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.849652647 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.996405731 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.848806274 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.850629988 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086545316 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995271856 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.952690989 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852352236 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.849884258 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847990235 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.09421267 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.853582951 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.945746488 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853259976 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.849738476 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.949145841 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955561224 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.990728847 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06242058 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883829837 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.574810794 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.065640013 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.066759782 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.920176983 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089352363 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.852849092 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.849561991 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937311884 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.610088902 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.04957677 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.097736625 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072747043 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886473321 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.446453876 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.851685855 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.047901051 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.036236148 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.04720164 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.999138177 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.00184188 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.159561647 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.85203793 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.852339831 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.093464135 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.987274465 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.853143778 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.212511071 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08485322 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.489349813 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.874796557 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.1506753 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986578896 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.160919806 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.478498314 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.8529326 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018877909 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.890391114 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.854451418 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852401752 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.042838657 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.659626897 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853869 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.58787581 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.916367737 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854982328 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.056290915 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.853280473 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060896363 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.854110875 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089103868 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.240201373 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.88666906 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.024276943 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.999577624 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.651018893 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100339033 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.097474568 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.970861507 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123579096 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.578227996 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.854482004 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.130300072 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854849278 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.851900839 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021482759 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.85404404 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.001705882 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.855620247 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.081143863 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879123226 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008727996 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85749105 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087168168 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.888318627 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905360158 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.85735252 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.978165754 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.856756884 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.753882528 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.010289437 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85766259 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.853201957 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.258522565 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.857289494 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00030522 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.08616561 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879175153 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.924053972 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.382442818 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854667659 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943491785 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87996793 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.458024293 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.855339941 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.067391312 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.802971261 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.292279656 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.856306688 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.096081177 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.088203675 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.859539026 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.855215817 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.59629549 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.562546153 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855839977 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.016366653 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.118126559 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.503499674 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060129465 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861181172 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984065062 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.862452923 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.941007656 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.19964329 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.856178978 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.854714483 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.856792012 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.858492044 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.856695777 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064070569 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888198067 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.351902462 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.991202572 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073914884 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.16694764 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.078706034 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.902875377 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.859709262 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.103783101 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.859456745 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.921742716 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.860100379 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.880792516 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090358127 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.862090629 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09226336 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.114389126 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.767838714 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908870235 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.860826748 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859771357 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.859220884 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.004679917 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9501234 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.860003375 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.857481949 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.968882307 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977971458 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053364024 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.459189698 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.976851655 seconds)
  done (took 894.844643398 seconds)
done (took 1212.287439976 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.859008081 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.860078321 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.847464768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.862930781 seconds)
  done (took 29.227034574 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.868353109 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.866018081 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.868753522 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.867297856 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.869874148 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.867658747 seconds)
  done (took 13.007801905 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.900583891 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.860013058 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.86414328 seconds)
  done (took 21.424420733 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.935153703 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.268467797 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.976300271 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.304867223 seconds)
  done (took 10.284266148 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.87011545 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.870073951 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.869624483 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.870493446 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.869403878 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.870576631 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.869124042 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.870730423 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.87125475 seconds)
  done (took 18.631892002 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.027332458 seconds)
done (took 98.395234967 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.308997927 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.873913538 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.218919899 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.865504013 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.50090428 seconds)
    (6/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.890244147 seconds)
    (7/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.103336202 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.250673459 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.010487383 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.445571715 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.919980566 seconds)
    (12/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.889290035 seconds)
    (13/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.888882144 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.889077844 seconds)
    (15/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.163866389 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.959626905 seconds)
    (17/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.957221714 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.866178254 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.963753328 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.987790407 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.508067582 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.222775987 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.928045317 seconds)
    (24/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.375654276 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.921655095 seconds)
    (26/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.373700983 seconds)
    (27/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.968359333 seconds)
    (28/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.011060787 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.011190387 seconds)
    (30/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.07329957 seconds)
    (31/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.0316131 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.941616749 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.473041696 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.765888687 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.868166814 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.999193112 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.539187328 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.856461008 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.06072454 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.856822142 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.975583389 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.86382933 seconds)
    (43/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 3.61518898 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.975128505 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.865635036 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.950749573 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.115871173 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.191594175 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.045837918 seconds)
    (50/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.950310787 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.467039082 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.751482161 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.934564292 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.675119082 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.134771668 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.245013509 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.870744702 seconds)
    (58/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.176095629 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.898356906 seconds)
    (60/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.875831434 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.938888188 seconds)
    (62/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.852186116 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.320856849 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.231288497 seconds)
    (65/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.035716315 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.874430954 seconds)
    (67/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.471186479 seconds)
    (68/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.001455756 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.785870168 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.854856047 seconds)
    (71/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.456749721 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.289188544 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.747103954 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.931621127 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.996141785 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.93243153 seconds)
    (77/309) benchmarking ("sort", Float32, false)...
    done (took 5.639564603 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.162250604 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.447433161 seconds)
    (80/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.953393018 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.606359013 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.947873996 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.972295311 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.892647444 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.224509267 seconds)
    (86/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.177712857 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.973535145 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.148558237 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.870630016 seconds)
    (90/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.0037717 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.759171431 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.893737299 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.944915949 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.214877876 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.153767264 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.113822115 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.528104164 seconds)
    (98/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.545945161 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.875011681 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.163912674 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.980080539 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.942612716 seconds)
    (103/309) benchmarking ("sort", BigInt, false)...
    done (took 6.872208656 seconds)
    (104/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.00444134 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.106897045 seconds)
    (106/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.956066304 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.09324395 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.412315063 seconds)
    (109/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.999382882 seconds)
    (110/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.466028358 seconds)
    (111/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.227526904 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.139265964 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.876609129 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.242440198 seconds)
    (115/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.985557328 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.236402961 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.927179601 seconds)
    (118/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.857021585 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.929310476 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.173101327 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.858187384 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 4.562603667 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.320131376 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.858493365 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.906251094 seconds)
    (126/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.865954607 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.126790635 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.895904391 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.91618628 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.087819223 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.857222568 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.134760344 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.040641968 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.895437558 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.887860054 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.895884479 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.977310133 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.783810564 seconds)
    (139/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.283790434 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.00096572 seconds)
    (141/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.398533544 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.938259131 seconds)
    (143/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.97853216 seconds)
    (144/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.003716801 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.933570233 seconds)
    (146/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.067693968 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.097605971 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.900354566 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.211177284 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.201491909 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.246557822 seconds)
    (152/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.999570948 seconds)
    (153/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.997547211 seconds)
    (154/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.161473316 seconds)
    (155/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.932526536 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.872859085 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.191860756 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.117769549 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.214632557 seconds)
    (160/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.394041314 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.571564799 seconds)
    (162/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.396295647 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.961058817 seconds)
    (164/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.05780862 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.861861892 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.225883643 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.163224035 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.00533761 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.858843078 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.875644664 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.905250894 seconds)
    (172/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.960964982 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.959552266 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.978894519 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.040288689 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.966843353 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123591302 seconds)
    (178/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.023098265 seconds)
    (179/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.255597477 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.87734548 seconds)
    (181/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.045289076 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.894477906 seconds)
    (183/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.206347304 seconds)
    (184/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.387908709 seconds)
    (185/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.837686185 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.170808439 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.87823733 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.906274733 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.948858281 seconds)
    (190/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.107061518 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.075406272 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.915573799 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.860580832 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.225059545 seconds)
    (195/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.887688019 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.939290049 seconds)
    (197/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.958624723 seconds)
    (198/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.029740504 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.108040213 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.882285812 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.827131885 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.072033334 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.273144774 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.875718946 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.305345192 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.935062292 seconds)
    (207/309) benchmarking ("sort", Float64, false)...
    done (took 5.686809586 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.516906445 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.344776531 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.097351573 seconds)
    (211/309) benchmarking ("sort", Int8, false)...
    done (took 4.948243112 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.544171559 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.094308373 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.862491679 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.736375315 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.609851207 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.09077476 seconds)
    (218/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.863530247 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.147231226 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.903668271 seconds)
    (221/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.981225845 seconds)
    (222/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.19602858 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.150601316 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.097214028 seconds)
    (225/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.983363404 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.17454047 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.910493404 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.903848196 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.918290705 seconds)
    (230/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.023165301 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.76736734 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.178796608 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.771825094 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.883320641 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.883955908 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.195585453 seconds)
    (237/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.04096952 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.880836858 seconds)
    (239/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.084053025 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.077618826 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.219118951 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.705286463 seconds)
    (243/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.996844168 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.146051574 seconds)
    (245/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.961916053 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.16791215 seconds)
    (247/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.908087062 seconds)
    (248/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.894666094 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.865462308 seconds)
    (250/309) benchmarking ("map", abs, Int8, true)...
    done (took 3.496286283 seconds)
    (251/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.226677671 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.869778169 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.992642459 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.979098934 seconds)
    (255/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.566559573 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.126381471 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.806705519 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.328664761 seconds)
    (259/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.905394194 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.865841553 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.443576752 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.869886936 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.40476044 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.112877332 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.916350271 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.031370675 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.261413079 seconds)
    (268/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.015043967 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.068726634 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.694915345 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.268718982 seconds)
    (272/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.009174087 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.866655096 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.617822119 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.53493345 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.836033107 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.884083824 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 4.415915327 seconds)
    (279/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.88536228 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.982170591 seconds)
    (281/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.027551162 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.884373157 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.870560679 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.974370613 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.166491583 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.490622172 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.999117692 seconds)
    (288/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.906578039 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.045162862 seconds)
    (290/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.02327427 seconds)
    (291/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.167800068 seconds)
    (292/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.509421334 seconds)
    (293/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.386134512 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.925066727 seconds)
    (295/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.898677573 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.247157593 seconds)
    (297/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.841037161 seconds)
    (298/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.955882504 seconds)
    (299/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.489416787 seconds)
    (300/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.288897778 seconds)
    (301/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.900441949 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.194576547 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.884138026 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.162757726 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.01472011 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.832825224 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.882295868 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.88742247 seconds)
    (309/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.292946058 seconds)
  done (took 1026.999872464 seconds)
done (took 1029.002300463 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.918408654 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911540404 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.895023708 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.916203735 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.007215843 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.927882076 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.905870647 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.897737373 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.941904737 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.943358946 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.895922141 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.928141493 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.895611373 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.894476943 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.893811858 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911542816 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.207334971 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.924231534 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.914873715 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.9065514 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.911996184 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.896156546 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.945559113 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.928124441 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.898664718 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.898237678 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.899687534 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.914669377 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.008153934 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.898550906 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.900253018 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.909346782 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.206351855 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.923870636 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.891683245 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.914755152 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.907458358 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.905063366 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.900663151 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.92889733 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.352464308 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.903623192 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.898095886 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.896724264 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.896467093 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.901641796 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.896777401 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.902698887 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910541111 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911881716 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.349474072 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.918489483 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.901103491 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.89778184 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.910306875 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.898777853 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.899775345 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914284038 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.916050924 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.913508092 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.198017838 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.933231027 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.899633098 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.914820387 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.904140949 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.386856638 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.896900139 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.901627899 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.355305059 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.911536849 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.388336956 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.913798888 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.899609693 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.912540926 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.929990543 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.206968193 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.920647814 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.897364139 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.906401279 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.897581708 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.907897545 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911693556 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.903880819 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.897595009 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.912530496 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.93051554 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.908142868 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.898799441 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.909166799 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.918291263 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.9050848 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.910901991 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.899790291 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.895103675 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.908767838 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.903653931 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.902881123 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.900800116 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.903857373 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.910322837 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.355570069 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.921175996 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.894641765 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.894889474 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.899803212 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.913445718 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.354831955 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.906450701 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.922274409 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.949526839 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.900599887 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.200205097 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.931302408 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914798602 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.911629316 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.904870721 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.893928066 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.200574683 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.381829527 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.920552737 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.903937726 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.896784716 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91701791 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.902153367 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.89672985 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.211191396 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.92835334 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915172849 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.020975139 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.912298646 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.931973152 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.899096372 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.90387191 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.929003498 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918365464 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.930762828 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.903742548 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918267963 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.916643644 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.89764431 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.911827865 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.911418938 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.901052794 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.907888397 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.901537358 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.932606838 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914822803 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918189462 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.924291316 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.024059475 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.899258499 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.202511488 seconds)
done (took 298.536348969 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.981554992 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.893939631 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.999256546 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.898690327 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.994665975 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.984106255 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.894378815 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.894391156 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.894877852 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.312642703 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.894584672 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.898045323 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.898286468 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.894877121 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.996060876 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.897903199 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.895406024 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.239197726 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.901681093 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.980334871 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.894759709 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.896388987 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.899944889 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.275713503 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.895299252 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.899620529 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.971511815 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.898013469 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.27099736 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.895863889 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.896394177 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.243354433 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.990591279 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.91719166 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.910161506 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.903301182 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.986241495 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.904559458 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.978621433 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.992008667 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.996928453 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.940916703 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.898760795 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.89331554 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.904125433 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.900552476 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.89796025 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.927451614 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.895353762 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.899072981 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.274521268 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.909639082 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.89590766 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.895584666 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.898356685 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.931158943 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.896626957 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.903429071 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.003153267 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.901370952 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.964586109 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.316643918 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.279502315 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.899659931 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.899373066 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.898485196 seconds)
  done (took 186.514709987 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.965648891 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.974431511 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.968837936 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.902451324 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.952151943 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.974874805 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.907039843 seconds)
  done (took 15.474663377 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.908481231 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.901787803 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.956476185 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.958708387 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.904735923 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.057901063 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901466375 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.913017838 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.898953525 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.965104564 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.901608886 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.9039284 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.910133914 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.902658552 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.958872145 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.914450273 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.016399748 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.904845072 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.905373132 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.059594764 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.902224848 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.910414483 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.955137331 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.916081525 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.903883308 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.907849322 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.494282057 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.906068363 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.900160306 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.9023859 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.899788146 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.945199521 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.902696337 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.897993989 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.900832321 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.043736808 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.905970758 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.900948909 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.901895544 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.903952374 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.903801852 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.903372114 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.903841278 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.899663066 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.905053431 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.927277974 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.903691959 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.903612999 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.900668434 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.903735178 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.967979998 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.90279433 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.901009996 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.901930614 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.97266683 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.909310823 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.905760268 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.901517596 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.34779784 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.90068329 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.06179469 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.958518968 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.904580914 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.959521995 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.905967207 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.904901788 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.906122285 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.903773264 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.968284275 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.903837798 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.960723028 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.90250339 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.106614476 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.928079651 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904942691 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.90706195 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.908942396 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.907813739 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.898493823 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.91081898 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.899632916 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.905403513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.907983697 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.900676773 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.900462021 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.044802771 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.039424284 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.901491705 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.917086207 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.908585335 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.89989775 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.970182928 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.902829342 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.901204152 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.967202391 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.017530755 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.960373717 seconds)
  done (took 209.804059044 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.908839474 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.912793075 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.90636057 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.924273834 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.907205497 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.903692877 seconds)
  done (took 13.296382018 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.905733085 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.904628716 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.905154764 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.906641735 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.905721333 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.905681752 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.907869013 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.907175332 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.910711258 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.908767349 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.906653987 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.906256518 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.909480985 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.910770579 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.909031102 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.907994342 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.908652184 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.904272311 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.903516106 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907195481 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.062704981 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.908499888 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.907301562 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.907689547 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.912167785 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.906375485 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.914169962 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.907923581 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.909086624 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.91501684 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.911512522 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.909466582 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.908562908 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.913822854 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.914278413 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.909227326 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911098298 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.907442628 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.906060929 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.909327331 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.90874752 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.907586076 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.906199813 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.908714673 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.910223078 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.911233621 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.911042998 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.916684487 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.906456121 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.906324737 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.906597215 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.906760946 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.906470303 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.909093217 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.911643397 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911388352 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.912282698 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.911241244 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.908517967 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.907752144 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.906353202 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.909187803 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.909578736 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.912325366 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.904620144 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.907513263 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.910757477 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.912959432 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.908905372 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.907496132 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.908628032 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.904453361 seconds)
  done (took 140.418859971 seconds)
done (took 567.34977707 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.111170074 seconds)
  done (took 8.946227217 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.993146297 seconds)
  done (took 8.910907434 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.657603867 seconds)
  done (took 10.497719017 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.91822881 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.912629356 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.904833825 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.905171417 seconds)
  done (took 29.487045809 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.288367008 seconds)
  done (took 9.12248439 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.916693598 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.898749939 seconds)
  done (took 15.71427124 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.99798111 seconds)
  done (took 8.837185117 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.986409721 seconds)
  done (took 8.82611778 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.91705625 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.898925224 seconds)
  done (took 15.663655875 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.88518499 seconds)
  done (took 8.719355542 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.630752549 seconds)
  done (took 11.482928957 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.90766134 seconds)
  done (took 8.758736793 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.993884055 seconds)
  done (took 8.832595474 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.171659028 seconds)
  done (took 10.01269138 seconds)
done (took 165.645890047 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.909352684 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.901414699 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.902314115 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.901995059 seconds)
  done (took 29.453053202 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.942758087 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.94221661 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.944217711 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.956164914 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.946211838 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.941050018 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.934449981 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.93500646 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.956558467 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.943832527 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.945348729 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.946142634 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.941546193 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.932324934 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.945757467 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.945711386 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.950826817 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.945180923 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.94407379 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.945772583 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.909571258 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.952152854 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.944669144 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.910473318 seconds)
  done (took 48.441969911 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.108194435 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.979880967 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.062365943 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.960249943 seconds)
  done (took 9.949556227 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.961699396 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.960880715 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.974752363 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.011434016 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.053962934 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.971344123 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.935867924 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.930753707 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.915289997 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.96413874 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.036863265 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.979006654 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.045155517 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.908911901 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.096776196 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.909237951 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.908546159 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.961708814 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.011826977 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.028274093 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.906966625 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.957948066 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.962648123 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.97662122 seconds)
  done (took 49.211476915 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.908482498 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.911870379 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.912467329 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.903547257 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.905442193 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.908322394 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.912500549 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.907303378 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.927772092 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.906800537 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.905886076 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.907079458 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.905378824 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.906994211 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.904877718 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.921081187 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.918650645 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.908156206 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.909251373 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.913705387 seconds)
  done (took 40.043013894 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.902042602 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.84855166 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.253160471 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.155508223 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.901960933 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.899359976 seconds)
  done (took 32.799995883 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.918799953 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.970914182 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.912097525 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.966068995 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.043962737 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.914582209 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.905937436 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.973659472 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.022438287 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.980697371 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.925857073 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.935266904 seconds)
  done (took 25.307435918 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.904244019 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.900693194 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.901639048 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.919190134 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.916400781 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.915312919 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.914145907 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.899394962 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.914372959 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.921529526 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.91112503 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.916593768 seconds)
  done (took 44.774978867 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985995733 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.943717671 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.928561942 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575850224 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.274691806 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107793831 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.501351874 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.236438502 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.896534249 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169509666 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.838358035 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015497366 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.165332471 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.512086441 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.946620026 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.374983287 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202846198 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122862133 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9325558 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573503758 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971853553 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.186650624 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.690220158 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965094796 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122045518 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.038607031 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.171184873 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911980958 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04153393 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94551691 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919936013 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909710032 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184111613 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287572685 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014067908 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922154303 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.53414608 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.622877456 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.895514133 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.651205568 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.611363361 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.028465521 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922042728 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911164866 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847442599 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.153842881 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295083313 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.915376475 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.623163065 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.910677439 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92275477 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006212707 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.916048964 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.728217076 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831062193 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.913934494 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.910332799 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919769356 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48708166 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.007941713 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.198142455 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.891177641 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.006600655 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.649821763 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288518582 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.057119397 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.916850368 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916033152 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848413515 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.569269799 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967237878 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242449229 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.930908248 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563931892 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208742293 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.998434513 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853459264 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172049055 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.54117789 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.890717991 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140583497 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913029893 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847643818 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.858528311 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.848176485 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166083623 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947398782 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.662897091 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950822834 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.251427199 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923233569 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934637102 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93664202 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.138384162 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.800164019 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914378859 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.68071662 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05786776 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935557548 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.254995228 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848823553 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.916783941 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17335567 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.126307655 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085289483 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.41525111 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07370078 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.581701912 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.970614091 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.158440099 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.965982327 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.181528136 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970549448 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.010828784 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966397106 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91476034 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20437278 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.59329119 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.054520381 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.952941747 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042960366 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.238811654 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937641478 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998528757 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92490356 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917255567 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.655105495 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.468438035 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.916242168 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.920035906 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.085041168 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966040307 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.918006286 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866364702 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.545169641 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.952146219 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.929858317 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.141890718 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.582189247 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232448958 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85203965 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247497745 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97579041 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.139563297 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.557510477 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.984217218 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179161115 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.090737366 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.118531383 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969062036 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936571197 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017092523 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941150471 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.16103382 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.215317312 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.922970785 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.924638082 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.692199733 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.953554389 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921208131 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.925123615 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.673030342 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187200153 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939316814 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.924729829 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.810567825 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.936707568 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984235841 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924792958 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.930232337 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.461359853 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.637085516 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.927533719 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.507106156 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145118824 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931253835 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.665594319 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035935435 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.009672049 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184901854 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977286861 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.855025032 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.632495808 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.613901865 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922994775 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857279431 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921324091 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929490381 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93341776 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.120073766 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19182408 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960429025 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.577160148 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.962540793 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933115438 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.924966007 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922792121 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.43339442 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.0211651 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.200967457 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969424215 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068066951 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.935795443 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.857977932 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.92488476 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927387079 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923347134 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.921077967 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954522225 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.588061804 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305620598 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180840035 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.533166125 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934555158 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.634083289 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.978335599 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.925041728 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.569260157 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.295034762 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.964701146 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945579285 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.932477224 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.656338888 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.630771868 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.491708061 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229277373 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211321244 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350902379 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.221745158 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953964883 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269327127 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856381274 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.481105647 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985320478 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.268754377 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867537429 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014095889 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.562391004 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261256973 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937518288 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15105554 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301229102 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.638848641 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061048307 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136631986 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960553961 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.165884674 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.887702093 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.447903657 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068442882 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.592329351 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124667965 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263378297 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.562253706 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.040927207 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.926253901 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.597602562 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00617235 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.636796521 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098200835 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.205982845 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.866375815 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407484391 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930401413 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.152264273 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262597056 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.188565926 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.058727034 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859818933 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938472022 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.936410546 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.928635726 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.926913136 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.817958604 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.180908757 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935850094 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861438727 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.13238182 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217735523 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.822675333 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.931330369 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926842295 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205988378 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.562821718 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091158794 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.113462122 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.449772019 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93392366 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86233067 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861327767 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.619900035 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.934046098 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90647707 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121166269 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.031877227 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84693859 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.094217804 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009771405 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182885016 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.940779118 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.187368161 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198903794 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.627117131 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950897807 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.027531503 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.566483885 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.02876343 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.929434888 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163655315 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683894222 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152993088 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.945251112 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.874592147 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.927701939 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143693899 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.927510035 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.825601147 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150088695 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.650904459 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.938842667 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234225671 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996487599 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.804894822 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966755539 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.020182024 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940020833 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005892504 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93900277 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.94144119 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.941275002 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977034137 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.818194642 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.044200795 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.943189457 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023542323 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.019041722 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.451412413 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.932883292 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195734452 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273291342 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242906162 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984633345 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.928634241 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939144644 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866506157 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0770129 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.155618364 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204942247 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.062974291 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.047048095 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956880405 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.55507802 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.225934781 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174199234 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205619206 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.825661568 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.541647661 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972034682 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.932122342 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942480037 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.142631727 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131918092 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217042202 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076513491 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.108219469 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.301591873 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203615688 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.932136137 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931381176 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521439475 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.945312819 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.614043693 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.966894639 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.831907224 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200990417 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943511904 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309081344 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.953646732 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.089442946 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.706289439 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.716174493 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.220884863 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.911480056 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.982962485 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197243952 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299049336 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240548062 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999112914 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943649999 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.042940762 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080926995 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.828240931 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.93068543 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934825828 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981386624 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.642929456 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942424552 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203376504 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237715324 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.929814284 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.824899948 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956671269 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.943118245 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157988943 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196938904 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181303289 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942242588 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.938329211 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.750813634 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201453444 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986849744 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869404657 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.936101635 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031065301 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179968002 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954543171 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.388296252 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.645400105 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194456695 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.931523155 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953718313 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.186003981 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290263683 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24514096 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.461859377 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143003088 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.519205669 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.62485157 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23767421 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.940822168 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.186217068 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239154859 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.937271904 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.107419021 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976220411 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.196351233 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240188254 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.950910123 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599103993 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.903477171 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.27902681 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500663141 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87417351 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936609483 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.997940952 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.934830211 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.066080255 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945176241 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.825675662 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.183980411 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.720163378 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210780376 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.938204034 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.921903191 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.621174121 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.305234373 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972398099 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080304934 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936043046 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.755228113 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.286126063 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193527202 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.110187363 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.946467054 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.940251276 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937739849 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92333829 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.133895274 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.134885617 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199181864 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.139237008 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.976644287 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.941413162 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.154437203 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148527716 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.797970905 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065470937 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.10387759 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980362572 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.842890081 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446975001 seconds)
  done (took 1702.331251632 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.976864257 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.976655427 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.986042799 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.015872189 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.976577578 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.0612478 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.954651599 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.987930541 seconds)
  done (took 57.808232255 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.954803287 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.159001769 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.948472161 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.940933127 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.946049752 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.937357734 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.104712791 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.946512872 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.942517705 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.945521294 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.939012013 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.946563438 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.25003241 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.96176885 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.936701937 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.921046349 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.948524072 seconds)
  done (took 75.618301553 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.935043753 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.968325824 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.955846072 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.946198144 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.985772506 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.94289186 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.800121102 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.940295493 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.937267704 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.079796327 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.570370537 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.958330014 seconds)
  done (took 87.890207614 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.946736976 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.943128829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.943544557 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.942887809 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.942766581 seconds)
  done (took 11.592465022 seconds)
done (took 2217.084989839 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.191051937 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.153070193 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.171910531 seconds)
  done (took 6.196096299 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.088331109 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.134501982 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.255091874 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.26087657 seconds)
  done (took 10.615063748 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.223401023 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.308268611 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.153573516 seconds)
  done (took 8.557635853 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.355279893 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.945617557 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.051489061 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.936233306 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.937030802 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.936894832 seconds)
  done (took 22.681953079 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.941360509 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.944797273 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.942671308 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.944347609 seconds)
  done (took 9.645950987 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.924224532 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.662000072 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.924579032 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.936101206 seconds)
  done (took 21.319179145 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.691740357 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.701554276 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.68467371 seconds)
  done (took 9.949657069 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.519727569 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.849085872 seconds)
  done (took 9.242052234 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.210121891 seconds)
  done (took 4.082579241 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.074181711 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.206242935 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.402995209 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.428078725 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.485566028 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.840482637 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.258804735 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.196697924 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.330715133 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.385391231 seconds)
  done (took 25.483646045 seconds)
done (took 143.185941063 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.321851719 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.946102209 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.143133152 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.322847553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.163213381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.144340536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.13992699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.305130505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.788438701 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.785190577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.277139337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.159922864 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.296630004 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.943327738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.298210015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.317581987 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.16130778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.337278979 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.976597608 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.211763735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.142485121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.918724303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.121095539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.930996211 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.16058017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.095808211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.497211689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.318476764 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.131271526 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.508306532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.096133305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.370835441 seconds)
  done (took 171.205194769 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.717990529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94162691 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.945042567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.940050005 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.387984473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.9518552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.941335528 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.939512493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.230934486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.245141477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.95780609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.401207873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.955785579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.939927444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.949256538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.946703733 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.32467111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.81153116 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.956919014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.958110016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.958880598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.320533615 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.957608783 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.378929156 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.341037913 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957867294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.940127805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.958743795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.948287669 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.949910953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.953970416 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.94132323 seconds)
  done (took 210.93186834 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.945302615 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.942978663 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.941801006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.942149811 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.943200127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.948229763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.942120861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.942442678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.50276709 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.486103609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.947643837 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.948676317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.943837818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.941594664 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.945181116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.942628747 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.953291181 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.948355912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.947477266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.95006395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.955481517 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.817744046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.942992609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.833000433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.94957339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.95735039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.944471054 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.961046282 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.947059791 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.953124944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.955256634 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.943671338 seconds)
  done (took 223.060573818 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147152144 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.950607354 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.952066325 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.906049742 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.951534341 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.952432121 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.946981074 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.148237304 seconds)
  done (took 19.853504106 seconds)
done (took 626.936487672 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.425913145 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.269908856 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.132409701 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.974938271 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.22738711 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.014269448 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.970456325 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.035439068 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.710060904 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.043405182 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.670450348 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.989904647 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.767903791 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.997095271 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.102648953 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.025849672 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.516680063 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.606256178 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.156955613 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.037449267 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.146931886 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.915594277 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.049670298 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.744195781 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.780440323 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.962795368 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.147965735 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.522099953 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.984255541 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.14064847 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.713262045 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.361974333 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.984768959 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.969761489 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.024608418 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.006755261 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.314386185 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.982964 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.092089136 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.712711246 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.043337626 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.594934061 seconds)
  done (took 106.751651724 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.944328037 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.941202805 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.94010409 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.941221047 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.943037285 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.942436118 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.940036032 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.942002869 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.94280341 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.941542203 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.943245756 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.943904778 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.941807736 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.943721486 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.943265494 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.941753624 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.945976997 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.945247938 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.944473833 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.94263181 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.944629602 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.941644966 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.943549595 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.942278974 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.94529843 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.944094732 seconds)
  done (took 52.411175055 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.957073937 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.10226869 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.181901464 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.97399018 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.955009863 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.958135253 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.974205523 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.961512922 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.959026521 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.958664803 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.046809134 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.962109639 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.977113289 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.182475294 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.972337702 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.955982417 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.95639899 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.957032792 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.109967134 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.973658701 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.978573149 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.961119755 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.976369864 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.970974581 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.959414826 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958150234 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.961251727 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.388155929 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.967125043 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.048109175 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000657912 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.978982369 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.350975566 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.192723078 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.01017504 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.963046753 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.958610853 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052784646 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.963074343 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.956934081 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.976552593 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.961964913 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.185138995 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.45741639 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.972306498 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.958119446 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.401483236 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.068903724 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.997978085 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.970227526 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.186958583 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.97403798 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.959097052 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.960889501 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.996172635 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.968905159 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.959492615 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.26449871 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.970648312 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.980078775 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.962662552 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.961473588 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.119518 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.967734547 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.107383977 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.968591847 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.967661655 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.960383507 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.187462453 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.976354301 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.459637767 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.973702133 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.960245055 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.050372919 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.110896882 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.428193397 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.973965074 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121995164 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.367667271 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.983269251 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.967729145 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.380492574 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.987413054 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.96941983 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.962301039 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.963428068 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.964117633 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.004914456 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.978210303 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.405196205 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.467762835 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.28015464 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.987965714 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.979311741 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.961101459 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.2689122 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.969142844 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.963004724 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.183378342 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.480587966 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.975326698 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.971007681 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.452157156 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.976319228 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.981819679 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.970857834 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.192898212 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.976910205 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.005123134 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.963718763 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.970356424 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.964901978 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.980721025 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.969028141 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.96343597 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.437257836 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.070965204 seconds)
  done (took 242.288741069 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.958973339 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.966048593 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.957420269 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.955000102 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.957235121 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.965214346 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.958549345 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.959787463 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.96347641 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.957563219 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.957076516 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.959451401 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.95906974 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.966936076 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.469288013 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.965895075 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.568471536 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.959969212 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.960083704 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.959148242 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.637404003 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.964213653 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.957296862 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.957114478 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.957145478 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.961249944 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.960784592 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.994058001 seconds)
  done (took 170.608271093 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.965797217 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.14750998 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.983532243 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.001202963 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.971534469 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.962771059 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.990343528 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.985519822 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.972809578 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.961809327 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.962617842 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.024986996 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.974606977 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.106776421 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.995640966 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.995537519 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.069365282 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.971956318 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.964192944 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.963060364 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.99460769 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.960854755 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.027592331 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.093527829 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.981613655 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.081657764 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.970599614 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.967202319 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.963496052 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.087119845 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.979779369 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.028303463 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.994026699 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.982972062 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.087410627 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.079752371 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.07274279 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.995922959 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.969379429 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.965475049 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.965673447 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.95438565 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.084198775 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.981391378 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.969115556 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.074506189 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.982171524 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.968971443 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.976111043 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.963567961 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.980692242 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.986231616 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.034947324 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.099275586 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.999292862 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.991876362 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.992356696 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.265184607 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.978937622 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.068695716 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.963157791 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.088302454 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.98486557 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.955980015 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.967379554 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.972293333 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.997849085 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.996872571 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.071041098 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.971945036 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.06921313 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.000791458 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.974119336 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.968808991 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.969500824 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.084826598 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.087699761 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.003192945 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.003775135 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.998361521 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.962860638 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.96918616 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.959558266 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.987466025 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.970867829 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.084634677 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.085045399 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.974588999 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.970317529 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.970965214 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.969638729 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.993904544 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.092960978 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.003318419 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.0688172 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.038047369 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.04276087 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.983514212 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.980857883 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.973647613 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.031224493 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.980250968 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.98006383 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.319563644 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.041112249 seconds)
  done (took 213.03536349 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.062934596 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.439389192 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.022702856 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.024580858 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.264688198 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.399237137 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.752006838 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.016898665 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.019204358 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.045857526 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.17606153 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.076046811 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.032669251 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.004791308 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.438987017 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.009159807 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.016190242 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.041210226 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.024073808 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.59128546 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.325714244 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.14545106 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.013580478 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.150630445 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.996630854 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.305188487 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.346145361 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.397191433 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.05342552 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.362559286 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.352913291 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.700589252 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.222842798 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.261498243 seconds)
  done (took 77.997902811 seconds)
done (took 864.967791425 seconds)
SAVING RESULT...
DONE!
