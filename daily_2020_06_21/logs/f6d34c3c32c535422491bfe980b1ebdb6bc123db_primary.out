cset: moving following pidspec: 12294
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.681288505 seconds)
loading group "shootout"... done (took 1.139857046 seconds)
loading group "string"... done (took 0.432406277 seconds)
loading group "linalg"... done (took 7.947866118 seconds)
loading group "parallel"... done (took 0.152125555 seconds)
loading group "find"... done (took 1.358892777 seconds)
loading group "tuple"... done (took 2.039845623 seconds)
loading group "union"... done (took 13.289934269 seconds)
loading group "dates"... done (took 1.407956265 seconds)
loading group "micro"... done (took 0.215625488 seconds)
loading group "simd"... done (took 4.681721793 seconds)
loading group "io"... done (took 0.99316421 seconds)
loading group "random"... done (took 9.293763547 seconds)
loading group "problem"... done (took 1.704684382 seconds)
loading group "array"... done (took 21.727766641 seconds)
loading group "misc"... done (took 1.677588141 seconds)
loading group "scalar"... done (took 48.63472212 seconds)
loading group "sort"... done (took 3.611903474 seconds)
loading group "sparse"... done (took 14.122771591 seconds)
loading group "collection"... done (took 21.110902807 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.550376873 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130926271 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140151239 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123574591 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.159432396 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119134423 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12892343 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085260033 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.967135259 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152637154 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115589629 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.485771625 seconds)
done (took 5.558687508 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175253121 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088355975 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079590262 seconds)
  done (took 1.256569059 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06697645 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128225791 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068311949 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069188647 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068803973 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068733135 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068583602 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06811322 seconds)
  done (took 1.629595993 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073789682 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070057078 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067426516 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071924019 seconds)
  done (took 1.372922071 seconds)
done (took 5.60511443 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.254892172 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.110496176 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.303979243 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.332532881 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.440540499 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092399274 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.076347454 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071821943 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130971343 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342518035 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118690288 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.194948382 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09951012 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.184475063 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.012205925 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.133112111 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086646782 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.125729262 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09430374 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13267072 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.369034894 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.07779096 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.083820786 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.072979828 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.069506478 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.655912629 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676016408 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148731228 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084879513 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.082923719 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.117853456 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.647516266 seconds)
  done (took 10.555885295 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10125148 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101209324 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070309918 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126353134 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098167092 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071098227 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076863544 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069218565 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09051038 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128731921 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093514162 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107741316 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067854303 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070768752 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.094862156 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198602536 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081287983 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082562139 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070158213 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080455309 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108064601 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079294021 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081010339 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081086845 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130166559 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170841546 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098523593 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099633832 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068439908 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081653507 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11661322 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127762927 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067699612 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067324654 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127335609 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098744295 seconds)
  done (took 4.621031798 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.176351473 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.098668975 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.103475098 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.618439353 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068001231 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.14974022 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.236653445 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074158241 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.46919733 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.158428416 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.15331184 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142602737 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123617825 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.074574724 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.340159247 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.124713833 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348728746 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.073673369 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.075554236 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066481736 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076724283 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069707895 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065083658 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.078058812 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092028618 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.092372741 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.195157218 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.85317745 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.292630419 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070611246 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168460064 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.091170771 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.366446219 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068790224 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.092030776 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064642941 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.377650896 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.127571954 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065260717 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169379345 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.128023399 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065383413 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118627838 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080717287 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.071472104 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.071150384 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068694331 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07852625 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.081214568 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.103870754 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.069500389 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065469715 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166913457 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064556376 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065645511 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066917959 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064124946 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150664705 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064173926 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.150764552 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063948689 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067890749 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092599942 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069440051 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.08308942 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.108096739 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.328783783 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.041030248 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068886111 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.909012472 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079516484 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064349385 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.080507182 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064804728 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066417424 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064579013 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074675095 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068187903 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066849631 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109817312 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065407939 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068420025 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063348852 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09132676 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069168395 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097740001 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063586398 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.429622678 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097582124 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065173431 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074793708 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104850155 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064882995 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069757049 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067281548 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.069166295 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064354612 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067114403 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069720499 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062504514 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.092849607 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.293202451 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117082869 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.037058307 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.076769536 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.071743762 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.077624666 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078546507 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.075745454 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.07267752 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078540091 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074895767 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070449839 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.126089781 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069384252 seconds)
  done (took 21.902683548 seconds)
done (took 39.346137143 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271267209 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089006698 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089561007 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.089508712 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089399068 seconds)
  done (took 1.86037211 seconds)
done (took 3.087671428 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.139850685 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108613406 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068005401 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105717229 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0678957 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110159296 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109107717 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086058997 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10838474 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06706402 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105261569 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067189436 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067373427 seconds)
  done (took 2.439971498 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084157776 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087831237 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073117699 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085503196 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066706659 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085771489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085224608 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093221113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084969359 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076768598 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066854239 seconds)
  done (took 2.099551783 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083860356 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086460514 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071571187 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083529731 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064829886 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083887794 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083373601 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087831902 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083424713 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075662263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065599768 seconds)
  done (took 2.073545264 seconds)
done (took 7.817187549 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077547402 seconds)
  done (took 1.270516243 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.560054679 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.435961103 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080545102 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101477153 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.208891265 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.110420414 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.243815981 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084781056 seconds)
  done (took 8.205214959 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.114879978 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072309605 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072501892 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071104718 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072588604 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07105175 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072044655 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07312923 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07249452 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071334351 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071912048 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07185496 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071122607 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072786761 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07129549 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072187952 seconds)
  done (took 2.478240776 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.102049003 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.100234461 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075597902 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077128033 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074911203 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074248774 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076898697 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076010096 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073157061 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074836301 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077667108 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075520081 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0758898 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066406154 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076165146 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078458252 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07332515 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076530091 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078293297 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080902645 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079432675 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068022059 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077247458 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078381915 seconds)
  done (took 3.186630433 seconds)
done (took 16.344706083 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116630582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078672051 seconds)
  done (took 1.394970047 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083876765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083271941 seconds)
  done (took 1.376696226 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078450474 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064551315 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084444747 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075193311 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065196381 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064650394 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083995584 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06543022 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065590305 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066785327 seconds)
  done (took 1.924660823 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066895419 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077031239 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071560489 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084218626 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07296542 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068376395 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07157069 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06873047 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075851378 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067316133 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071798963 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086992674 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071392573 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088751719 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071328728 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071534216 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073800055 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070778887 seconds)
  done (took 2.545248191 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064414258 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065303868 seconds)
  done (took 1.348937677 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06833102 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065321295 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068441086 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067934171 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06577574 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06463258 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065823371 seconds)
  done (took 1.678660096 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38645767 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13669131 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.365124031 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075483735 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083418871 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259197259 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067667412 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074272064 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07472726 seconds)
  done (took 2.780752586 seconds)
done (took 14.27318422 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0837313 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088336442 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109217884 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.436576267 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096487097 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070589944 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119183965 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186969585 seconds)
done (took 2.421597414 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219032613 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.798982561 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.47195594 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.238838126 seconds)
  done (took 2.726587133 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349940798 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09134052 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081075131 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.183585677 seconds)
  done (took 1.930182833 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068769365 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073048316 seconds)
  done (took 1.363171596 seconds)
done (took 7.470577484 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067069028 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067667998 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095735225 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068924117 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068797346 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.068335147 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068434303 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068920157 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.068511594 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068798291 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068200148 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068200144 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068468784 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068330855 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068842938 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069118433 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068900775 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068959444 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068676103 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069126916 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06886166 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068749332 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.068932148 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06844894 seconds)
  done (took 2.931313049 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085103551 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069220315 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070425328 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070369891 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071413102 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070412622 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070227695 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069058954 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072175601 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071114395 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072824288 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072850725 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070168861 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073099689 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071523781 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073928843 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072695885 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071230847 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070902002 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073371526 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073968844 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071220477 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073037309 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073170559 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072716774 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072826433 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071093848 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070923769 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072954476 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073225218 seconds)
  done (took 3.400398886 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067696036 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062889212 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06455281 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072150117 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064826251 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065975429 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065551914 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065527833 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066311109 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06489193 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066101507 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06520965 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064804822 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066117298 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065504068 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0676588 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081179979 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063703457 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064059442 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064518636 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067619301 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063891895 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063566096 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064056283 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063340204 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063350847 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066631393 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063534194 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.0643352 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063597768 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067529818 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068193593 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063899614 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072754675 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069758377 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065386557 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069345485 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065161831 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066580513 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06490921 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064950085 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065478032 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065245865 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074363165 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065995938 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066671976 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065987493 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066842209 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065924282 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068051764 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065087578 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065688519 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067477283 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066373044 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070383205 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065089045 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065990352 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065312355 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066272024 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065349849 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064988654 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06476732 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068815344 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06796942 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083789527 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075151225 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065813817 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06667678 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066184989 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068570733 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06595887 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07893478 seconds)
  done (took 6.048184355 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090487157 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092506272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068309104 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068490481 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064592822 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064406012 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074267804 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065741033 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070695081 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085259264 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065870537 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070084498 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070353553 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070052382 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065970201 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070300286 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074315057 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065670533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065705687 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070001448 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066008158 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073752441 seconds)
  done (took 2.82009848 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152625157 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071502156 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110677903 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075852559 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07424884 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075349265 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069919072 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070128243 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070372511 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070598238 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071155546 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070460257 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072596473 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070365525 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070168727 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070444398 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070658706 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070542714 seconds)
  done (took 2.64746463 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080148893 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06992225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089156282 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070501862 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071511892 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070995472 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0755044 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076214236 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071226624 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.07123293 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07654188 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070674352 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070617121 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071197309 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069056554 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069909249 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069056071 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070010657 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075439871 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076159099 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07385839 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076019923 seconds)
  done (took 2.855671364 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08091289 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068386516 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083969412 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070810438 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064049176 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064417372 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06989856 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069184336 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070496713 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068118106 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069061295 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064296484 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07096135 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068798232 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071196702 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068855189 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068731097 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069955077 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070218444 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065991054 seconds)
  done (took 2.641643896 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093647326 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067104319 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066621679 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072510877 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068025482 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067342326 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073096723 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067155238 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067196154 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088255301 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067366078 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0828995 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072928121 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070428471 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067289771 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074847239 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074529186 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075209205 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071035118 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068141687 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089515769 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068464513 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073761918 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068440044 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068379265 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067131807 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066719824 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070836248 seconds)
  done (took 3.272498906 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067521397 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066357304 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067080048 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066935426 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066715894 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067065641 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068094271 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069085032 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068142046 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068454752 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068141781 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067803494 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068640155 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067744508 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068215717 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068224109 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068270908 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068683054 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068592444 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068448516 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06813026 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068028226 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068282624 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068319878 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068263531 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067633248 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068287625 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068009217 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067580554 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068430002 seconds)
  done (took 3.30412643 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076912213 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075268675 seconds)
  done (took 1.417293387 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065616546 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080591613 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062957856 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074874828 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072438173 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066727168 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072794425 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072259263 seconds)
  done (took 1.827061089 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.090510379 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080459891 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066189484 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08366104 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08032575 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089853995 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134247799 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065458275 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077737665 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06907593 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.092859276 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069032233 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078143245 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071440459 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075909418 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080437236 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065030597 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072340792 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067192771 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065203957 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067683224 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086555901 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076942441 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065801644 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072974832 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096575748 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087795365 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065487725 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072469387 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078068305 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075815561 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062931926 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065654976 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065694177 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064053679 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079944272 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088243892 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073003476 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079236506 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066023441 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076565012 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0636872 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075470361 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07813708 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084559613 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067527501 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067342401 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065182673 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068315122 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074375527 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06560715 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071865182 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065752819 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079899321 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07599407 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083170582 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066224715 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073805264 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074383762 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074667156 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08033298 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.074264003 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077310433 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067252472 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08384378 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077487971 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084841707 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064147286 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063665626 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065244474 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079719482 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099319637 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075822264 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06557115 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065847949 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063312976 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072491863 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065895278 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077034962 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07729197 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064986497 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072812243 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07832574 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070415599 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071790695 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071893229 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064004803 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068569019 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067040894 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085159015 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064044091 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064352878 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066691861 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08087396 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072341193 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067258151 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066602455 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07740763 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062820388 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066061467 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06609101 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071696417 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078677108 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06960903 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071645213 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077908309 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077147298 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070036265 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071651155 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062228063 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065138243 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066994558 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076554274 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062768619 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071375134 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068711382 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064469695 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075459214 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062970318 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064075892 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076668173 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07569314 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063383216 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061819546 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070995729 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063898351 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066058963 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076784024 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062545151 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06237033 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061959355 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071405261 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063145759 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.211582275 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071771938 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074130001 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064609431 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.0652304 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070883295 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078242796 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069850858 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071915387 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075352017 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072030806 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065147575 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077826846 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072796154 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068709764 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075251338 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070162864 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063727023 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067473281 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072749861 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065124185 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073484438 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067808609 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072842044 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06633303 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064184115 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070850174 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066248625 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067877823 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070914268 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065829566 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080416896 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07203752 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063704925 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063176072 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071676382 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066877716 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064821013 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068298964 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071994744 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065517758 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064153576 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064989124 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072453313 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076464903 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068055941 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066342357 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07514545 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082819523 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064785114 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073553043 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066754706 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067756321 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067723624 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.082275459 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078222126 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071346233 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073441958 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063101408 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077774726 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077515029 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068530582 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063861299 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068260145 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069174643 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077153347 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069274096 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066142035 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064181212 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071783144 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068430417 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072766794 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06519223 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068230477 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070558188 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064208525 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071041993 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066025897 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080412232 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073455007 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063835196 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068121705 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064493967 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076785211 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064523874 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067379242 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068695986 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066463398 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065102323 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073184562 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064580983 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080330785 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080455696 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072567171 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069928565 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066834145 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079844314 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073036156 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075556146 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074670137 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077006524 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082532594 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070063107 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074287234 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082026765 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066578298 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065666076 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076690656 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063549788 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064170861 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064180947 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064177442 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071842171 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070231062 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074271368 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06222635 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071238228 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063461353 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067243922 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063312662 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.0727638 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071445799 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068844265 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076642279 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064874397 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064656427 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072378493 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063812563 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064607836 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064595655 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071218684 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064050824 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069874672 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066324557 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069717436 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066849589 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061898361 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069329429 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063726481 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.207797812 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074702197 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065573383 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072123713 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072716787 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065952001 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071496052 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069846545 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06793855 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072469146 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071453512 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070252677 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07175169 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063765024 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077050337 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065125054 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078138993 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07027182 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0625642 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070548553 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072412813 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.0703221 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065763368 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065344248 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070853967 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064607998 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072037285 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077360228 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067489453 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080822951 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076446915 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070972435 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072153348 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070840208 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073221724 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06965116 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06982409 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066150002 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071229978 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06508527 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073868499 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072438613 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07062518 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071675214 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065726266 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071011739 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066392433 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063380725 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068866223 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068806191 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065101323 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077732927 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066094939 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068526057 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064496255 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06667498 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066691915 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064914917 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074187863 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078555085 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067421521 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07750454 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069905055 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073486716 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082732897 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062729633 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064023664 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06404898 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066987311 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078003325 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065711393 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078676248 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07075692 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068330246 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064679855 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067317256 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065804254 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064753731 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065533822 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075638203 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069965361 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066077636 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066880443 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074680732 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067504162 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07846632 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066112453 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071851131 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066929339 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064811026 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070383594 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069684989 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074575975 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06603253 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066955062 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063501357 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065478757 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069764626 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071044316 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064621771 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070946189 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077539575 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065042932 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072477842 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067532555 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063008872 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072075588 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065046206 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0649382 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067798635 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075594402 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072675833 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065961178 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079361873 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067061652 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071376284 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064678238 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062743108 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063820923 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063875641 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063800066 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066684095 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064980957 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077218096 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062703426 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070334969 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069573848 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068254545 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074060473 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064666413 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070232005 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069082316 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066067738 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070360927 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076411603 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066810396 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070945401 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063920577 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070049747 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073211164 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066199895 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.219054073 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071884084 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066275497 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072106709 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067625355 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065826928 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065202364 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065236598 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074772255 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065235947 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068921658 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06767797 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064096062 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069617495 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067318519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078551905 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072250022 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072877922 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063618065 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063032875 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066812527 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066685738 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071001843 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072220235 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07569497 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072137625 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069423195 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064392199 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079714431 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07564222 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073412313 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067420219 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072947274 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065681724 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072126734 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06953177 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070069523 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065593022 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073107361 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071362047 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068445666 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075693936 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073083739 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065825877 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071001894 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071564872 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070156047 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06358602 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065312973 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072071906 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073951325 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072431082 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06466088 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080326767 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066348729 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071083533 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069156304 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066137593 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075599996 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06509583 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072919079 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067633163 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067577261 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065069068 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069814882 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068754656 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073689248 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069780173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064988547 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082232586 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0814334 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073146722 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065924663 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065673618 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06535747 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065165246 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070180222 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067656949 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072841898 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082124258 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069659795 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069497763 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065294797 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067018298 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075356893 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075060029 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064981976 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065460976 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069890606 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073752807 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079823595 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0660777 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067155411 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074839949 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073960205 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.0654826 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069264619 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064057201 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075568288 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083855772 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067035131 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074780017 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077058823 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080624039 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067524759 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065557599 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067387415 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073418844 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073256849 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068879088 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06798735 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086326013 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074366843 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070015923 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065799838 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073474711 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06817556 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078358106 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068119227 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065449883 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074878557 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073552921 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073485732 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07659448 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077469848 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072652935 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072142286 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065345249 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070977616 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065068566 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068701909 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066903356 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066028199 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069553766 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073245348 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068714118 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080695488 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079477555 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068883873 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06376086 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06833823 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06850111 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064010549 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06546383 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062706975 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063595044 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064656496 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065152605 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071619067 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074470562 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067960838 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064094336 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063926484 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063314212 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076276314 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073285809 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071847443 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063566576 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065776781 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066843472 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072503682 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066610021 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066303619 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070454234 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071376674 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071343231 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063889668 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077862777 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064800889 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072131684 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068587968 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065742587 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065321962 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071211611 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067057855 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064795527 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070458871 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071031568 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065156933 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062235054 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06182342 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072620974 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062365978 seconds)
  done (took 43.6760958 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107906945 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066662459 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065716733 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066537957 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076675561 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067785013 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066612873 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068275702 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068204488 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069397152 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067449859 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066475228 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074148598 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081883967 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076068844 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070458681 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066272063 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06693262 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066014431 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066758682 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07335357 seconds)
  done (took 2.941243469 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070755564 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079038797 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075730132 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080465159 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072402128 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068648313 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075849036 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068555004 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079090429 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073484608 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076479115 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068572451 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074028149 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073765412 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074612884 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068824769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076934363 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072529445 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068577185 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076204271 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069470573 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07582177 seconds)
  done (took 2.983739728 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064983151 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064708625 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071603295 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063153885 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065112022 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065243519 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068607412 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063576954 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067839719 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068801065 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068760542 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068718272 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073423121 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064995289 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069820918 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064668311 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112422327 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06838714 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066544911 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066995049 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065334887 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073908428 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065206648 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065436026 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06928653 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069952075 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066900223 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065305567 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066149526 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069154616 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066987396 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064894136 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073250733 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072814789 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069320442 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069073476 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065930908 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066407821 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068226104 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065492719 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072648556 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065179318 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067193715 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073815136 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065429484 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065048414 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073541352 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066383961 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064938625 seconds)
  done (took 4.725555717 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075112613 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113114486 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069374555 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095168724 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076813725 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070377653 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069232218 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095886287 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064829945 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065945692 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078328381 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078624299 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066770586 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068285637 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070579862 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066768768 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068239758 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067158532 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07213965 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068547546 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072543421 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072781227 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079784331 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08006605 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069547439 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066949191 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066653163 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06828114 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077578515 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070756588 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068554302 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069125969 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077954596 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06995729 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066197535 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066352303 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079087791 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069787353 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066615376 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065072266 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066107169 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068234388 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070550813 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07850386 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066947909 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071609658 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067813627 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066223461 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080123603 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068297214 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073057201 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081136918 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070002763 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069010942 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070000627 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077880173 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06689186 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065624934 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067315281 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077538501 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065136429 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067947478 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078436862 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06685573 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070818847 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08000132 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071676423 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067918912 seconds)
  done (took 6.427602173 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074201731 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095665142 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081370394 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080862984 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074775377 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074703883 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076026335 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074770052 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07524352 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078242049 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075015013 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116457768 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07160074 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077514377 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074768371 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074860315 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074577707 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074923963 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075417536 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074643394 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074813979 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080549829 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074297482 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08067991 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07789511 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070662885 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074274786 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074207173 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080549266 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07427449 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077950091 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076481694 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076684166 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083200709 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079772188 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074676825 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065076715 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074662414 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074594439 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074640501 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071110687 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080701489 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074999034 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071943729 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07657337 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074751505 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080963655 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07781444 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076750092 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078443137 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074698489 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081241546 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074436145 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075557172 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081015011 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083520197 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081094905 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080922625 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074612445 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081168181 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080805189 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083764619 seconds)
  done (took 6.20797241 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081506785 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071414201 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083016561 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064085941 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065645128 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073357785 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063375841 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063724041 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071545861 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071298927 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073591383 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073088669 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075771844 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073340896 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073346236 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0759935 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07367109 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073493219 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07113392 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073204525 seconds)
  done (took 2.838787219 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078321138 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082946371 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068982557 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073651779 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069111129 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073636528 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068472831 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069062994 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069712258 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068855375 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075339355 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075039941 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070379689 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07562919 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076414528 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075472529 seconds)
  done (took 2.551132813 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084601042 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07260035 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078231368 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065076841 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068694894 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064068982 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065382313 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064873599 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066220135 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079736281 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066267984 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077876595 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066440564 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065597787 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066128869 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072753064 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065589216 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067232933 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066080593 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079428172 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07338101 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067750559 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070517238 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066420582 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071794378 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074146591 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068040025 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070350985 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066468521 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066782487 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072683279 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073800602 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06582639 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067098039 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065587044 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066588552 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066389799 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066687211 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072238242 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066877521 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064992009 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071613553 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0665989 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06810462 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065397432 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066711829 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065819027 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072897304 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066906614 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072189981 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065483869 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067031513 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065426042 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072012939 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067306551 seconds)
  done (took 5.183687378 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080376035 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06903365 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06345902 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063023729 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0687414 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.089286584 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069437036 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069745056 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071321149 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064630526 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071144384 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07031297 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071228065 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070768523 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07129325 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070500855 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064809912 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070605882 seconds)
  done (took 2.665857223 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073711831 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068250077 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07428728 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069246366 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069823529 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069460654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064938562 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065046576 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065104546 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070081696 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06991147 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069544475 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06544219 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069762871 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070054886 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069795207 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069673055 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065840301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070146686 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065056965 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069623795 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065437883 seconds)
  done (took 2.899681992 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096056178 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084868563 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145714235 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081186787 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090947391 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073198147 seconds)
  done (took 1.96318131 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093754975 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098800868 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068948278 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068600841 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073914865 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072084136 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071325011 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072097593 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076790625 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077115067 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072972653 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079228725 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077368298 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078585974 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074087606 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074998947 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073131849 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072861707 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070337174 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083041192 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073956832 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078356115 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073460371 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07272826 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071766061 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07806736 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076045573 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076623061 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072860139 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077503148 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075536638 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073514145 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078764692 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079091303 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070428365 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078492349 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073926007 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083299463 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076077889 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080296724 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070614865 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076159401 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078439581 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077842431 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07912871 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07412435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078002081 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074336802 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073911356 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087097798 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074558521 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078055581 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074046217 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077089374 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076369301 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08297842 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077146671 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078152398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074750562 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076830492 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078551541 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074647383 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078610405 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076811976 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074335797 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078352294 seconds)
  done (took 6.447410971 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105656153 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069137304 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072337842 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076884447 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077412454 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072984904 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07416837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074110718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073838836 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071012001 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109469437 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074762085 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08054303 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080786505 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074564966 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074151501 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074359448 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080562005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071517518 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085500657 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07413148 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080383458 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080583068 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080083723 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078842322 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075976264 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073777956 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073901145 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073867944 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07393102 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077590671 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074617002 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080089162 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071007863 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080079215 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074317785 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074129188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077595687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074573467 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075982325 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080583515 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083444508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074077322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073989819 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078521573 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073342867 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073800431 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071011554 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074262624 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071191387 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079342376 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079447754 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079152763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080644942 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074332943 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074434915 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074659811 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074658388 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074558621 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076355289 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080784395 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074346299 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084004363 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07226919 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071900388 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078011375 seconds)
  done (took 6.500811618 seconds)
done (took 132.401918956 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209451398 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186126111 seconds)
  done (took 1.77756172 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075296845 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104819875 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083458382 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134967414 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072081442 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106883719 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105384281 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083666298 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072146223 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072073067 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072050412 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075177197 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137378641 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073623588 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072571222 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075086088 seconds)
  done (took 2.821338338 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105171438 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.214269593 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112619636 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072653449 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108185945 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080599859 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.074938008 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085908135 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078965743 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.074592291 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080403624 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079041038 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.074930829 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.079101033 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078656242 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080482775 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.074325798 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080499978 seconds)
  done (took 3.04038451 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103292606 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094899036 seconds)
  done (took 1.60704704 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.180614317 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136694122 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205948829 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345267153 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.152522386 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.418971204 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14170597 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139523573 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119144744 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134134571 seconds)
  done (took 3.375088749 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104846818 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.200803863 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301360348 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.131187151 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078678649 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110852812 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126635563 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082537303 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082146314 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082038726 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081677382 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078925269 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102344031 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077718938 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07696895 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078328969 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104762686 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075963481 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077248887 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077183823 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105057975 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071404637 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077675073 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075640015 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07982063 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079842679 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072853428 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071330864 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077393563 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077295724 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079749468 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.106125665 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079719843 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106247291 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075172483 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106369161 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078561121 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077488434 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077194143 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075795292 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078261432 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078431171 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079462083 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078235185 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.0725093 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078507254 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073027874 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071823361 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083306185 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073992639 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08314781 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080619597 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108195995 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074225374 seconds)
  done (took 6.322421834 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108938188 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107989026 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072180809 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113664821 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104957136 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072090467 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10608134 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100492813 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108404859 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07184579 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070598588 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071872839 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080327991 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08332845 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117179022 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109008188 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073647086 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072158165 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109367347 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108276554 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070802504 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102707254 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099506207 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108384119 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070330842 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072522436 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071238611 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072476943 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079932952 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081725134 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073554474 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082945533 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.091184981 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07863349 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071121073 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071109513 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072043855 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079937894 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079781753 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079296169 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077399286 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069691718 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070563593 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071147181 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071540346 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069810519 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078156326 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079200759 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077995996 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070565689 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071370948 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070318908 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071081251 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07863643 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077251917 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079859971 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079201812 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07027974 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07009233 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073023781 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080381877 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079649314 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079519183 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071651834 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080397652 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072839467 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08064761 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083973773 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070511706 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072574599 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072395147 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072800823 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073252157 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080135797 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080154122 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07167815 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071019904 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071291038 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080916533 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078147996 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070425637 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077349845 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069549086 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070211625 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071563678 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071234645 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077203286 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079062902 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071963244 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070306968 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070851941 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070528687 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069794609 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077586603 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07964475 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0791286 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078511665 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071454239 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079070017 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078461895 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071432596 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078041876 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070167082 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071503195 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071076119 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077908974 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076671177 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078759998 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070304044 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07032419 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077436397 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08287756 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070242062 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077140922 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078751337 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076969901 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069045509 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079342877 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.207452883 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081597106 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072368627 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080982118 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0717493 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078930663 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071355566 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070248403 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070808702 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079309369 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072232683 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070899689 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072419865 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071699629 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078641826 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08231317 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072177697 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077903795 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078131421 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071867787 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078681518 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071098824 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079646474 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071277588 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071827803 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070271259 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081797793 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071127038 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071300995 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071546007 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080434716 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071450604 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080530733 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077755828 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070230597 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082012282 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080267736 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077750238 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080553795 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072679551 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070650382 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07050128 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070737865 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078092353 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078985634 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072387168 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071303381 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077949534 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080220548 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070746377 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078050882 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07763286 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078311739 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070967463 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071047504 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08089387 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080376018 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078264365 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078223001 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079017751 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071103979 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078470977 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078643186 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071224688 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084789849 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071086294 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082614248 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078987066 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077210308 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078647372 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080511227 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08067365 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080384123 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083092709 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070218945 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07081534 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079016581 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071187275 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071295291 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078084437 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071862111 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071905007 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082830677 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070991952 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080192401 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070421932 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079321499 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070710642 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07163919 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083463208 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071039152 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07182977 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078947056 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073147669 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077754187 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080054666 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078269848 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070255211 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071285964 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079114216 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078717473 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070957749 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070287213 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07199782 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077422196 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076726745 seconds)
  done (took 18.88871534 seconds)
done (took 39.251215296 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23675832 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174515268 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.205935476 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.132163125 seconds)
  done (took 2.264299225 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116120673 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109562194 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092094137 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066870069 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098066407 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067105618 seconds)
  done (took 1.997622213 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.34771217 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.237603252 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210839207 seconds)
  done (took 2.237736611 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.225009547 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212635221 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469208378 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.290995647 seconds)
  done (took 2.743939054 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147738659 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087007415 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06587916 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083624536 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127674754 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15366961 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098102828 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122366654 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077194936 seconds)
  done (took 2.470094786 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.160239605 seconds)
done (took 13.337395626 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.292745944 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.212733732 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.249187389 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.212519468 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.103550524 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068894009 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072358385 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.134839533 seconds)
    (9/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.169222112 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13024551 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07824324 seconds)
    (12/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076880075 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.229106234 seconds)
    (14/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.429138936 seconds)
    (15/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.165967069 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111389073 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076709818 seconds)
    (18/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.182016994 seconds)
    (19/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.225244151 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076640296 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.149812076 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.141109092 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.234136883 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095940816 seconds)
    (25/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12309604 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.165312208 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068498658 seconds)
    (28/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07386309 seconds)
    (29/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.200772166 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075935843 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.190560363 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087017542 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09329721 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081308427 seconds)
    (35/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147365618 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 0.252803428 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067142094 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075551424 seconds)
    (39/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077088884 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066722164 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071842642 seconds)
    (42/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.186592366 seconds)
    (43/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212208755 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17761145 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076685932 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180305361 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116119543 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.16077408 seconds)
    (49/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068690291 seconds)
    (50/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078543433 seconds)
    (51/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076760173 seconds)
    (52/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06830988 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186331569 seconds)
    (54/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.139979552 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.211073281 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.184996206 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.068735792 seconds)
    (58/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066676978 seconds)
    (59/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.177242819 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093431957 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08998209 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068356487 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078787825 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080784069 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067576627 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07623588 seconds)
    (67/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.141488876 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077891096 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078338138 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078746636 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067513084 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.174545384 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066329109 seconds)
    (74/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.230713506 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088101605 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213780638 seconds)
    (77/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.17127998 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.234159102 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068331279 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077507601 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.190651964 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09965545 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093063013 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089963269 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106173991 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156883338 seconds)
    (87/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081621221 seconds)
    (88/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.329530393 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077854714 seconds)
    (90/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079626853 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079404815 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144985071 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074888762 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.167547604 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077046484 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.199620844 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068247119 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086344772 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083778744 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06694855 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077491653 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071933762 seconds)
    (103/309) benchmarking ("sort", Float32, false)...
    done (took 0.134706212 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074359358 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076802186 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067646213 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068498331 seconds)
    (108/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078591955 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06830152 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144276276 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.144322942 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078274962 seconds)
    (113/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072497228 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06801967 seconds)
    (115/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077343243 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.098855912 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098265418 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079265327 seconds)
    (119/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071372519 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067516328 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076685155 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078366523 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.115940469 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127004462 seconds)
    (125/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080214832 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.0668171 seconds)
    (127/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066962695 seconds)
    (128/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.202915036 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079802246 seconds)
    (130/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169844947 seconds)
    (131/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067921228 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068502732 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.181081365 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.204984272 seconds)
    (135/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067047497 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077439405 seconds)
    (137/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075927133 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138143215 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075936809 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067056392 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09027734 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094565361 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187064184 seconds)
    (144/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07420674 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076336547 seconds)
    (146/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069144948 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078838173 seconds)
    (148/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068329083 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070539711 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06670732 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163564612 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069482984 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12170646 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068602161 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067921643 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066804126 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070871082 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066906634 seconds)
    (159/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066884482 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.109400187 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168306311 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068066792 seconds)
    (163/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069727009 seconds)
    (164/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.139810422 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.139420135 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070274105 seconds)
    (167/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.07012245 seconds)
    (168/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.140297908 seconds)
    (169/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066697043 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06730335 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068694922 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136263406 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145308091 seconds)
    (174/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074260678 seconds)
    (175/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172636752 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068656612 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.079740648 seconds)
    (178/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.068146378 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066751362 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067950806 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070601044 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06819938 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143622362 seconds)
    (184/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074242552 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07518781 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068888361 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070308289 seconds)
    (188/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166297159 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067056033 seconds)
    (190/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121632367 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097408473 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191553544 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076785846 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094150997 seconds)
    (195/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.068402403 seconds)
    (196/309) benchmarking ("sort", Float64, false)...
    done (took 0.134662403 seconds)
    (197/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084318008 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.070477452 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078314546 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182489451 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096311464 seconds)
    (202/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073664646 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075494841 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069334272 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06821535 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.0763194 seconds)
    (207/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06956769 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140249134 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132561947 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069510097 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.259953796 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069872232 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070387552 seconds)
    (214/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069944565 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07561135 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129568887 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.214309612 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068500863 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133420116 seconds)
    (220/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066997885 seconds)
    (221/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075984591 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079628582 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076839547 seconds)
    (224/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095530355 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090683285 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141193767 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068046388 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074579208 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.142136843 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076630409 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070007183 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080595327 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07568291 seconds)
    (234/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076701407 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067922048 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068681903 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068442578 seconds)
    (238/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069683504 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119464298 seconds)
    (240/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076940202 seconds)
    (241/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067014208 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066828726 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067680638 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069123376 seconds)
    (245/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068635139 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162899258 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066806161 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.102374718 seconds)
    (249/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067097941 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068749666 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093331834 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124392228 seconds)
    (253/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076638241 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068545969 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067824416 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06801025 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143581249 seconds)
    (258/309) benchmarking ("sort", Int8, false)...
    done (took 0.175317405 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066854285 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06788989 seconds)
    (261/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066759288 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140622304 seconds)
    (263/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068113186 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.0682018 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069609073 seconds)
    (266/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072969274 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098307815 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.098386017 seconds)
    (269/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.070922499 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084652308 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072756586 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.077532185 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114660762 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079853324 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.070362989 seconds)
    (276/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074574607 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076608738 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070644935 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.070973565 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069169381 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.069065159 seconds)
    (282/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087693021 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129461044 seconds)
    (284/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067884091 seconds)
    (285/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070609913 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069744989 seconds)
    (287/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069611876 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068389996 seconds)
    (289/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067864367 seconds)
    (290/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140738142 seconds)
    (291/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067641804 seconds)
    (292/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068586041 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069118181 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078196929 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187153409 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136712796 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067335403 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076405633 seconds)
    (299/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070302126 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069468719 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070269651 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068239652 seconds)
    (303/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096821462 seconds)
    (304/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095557643 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069018184 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092544671 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069768938 seconds)
    (308/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076118719 seconds)
    (309/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.071758563 seconds)
  done (took 33.985367948 seconds)
done (took 35.448318773 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08746481 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100055034 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077479728 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.104637929 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08556508 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099852223 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078385943 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083041964 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08557 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084118644 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085194204 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.076635309 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079450053 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079412926 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077183567 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101724374 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084172874 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078511365 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077912654 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.07019548 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07863518 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070241767 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069999442 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.076764441 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081997231 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077459188 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079979606 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079251881 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070072765 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070503584 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074654695 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078897756 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070276992 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082090515 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079827392 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078127403 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.08033427 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083117998 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070186829 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070936431 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080897092 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070173764 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078303495 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07655099 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074761561 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076820695 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078062181 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082327623 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101977197 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07295801 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077938005 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078266904 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079129655 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073502168 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072651362 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076105561 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075859632 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100327737 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077878985 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07380039 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079557148 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080072719 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076467776 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078169359 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077757346 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081042316 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08256957 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076668941 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080481404 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077180053 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070252389 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077853606 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074774589 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071980282 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080895997 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082838271 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069116089 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073882502 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076627193 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077128015 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068292519 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072548361 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067298892 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072575895 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071897326 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073346622 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072832834 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075390545 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068819978 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07830183 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077319046 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077594555 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069708545 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083392574 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069797983 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07657295 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070681937 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070180468 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069598211 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074771911 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069534938 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074391215 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078775694 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069702862 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074467715 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084025522 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070208767 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07634124 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067631948 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068968386 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081446362 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080018176 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069930749 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075428817 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069786069 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075178008 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069436465 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069889627 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069700658 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06957834 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07461978 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069908556 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073962189 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075018977 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081839357 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06820536 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074217301 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073950793 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069258852 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076306832 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069470335 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069475571 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069528663 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082889876 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073784601 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069173801 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074464593 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073373776 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075535339 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067494126 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075739244 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074229379 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075296019 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073657982 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065749109 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077561363 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07109956 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070441683 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066037975 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066798995 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06558688 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066179835 seconds)
done (took 13.176809339 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071274558 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.12167726 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092696701 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095786703 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084315435 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068728549 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077539249 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092672249 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070376832 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097980624 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091094321 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089415137 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111270564 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067838048 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070433189 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071430117 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071543886 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080737681 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097213037 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.093741424 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108675148 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069687132 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088303967 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089253921 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084739553 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089762492 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069214583 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070254709 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073557739 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092908677 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094870659 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072779285 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071356597 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090702298 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085094934 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079991306 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06904944 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075691363 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068915378 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068143413 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06985688 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.086776066 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075366736 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075719796 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069452192 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076226446 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069391724 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08210859 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087099311 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075468973 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081949359 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.089866358 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070901021 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082964563 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067494314 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082322809 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076306306 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068967034 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071401283 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07551811 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070862411 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073283681 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080745616 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078412209 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074275574 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084600619 seconds)
  done (took 6.845108676 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088098592 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095237484 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085525993 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086888052 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069679719 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071178177 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070430292 seconds)
  done (took 2.131002525 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068960619 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093525588 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095811125 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095839888 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088244045 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095938508 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078660861 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068814613 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.102519953 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067695172 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092894903 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113956911 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07252682 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080068008 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09756052 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069242316 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093682662 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068683659 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070048255 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.097632508 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073693563 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095931999 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.082139538 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07102749 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088996188 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06965879 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129921908 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08228972 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070102466 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06984406 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070911452 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.115130987 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085057982 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080413333 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070371544 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08294385 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085637327 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071842833 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086565284 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.082418854 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.089893556 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071953888 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069821615 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072328791 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075375504 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081678984 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069497557 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072109009 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071810094 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094186289 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067759365 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084300949 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072413758 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0742805 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073961599 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073167449 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07788248 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070709064 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092750283 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069833902 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088392508 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088015215 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085197827 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087314781 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069430926 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084559651 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08527275 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069607759 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071218547 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070195526 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088425868 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072021718 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070418814 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079494087 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068506394 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097196253 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097107635 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068788703 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081951647 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069779422 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070444421 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080818497 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097486561 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073632297 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069872154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073860397 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071099758 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072098686 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067778763 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074197303 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.075132785 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076632039 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072139616 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07528928 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07363647 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.092420335 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068205 seconds)
  done (took 9.324209085 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071317435 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069814795 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071833284 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072370899 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071732483 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072496565 seconds)
  done (took 2.016764533 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092329302 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069423288 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082532423 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071580814 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.121977243 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.084228464 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085617144 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081214363 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085637051 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084030511 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086496417 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089600626 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090665517 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074019319 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08626836 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07306401 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086557749 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075673266 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083182207 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074237244 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084943758 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074017512 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074233345 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091353858 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075245052 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072914648 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080651073 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.0827414 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082833998 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081405689 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073429725 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075252605 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079217229 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080677068 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086683867 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.082119935 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071817605 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077850005 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07405675 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074650832 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089134907 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073825901 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074475202 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077960552 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081152995 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079459902 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077542819 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079817372 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086019902 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077432236 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077516782 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072304882 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074659201 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078064035 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.079450368 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080860979 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077259592 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086668272 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073432947 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.079377643 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071726279 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075111837 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080343611 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073146232 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.076040631 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075590806 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076724842 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071960733 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071463349 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069649981 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076033185 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069624186 seconds)
  done (took 7.275458742 seconds)
done (took 29.176602318 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.530308255 seconds)
  done (took 2.067710874 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.64083952 seconds)
  done (took 2.213392185 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.440753501 seconds)
  done (took 8.00983451 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.430870663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.506667941 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.770423973 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134926571 seconds)
  done (took 3.441969011 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709484215 seconds)
  done (took 2.290552651 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.253024931 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236615638 seconds)
  done (took 2.079210577 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349281159 seconds)
  done (took 1.922928781 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.080577462 seconds)
  done (took 2.65172127 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.287015652 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167156169 seconds)
  done (took 2.03597324 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471194245 seconds)
  done (took 2.044464587 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.255616354 seconds)
  done (took 5.83615614 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242022791 seconds)
  done (took 1.855860972 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233880973 seconds)
  done (took 1.811746475 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.743359988 seconds)
  done (took 3.320522027 seconds)
done (took 43.163790492 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083723606 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086151551 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086005641 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081978614 seconds)
  done (took 1.892499817 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07651778 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072610342 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076158532 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072952308 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078455313 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073479942 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073927622 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074580482 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071958602 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073042228 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07257049 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072000288 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075256553 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074196838 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070935501 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075382189 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075764384 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072133884 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075758235 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072599454 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070468842 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076944594 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077697251 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073691537 seconds)
  done (took 3.354509968 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082573614 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075059095 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077003231 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073526578 seconds)
  done (took 1.894839675 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07853507 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092999416 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088223702 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078946831 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092647479 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088472647 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068682745 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071113359 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.077367139 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080733419 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069950602 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10120289 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090464067 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077951846 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.0804022 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06520856 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066716458 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089146173 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078633348 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079088233 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070077217 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078528542 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068298937 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087692434 seconds)
  done (took 3.50331805 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088302828 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067540569 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088102466 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094279212 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094649076 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068483704 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.090709841 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09503318 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138875934 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068179978 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073298602 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067906093 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105445985 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068403134 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086766728 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110455579 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11364255 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071371733 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099650043 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069198413 seconds)
  done (took 3.349311849 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084798806 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071246293 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071894264 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067388119 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077604506 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074342984 seconds)
  done (took 2.03847107 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070303209 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069919815 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069484566 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068786909 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07402465 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071524709 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067843824 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070044952 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069648809 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069319222 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069154978 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068051095 seconds)
  done (took 2.423191139 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165270824 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071026735 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07280091 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068183645 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073814799 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068718382 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083213674 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07041787 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087922762 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070310517 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071608963 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07316901 seconds)
  done (took 2.56239334 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188540478 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075167575 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22186841 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153296514 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101410294 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114836844 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114255962 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113147692 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138448886 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096421056 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151763046 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155630891 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1087887 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126840864 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088461066 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123753547 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139318541 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153378245 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100427667 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152411926 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138563808 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122221053 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138445942 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097797628 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099836977 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114745585 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073160988 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077801854 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157336773 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123222631 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133274904 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104915525 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088523911 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166919537 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155472408 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130568127 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144079832 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081723414 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117913433 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127202311 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190168885 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090952763 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150027575 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103927077 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078419773 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121056185 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109444852 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113955426 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098530266 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086780292 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279030161 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169510766 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129685477 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084332988 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121103546 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105048209 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111751975 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116599806 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172614499 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147262752 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120102764 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071400511 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112000947 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140068563 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128092544 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108182554 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120437962 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09212536 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134865436 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150284881 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131388975 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141725302 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116724887 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084919289 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113750447 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13380282 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118186555 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160201123 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115685743 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072116174 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115281234 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097082331 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082209089 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147751232 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077285932 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166685265 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099652066 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.124053219 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133143981 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107870902 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108076017 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145156105 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138011615 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101227675 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084869964 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099932481 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113578101 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132063376 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083834178 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104694277 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107394897 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077438722 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12187423 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073184838 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111582285 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093702765 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114686121 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271785253 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079802539 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117123139 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100749613 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099067868 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129355406 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145441012 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085135371 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079612571 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153446796 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116943912 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.098188899 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134266268 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145866269 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120856687 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098611207 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139211851 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169562477 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089575457 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151288528 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10167707 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083704686 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105538466 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114425029 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106108978 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.116882977 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079235833 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.111440333 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156175534 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072904989 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093216754 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124829217 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079837385 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078813428 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100245693 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099205562 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093355029 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098793748 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099703462 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126183834 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11499249 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100674843 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11755125 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093911827 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154507763 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085851484 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099656007 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101512466 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072118022 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129981473 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143538514 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076574983 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153564512 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116224384 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114015975 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112640309 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081266495 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132240041 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07708714 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071216944 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128966936 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.26345749 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107677742 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.141298888 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112756997 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.117096648 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112050961 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120645858 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120996108 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.120713041 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103681671 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087958408 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109368814 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121219506 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072671031 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091976465 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083519658 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103636101 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093487814 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085124671 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135652689 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120297038 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114221482 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109004655 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094159654 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139279392 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080365168 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123832393 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119639748 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095592398 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146535074 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144508314 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126812975 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101672993 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131190675 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073096855 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076649133 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088498717 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121080119 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083854287 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084659889 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110600766 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142387443 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123065541 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124709762 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121042848 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116425602 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147076475 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072599903 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118114603 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138591284 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116438042 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102368346 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087815151 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095445926 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131309385 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098595924 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171747565 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107115799 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115776824 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299057582 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102710635 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081109592 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105302174 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134939129 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097905567 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135376739 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098657858 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087549564 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107362268 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07974297 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098522054 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121943932 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108582102 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127813597 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.10652136 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123697494 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079422385 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109368321 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119158406 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116568191 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085674495 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116746018 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15653148 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093694441 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111103214 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13990304 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077193524 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.136741908 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160376456 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136098066 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082965402 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09956422 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113816427 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118833246 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113043298 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134678217 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098536039 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128341093 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105800549 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085320237 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084179321 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093691093 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100790837 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109860349 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100323783 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107278261 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093293523 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1232506 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098355307 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106512722 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111477934 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099163727 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09599153 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093516182 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160372116 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109488728 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155931724 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096150972 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.130511556 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.308969057 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077603249 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080956299 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082028888 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136651818 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083508684 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120359126 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111551678 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114397985 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113998616 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133965808 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093142394 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070603463 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10389932 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122470996 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120250767 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093356384 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.097240619 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148269058 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114293298 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076884807 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112026508 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114409413 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099902617 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160496052 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079804145 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108465262 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075772664 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077947164 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118706794 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141485404 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084966564 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102814597 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114388618 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10636531 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119644986 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093380441 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11113322 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127693525 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138206428 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120273906 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087837077 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106255394 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122090874 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143246324 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100008764 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097565998 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159936503 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140564412 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148830962 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084027506 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108577976 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108584321 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104231874 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124974182 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082102938 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153775156 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079962694 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124540393 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094079963 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241153008 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11969708 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112182742 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086051404 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134746421 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109934278 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081093515 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079575418 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104979372 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110931522 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09765904 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073424364 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129482853 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073028833 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124138373 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15778432 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079068071 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100153122 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093278644 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081039426 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097779321 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09789019 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083432141 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097150886 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158328918 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08532324 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136731644 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124971506 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107278751 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128621863 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100603273 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640397085 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078758847 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139369338 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109156322 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167978428 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096815633 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111529034 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105301932 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11210152 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132567227 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098263721 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178951153 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123540102 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109799543 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077042439 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098184677 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098754433 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08552172 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103570044 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108051314 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106406751 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091580724 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109669921 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112727918 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080848089 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092502804 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141839608 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108061569 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286890672 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135443259 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082690049 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111440043 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124481108 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079085794 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113698308 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141720261 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10026175 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096499157 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081308496 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.094912066 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158718107 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072481017 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144020165 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112278295 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104606166 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107711954 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104073367 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120147375 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097159832 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112691674 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088612594 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104515165 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107181763 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081984309 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078274801 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100516549 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105059199 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094327169 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092995225 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096884987 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138723107 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071830025 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094351248 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113816806 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132542811 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164173422 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103891317 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082487647 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111722953 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111620266 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106790207 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113633362 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080171032 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114194136 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080156247 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099180313 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120265227 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107314414 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116848761 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108141041 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156336966 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082855245 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226107636 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093338708 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100742659 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087059797 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078734372 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092743264 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091601336 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097813753 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109084228 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313395897 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092342259 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087549519 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089532941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074711037 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081587266 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118642963 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106368931 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110618973 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0990212 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081041868 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098673758 seconds)
  done (took 56.998411568 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104301818 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078662262 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098555884 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150352507 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122880077 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203792141 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154985189 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189656526 seconds)
  done (took 2.805653673 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069816359 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097173725 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103527108 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083963588 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068493635 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069581674 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.244542255 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085487854 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071122226 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100591373 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081030856 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070889807 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.433934471 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06794908 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06932472 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079228164 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068853382 seconds)
  done (took 3.557087007 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390465468 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.59823535 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.386348984 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078475078 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.886483879 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093760842 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.131370335 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139478956 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082670995 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.518890764 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369535945 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131604247 seconds)
  done (took 18.512817687 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084063799 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.081232646 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09218079 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091851693 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080367323 seconds)
  done (took 2.208976308 seconds)
done (took 106.717828347 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08318837 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.199213373 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070603703 seconds)
  done (took 1.992439931 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092092263 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090482929 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090563609 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088163324 seconds)
  done (took 2.064926377 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076794702 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078886982 seconds)
  done (took 1.853408816 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.246741722 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175464184 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100523498 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085762603 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082199644 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082595336 seconds)
  done (took 1.95958059 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074607387 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074506985 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074793547 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079475696 seconds)
  done (took 2.003051217 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.072681389 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0689295 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071101842 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073844293 seconds)
  done (took 1.987369572 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086615552 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086356987 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081546614 seconds)
  done (took 1.953776823 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107525716 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096238923 seconds)
  done (took 1.903408316 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083185766 seconds)
  done (took 1.785003575 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098000724 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.107461723 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133189653 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.1156534 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142635285 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119928874 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084366031 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088977746 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079129221 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086354229 seconds)
  done (took 2.757318552 seconds)
done (took 22.564179509 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080854352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371771125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366196383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0927004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673188209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359628021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969002762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09411879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112765239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070902273 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088042293 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6510402 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958760903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32781491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94782996 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328046447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653683005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0707113 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070271463 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071827378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954306808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070459641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071040489 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072301708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652996561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376430486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072489384 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328367061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071258158 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07526601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360521333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072372183 seconds)
  done (took 16.213520983 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07291635 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124025543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077931769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087138275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072563642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072376133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073759481 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071891235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123681398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071379205 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088460707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07071345 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074533575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072285744 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090847674 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070959473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07352298 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071848417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071402976 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07237876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090740932 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071233027 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071975561 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07201916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072073539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084396405 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072587174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071474385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071791201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075297852 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077758423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073545195 seconds)
  done (took 4.221382392 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119047222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127230696 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079099781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10892405 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118981258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073159583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147932899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094974968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125554224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071279673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088976354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07066929 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104777357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073014591 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092485744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072008629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07478647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072203337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07158459 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072139758 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090970188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071604633 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072278243 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072314932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07309464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086197297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073314048 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071733742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072265275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075463447 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076814365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073501346 seconds)
  done (took 4.483907498 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072239005 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075332814 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082275389 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083380986 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069543433 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072158876 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073477871 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070326584 seconds)
  done (took 2.316725762 seconds)
done (took 28.947475363 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080246227 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07028458 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073708414 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089126787 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075926515 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081549922 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067505511 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07721341 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074810949 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074443847 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077088728 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069421335 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072940933 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067384153 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07434114 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068347956 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082023175 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072692684 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081305631 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081729492 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072012861 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075158809 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077276074 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082275701 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081836568 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082463703 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07873229 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074664296 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07063069 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072641855 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071537905 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079772131 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082662657 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083075591 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069436721 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069408619 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074144744 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070887923 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082990491 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078367696 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071418503 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078760935 seconds)
  done (took 4.877605551 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085291618 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089944827 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083197311 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08110494 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09899105 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086219758 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087969174 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079372664 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079277164 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086919731 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075726618 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08265704 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080334653 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074621017 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078783234 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076308141 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080969674 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075247991 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079054835 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079115205 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088328142 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074459872 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088890345 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08133299 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076714743 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081974644 seconds)
  done (took 3.859271279 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075489089 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08776521 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094904724 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145354319 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112210688 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087227987 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082957015 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094845766 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098394423 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070741411 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074709191 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094376903 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094842454 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076538229 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111798127 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085204606 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085770714 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07217586 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077004293 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09839557 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090456429 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086377564 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094818295 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08633115 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07002323 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072519978 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074344495 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085173235 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072183959 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080896499 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072733702 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073844485 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070767818 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080093481 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072528343 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069899479 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093688168 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081117369 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082506031 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107062508 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079138489 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071019161 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094839443 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130220922 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069650228 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073174741 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073329646 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081273644 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069741768 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097389643 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081756043 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069817989 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07083143 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069377386 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070206546 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072528017 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072365471 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071961624 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079839777 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076823832 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091956935 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075136526 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088981959 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069998909 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080285742 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069378132 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071498281 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068820027 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098116122 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071338205 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114106491 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070874042 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068678423 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081225615 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080459449 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075536347 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06981716 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088834101 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080676354 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073792297 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079901368 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073153626 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072890242 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100040695 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070445926 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069686914 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069086978 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07531757 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073088452 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070943705 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081771075 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069133984 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073030261 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089044416 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069777346 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070585805 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073366682 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072147235 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069352638 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081317266 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073822485 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071877063 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080510842 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070688465 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073399923 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083117437 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076863885 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068870582 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071922187 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073120056 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071585419 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071505382 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07292753 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072077742 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076669174 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077204175 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075748047 seconds)
  done (took 11.097413629 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168354764 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161534743 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07290068 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154653826 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078356146 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081778136 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156271084 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098643055 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070451846 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071685086 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07015442 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113709922 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109094741 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120890237 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082240338 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070942203 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09581655 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118410603 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158652362 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151291766 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093484314 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078352019 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072928554 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071793772 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072162581 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080536167 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087638225 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078896856 seconds)
  done (took 4.601243143 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079252591 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105126583 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07551288 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092885872 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089650422 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070601103 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072975051 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071975294 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087093754 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079430095 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07084446 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076950971 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074337518 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07381352 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071240679 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077362183 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077799435 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069852826 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07463233 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075665547 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080619497 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095110336 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075768307 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070189459 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073042261 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070170086 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078501323 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082229205 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070832023 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.106009615 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068325322 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075571505 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084639263 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071483811 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0699813 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071148013 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070772372 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070985507 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072088165 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069130754 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069239091 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074345608 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069905296 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078487025 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083503054 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076937234 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072302361 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073022782 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073341445 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068167957 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073357368 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073431496 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073068987 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078252116 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074493376 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073325955 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071434945 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096569921 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076456942 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070382432 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069738002 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069341039 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073083445 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079899831 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085601751 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072823022 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06915692 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070789052 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.083349818 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08349782 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070435299 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075064463 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068565972 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072565455 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072878437 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072965408 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071626077 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069093252 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070530163 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07083666 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071450729 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070342618 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070219414 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073112715 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069223411 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069345596 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070856435 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074492231 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079176204 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069842662 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074130299 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071694514 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069375216 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073384895 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075703252 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073163281 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081035887 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081331422 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071005066 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069716122 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08630324 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076359805 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069975504 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075774732 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075037097 seconds)
  done (took 9.661719512 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092637455 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070552259 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086202481 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093045641 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080111506 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075566639 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080866878 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070575472 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086523839 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075284575 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07826098 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069229563 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08118293 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080406782 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070825976 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08383598 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073575916 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090987032 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085344825 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069530001 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079192154 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082234844 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082812137 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.0845641 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083931994 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085459712 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082631483 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079933733 seconds)
  done (took 4.026157098 seconds)
done (took 39.834091569 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.810103787 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.977496458 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.795140934 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.993550873 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.978259535 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.810831922 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.879992388 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.785090825 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.13363451 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.83457475 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.123156549 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.28492998 seconds)
done (took 66.258552637 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.810269028 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.951553915 seconds)
    (2/2) benchmarking "String"...
    done (took 2.044225258 seconds)
  done (took 5.718826342 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.055097707 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.452151271 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.052926133 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.787776865 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.794799685 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.217513034 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.563419578 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.245097675 seconds)
  done (took 30.83629159 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.937391247 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.003943387 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.481093316 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.513372542 seconds)
  done (took 15.706372425 seconds)
done (took 63.938792803 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.82794069 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.787371303 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.789846682 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.817918316 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.794694139 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.787601796 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.78901711 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.788874406 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.803429503 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.79969975 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.786083016 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.803553281 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.788754873 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.797621427 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.445880157 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.853393705 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.806995764 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.79289517 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.809386034 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.7960512 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.793908006 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.796054054 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.222783969 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.97796824 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.387563575 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.945157426 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.126119344 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.188187916 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.799501036 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.791472352 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.835381018 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.963406126 seconds)
  done (took 204.216733583 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.792075015 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.646639617 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.720065487 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.797502689 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.107312823 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.969583024 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.88923861 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.202860424 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.796863871 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.807718595 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.942402064 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.792092597 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.970917365 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.73721765 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.8295609 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.804882815 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.955404923 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.998455667 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.831112422 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.937539534 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.816020732 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.789764963 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.727998492 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.943974858 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.818111732 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.799889124 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.797133955 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.816674482 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.981079305 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.919839246 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.80379077 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.807817031 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.95328001 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.660217464 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.821985253 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.804143795 seconds)
  done (took 169.520452932 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.983286303 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.800230116 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.793974446 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.84659007 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.914215974 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.797538955 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.432707951 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.804503976 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.457908424 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.799483626 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.793635568 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.793429423 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.794460581 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.809254699 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.87155374 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.796191931 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.808897526 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.795952352 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.819196156 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.798615704 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.794638512 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.795390428 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.794950671 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.795591942 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.794761429 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.79480654 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.087078941 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.043557416 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.795983484 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.794273019 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.815203126 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.804873407 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.881290114 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.800762524 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.888032459 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.795115362 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.850489561 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.912690237 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.798291182 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.011953261 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.867017516 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.795942788 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.794449499 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.859521905 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.807502094 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.795731169 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.797501696 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.804620625 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.861675447 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.039472308 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.795642419 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.915370217 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.278567503 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.796048433 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.795952913 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.795287495 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.795264815 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.392213494 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.800451433 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.7971205 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.801860992 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.801594082 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.795897974 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.795549286 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.182719847 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.866491165 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.932743713 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.093862495 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.800794126 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.49541902 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.026737062 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.796106833 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.796318012 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.79670275 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.798507068 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.795956573 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.799021529 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.915050347 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.806908137 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.915750844 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.879371188 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.916606818 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.800440226 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.796879826 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.806909739 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.615802971 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.868897923 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.832610007 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.623390859 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.799658415 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.170482506 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.562128569 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.798132604 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.796738077 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.809242558 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.798737736 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.797058767 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.798887688 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.879601137 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.798805461 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.798648329 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.917782515 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.516999956 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.085006358 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.990486039 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.798177799 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.805907608 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.890467579 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.958445179 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.798254722 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.863918251 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.804976769 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.801882077 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.951193133 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.799489562 seconds)
  done (took 404.05890528 seconds)
done (took 781.560189123 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.47916146 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.457245282 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.568987227 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.471509141 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.446478163 seconds)
  done (took 14.160554317 seconds)
done (took 15.895842321 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.883169342 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.885725011 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.821730076 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.880624865 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.818255929 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.882526903 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.869395536 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.826168516 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.850697104 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.827542292 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.851492002 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.826563199 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.810657062 seconds)
  done (took 25.769251542 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.018999788 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.024891566 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.871663475 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.039094389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.844292966 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.023545463 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.955773116 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.943369432 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.945983503 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.812536632 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.809649255 seconds)
  done (took 23.026390171 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.029731076 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.045175438 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.874317065 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.028399273 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.846745224 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.02715625 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.956018038 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.948259299 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.946947574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.811509997 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.808461995 seconds)
  done (took 23.059188643 seconds)
done (took 73.590263503 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.803440705 seconds)
  done (took 3.541485226 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.824364027 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.977413688 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.803785907 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.804981821 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.804741939 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.804688986 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.805319684 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.803994256 seconds)
  done (took 16.369948102 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.80417687 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.805307452 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.804786815 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.804294148 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.804529623 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.806862959 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.805441485 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.803399964 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.804473557 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.804099446 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.804817046 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.804607112 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.806530786 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.805587688 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.80586478 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.80649576 seconds)
  done (took 30.617923089 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.807460822 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.80595138 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.804894497 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.80473526 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.80619193 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.806010904 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.806750327 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.804771099 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.805596632 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.80612821 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.804842606 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.805979844 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.805994495 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.804911072 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.805373221 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.805682331 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.805460057 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.805841412 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.809668878 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.805129868 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.805657614 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.806436574 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.805296309 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.806928839 seconds)
  done (took 45.086470851 seconds)
done (took 97.353514605 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.58687173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.420588158 seconds)
  done (took 9.746183585 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.809785632 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.807557774 seconds)
  done (took 5.428560672 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.806274701 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.806559525 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.805834191 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.807945618 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.807704623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.807357154 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.807229099 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.807080721 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.807511059 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.808184506 seconds)
  done (took 19.810827238 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.807967263 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.807741125 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.807393414 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.80768286 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.808708462 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.808299432 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.807613367 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.807252894 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.808271021 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.808800393 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.809364282 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.807602666 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.807585272 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.807970066 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.807890105 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.808174049 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.809468463 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.808124158 seconds)
  done (took 34.286116829 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.808376332 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.809002319 seconds)
  done (took 5.35817933 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.808632099 seconds)
    (2/7) benchmarking "second"...
    done (took 1.809002024 seconds)
    (3/7) benchmarking "month"...
    done (took 1.808902692 seconds)
    (4/7) benchmarking "year"...
    done (took 1.808508168 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.810519333 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.809211366 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.809333872 seconds)
  done (took 14.404870715 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.809642783 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.976707661 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.042074975 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.501404564 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.809875181 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.810465304 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.686251821 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.811484387 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.812441706 seconds)
  done (took 20.00125293 seconds)
done (took 110.776328265 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.654958801 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.811582839 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.098018467 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.881720544 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.829722054 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.151386907 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.84646828 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.101814492 seconds)
done (took 43.118684805 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.855400844 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 6.654399406 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 6.618489536 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.836392741 seconds)
  done (took 21.852509023 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.811242478 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.134862459 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.831606836 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.612755133 seconds)
  done (took 22.17681028 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.170152107 seconds)
    (2/2) benchmarking "read"...
    done (took 2.15885908 seconds)
  done (took 6.075547364 seconds)
done (took 58.704256492 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808773133 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.810087117 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.809138949 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.811083393 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.810587705 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.810661831 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.811012725 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.810650882 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.81030512 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.811540788 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.812198251 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.812986111 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.812497841 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810977235 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811016535 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811000423 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812095303 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.813542157 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811677605 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81244563 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81182897 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.812834269 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.812611014 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.81281829 seconds)
  done (took 45.217411321 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.811230599 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.810129601 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.810576488 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.811274055 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.811185761 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.810874019 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.810835249 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.811311555 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.811696635 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.811305246 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811387695 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.811426673 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.811360481 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.81174224 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811906379 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.812485123 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.811949325 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811192748 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811900479 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.81386463 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.812950785 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812484336 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.811752487 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811511825 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.812232597 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.812130467 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.812936877 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.812554148 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813035724 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.812996305 seconds)
  done (took 56.099416791 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.812436566 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.812610945 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.812687774 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.811906323 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.814970801 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.812337648 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.812589305 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.812804767 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.812334833 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.813483524 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.812524925 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.812728841 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.812834696 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.812531276 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.812332222 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.812096256 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.812876347 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.814690099 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.813673739 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.81321134 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.812520349 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.815222159 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.813202557 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.814214562 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.814101531 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.814270345 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.813172363 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.813964513 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.814249659 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.814276656 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.814358812 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.81409291 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.814491851 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.814584641 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.81335242 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.814056431 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.814735554 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.816087155 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.817651314 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.814503774 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.81395043 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.813959802 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.813974376 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.8143538 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.815721308 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.814851314 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.814607375 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.814087552 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.814657609 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.813546433 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.815207229 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.81425205 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.814551524 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.815456426 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.817317927 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.815273615 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.81529342 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.815100184 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.814788972 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.814871287 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.813899375 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.815181743 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.814843616 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.815514853 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.815308118 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.815525451 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.815569431 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.815593098 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.815426667 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.81690742 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.817288866 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.819843459 seconds)
  done (took 132.37875946 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.815636396 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816802051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.816762145 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.816289569 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816259046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.816545481 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.816754456 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815621052 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81686638 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.816999061 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817711298 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.817495932 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816132437 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815771597 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819238775 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.816781241 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.816628395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.816902022 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.816522843 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816635947 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.816110986 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817988044 seconds)
  done (took 41.718711024 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817081916 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81580828 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.816378392 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81701856 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.816603886 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.817264362 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.816973677 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.817554793 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819464545 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81772464 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816592298 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817653702 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.817183271 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817546583 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818113453 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817673979 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.817672898 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.818740995 seconds)
  done (took 34.463267491 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.819314167 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.819191472 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.818091911 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.817823169 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.818678383 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.820307893 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819485748 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.818701978 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.81813698 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.819139579 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.819369464 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818876734 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.819601971 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817939207 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817943922 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.819441554 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.818519611 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81894471 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818967193 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819173658 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.819500159 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819493522 seconds)
  done (took 41.767706679 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820336768 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.818929266 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.819718526 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.819253684 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.819071517 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.820573548 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.820136696 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.819884175 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.819167456 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.820414271 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819141697 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.820685273 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.819247717 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819212039 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.820118548 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821604237 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823426255 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.819814738 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819651689 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.820088445 seconds)
  done (took 38.152758285 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.820921136 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821760107 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.821218988 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821691539 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822525814 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.820991912 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821729196 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.820590481 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82097355 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.821234349 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.820953711 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823328583 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.822178334 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.821427685 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.82127515 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.821958914 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.821286648 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.821983567 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.821594811 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821683954 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.821873005 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.821821153 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82158951 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.821418378 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.821233437 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.822263693 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822637743 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.822597817 seconds)
  done (took 52.760491784 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821607591 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.821696844 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.821942034 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.822443033 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.822295697 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.822971655 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.822327814 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.821234784 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.82212624 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.821974047 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.822885661 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.821791092 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.822716714 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.822356158 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.822114421 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.825279893 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82322975 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.821974192 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821817616 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821960588 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.822459164 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822876634 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.822563482 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.822069936 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822623617 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.822505824 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821974644 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.823395427 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822483429 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.822586931 seconds)
  done (took 56.427828677 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.844682798 seconds)
    (2/2) benchmarking "in"...
    done (took 1.84411498 seconds)
  done (took 5.443225544 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.822657318 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821854983 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.82302944 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.822955943 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.823573723 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.823657623 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.823810094 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823599361 seconds)
  done (took 16.340230371 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.825827752 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.823378892 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.823155107 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.824506542 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.823356109 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.829316053 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.833890578 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.824956407 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.827609097 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.828769553 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.833084084 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.834833445 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.829670284 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827655388 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.827209312 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827621508 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.8250054 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.825839275 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.8250465 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.82492575 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.823844669 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.830705446 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831089301 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.825445605 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.829741414 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.837681503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.832992778 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.825269326 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828705101 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.832105365 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.827766018 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.825562652 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.824713609 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.826135126 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.824337293 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.825445714 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.836878187 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828967634 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.836063426 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.827375083 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.825594534 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.825673376 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.829652358 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.830228875 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.831749302 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.82713161 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.827426991 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.825902758 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.82856381 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.831619559 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.834308872 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829069358 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.826572537 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.833268023 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.831952601 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.838507993 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.828043801 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.832627565 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.837889084 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.84006874 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.839697674 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.838737837 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831706247 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.827105021 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.838361142 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.852898813 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.83821825 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.82919045 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.827575833 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.827538311 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.838459256 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842688869 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.84052827 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.828857322 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.828166368 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.827487625 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.831250396 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.828275857 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.838527483 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.835549393 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.8288391 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.828407852 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840626823 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.852302111 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.830343213 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.828482781 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.828277694 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.829966168 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.832310512 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.842735818 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.829086958 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.829204119 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.831136494 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.832451583 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.831559637 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.830157124 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.830624254 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.832657743 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.828867251 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.830705134 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.830633529 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.834785567 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.841031126 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.83009594 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.831034096 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.838080722 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.829822333 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.832489843 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.838781365 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.830469571 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.830715874 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.83274687 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.838170815 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.828688414 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.834212361 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.841180183 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.829698893 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.834184616 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.831070732 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.831312503 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842863735 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.85963587 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.83125141 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.831445707 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.837475257 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.841390424 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.832735544 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.837243358 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.830773075 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.830719903 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.82994612 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.836134209 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.831642752 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.834307921 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.831119498 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.833893078 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.832930363 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.83152466 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.831257408 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.835675507 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.834704723 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.834425637 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.836296356 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.8360076 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.832802681 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.836494331 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.840882024 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.834153346 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.83601166 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.835150909 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.831966071 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.83184246 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.835619825 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.834943971 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.835451709 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.832625644 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.834072137 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.833220558 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831868402 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.834445105 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832394967 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.835237169 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.839172849 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.833636102 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.839492864 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.835779471 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.833171807 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.83235638 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.833461915 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.835317736 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.834055788 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.834542895 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.838387672 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.840665512 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.833213864 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.834162538 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.838859113 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833554203 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.834101336 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.834753764 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.839166104 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.844929065 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.834002744 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.843096178 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.833997593 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83469122 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.835008203 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.837743476 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.837228477 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.834595947 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.840292596 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.84189181 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846633192 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.845719084 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.837597818 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.838441496 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.837804652 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.838199183 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.841468017 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.834573008 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.835149131 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834584258 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.838073395 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.834622976 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.838094277 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.835199049 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.836728491 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.835320991 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.83587616 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.834577191 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.835771205 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.83892142 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.838469713 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.835627682 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.836010867 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.83511495 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.837256981 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.834819028 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.837752713 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.839236324 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.83607919 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.835540192 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.845882815 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.835404649 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840630431 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841101369 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.838253855 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.838422378 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.836268888 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.842340493 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.838853446 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.845098731 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.8388996 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.839703796 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.846947807 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.841977618 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.837503405 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.84157222 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.837999125 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.837048423 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.841944521 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.844556946 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.836970183 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.8376184 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.837578817 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838248723 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.836903627 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.844652857 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.836736176 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.838860936 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.837049462 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.842621761 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.836925219 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.841282448 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.840151585 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.839145468 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.841713665 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.838059159 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.837941922 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.840769034 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.83721877 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.838093778 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.838589295 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842068435 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.846356054 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.844602335 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.838931081 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.844144963 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.840324758 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.842604558 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.841574024 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.838693784 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.840275482 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.852109106 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.847498693 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847236494 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.843091638 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.838989998 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847876687 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.842420931 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.843647577 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841245369 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842030361 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.842409343 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.844005656 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.838508897 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841780369 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.838659717 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842807608 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.84261986 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.843307266 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.840130467 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.840819093 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.839872968 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.839974851 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.840194567 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.843174117 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.840833303 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.843312287 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.844757202 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.8439163 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.842357324 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.849771426 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.843425198 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.843645198 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.843356067 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.842137173 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.841266672 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.842144201 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.840954479 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.844511485 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.84893262 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.844458331 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.852090735 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.844631158 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.852967794 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.844259666 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.846754517 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.848897697 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.841261958 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.842102888 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.843499195 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.841011289 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.849575457 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.841554947 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.84294131 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.845096906 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.841267546 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.841019481 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.841667733 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.841974562 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.841302387 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.841845248 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.853127827 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.845464078 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.847171692 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.846169244 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.841479687 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.841835016 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.842649842 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.842117075 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.847812257 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.842758252 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.844540797 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.844796655 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.843743119 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.842930973 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.843763851 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.843163829 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.845059645 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.842495685 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.852014922 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.844860766 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847153737 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.843011339 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.85243463 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.843563907 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.852417988 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.843496355 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.84512555 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.843396487 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.843259464 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.845739406 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.843738138 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.847497539 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.847411175 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.8453916 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.846812473 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.843472479 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.846720482 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.84616585 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.843429189 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.846083198 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853971249 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865441254 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.847556817 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.847937855 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.844358631 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.847853566 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.847593893 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.844683594 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.847529427 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.849802246 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.856749281 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.851202208 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.847073103 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.844235902 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.84777304 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844530296 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.843596228 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.844912598 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.84520284 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.845099454 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.846783846 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.845760217 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.852490629 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.844684699 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.847996309 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.851110202 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.847605606 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.85786429 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.845066495 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.847122323 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844393946 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.844596134 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.847622473 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.848088284 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.845441804 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.848626866 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.845128261 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.848856634 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.852729037 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.852210286 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.850377447 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.851350225 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.845493318 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.847932829 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.847818571 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.845776915 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.845466589 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846385801 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.849349533 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.846113426 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.847926742 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.846578857 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.846093964 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.847626677 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.846522008 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.851869005 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.856234043 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.851937739 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.84558193 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.847016348 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.847212667 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.847230851 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.849331001 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.856650807 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852394961 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.859101024 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.856825825 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.850504153 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.85107833 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851377419 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.857695238 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.847521844 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.850295132 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.849872813 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.851592448 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.84953529 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.853847754 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.849349372 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.856384329 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.851118795 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.849308868 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.858513088 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.851902628 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.848707491 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.851983402 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.854425845 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.85023205 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.847833316 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.849391198 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.851426014 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.858901316 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.853576417 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.849031728 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852667411 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.847308548 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.851502377 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.852525074 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.848153629 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.85217027 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.849044933 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.853171428 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.848903757 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.84873995 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.849780258 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.850631304 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.849756892 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.855398369 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.85725099 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.84864893 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.853796071 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.852626361 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.851775529 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849693414 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84898019 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.849504602 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.849429836 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.851581741 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.849955581 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.852821118 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.854963165 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.850419052 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.852008155 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.856233138 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.850083556 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.855684511 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.862235795 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.856852498 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.851185216 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.851769569 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.851951626 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.856338895 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.850408883 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.851670132 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853987624 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.855012158 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.850812658 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.850196038 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.850614842 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.858321309 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.869702891 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.852144739 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.853839054 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.853508959 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.858328988 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.851294426 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.850757484 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.852075103 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.853806563 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.85605374 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.860124394 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.851577839 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.860455585 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.854227277 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.853126663 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.856853008 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.857194892 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.8603206 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.856375021 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.851702985 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.851978326 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.859380137 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.870156765 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.852061973 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863340479 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.883530927 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.854016331 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.854605184 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.853313964 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854619815 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.853385565 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.857003216 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.852623867 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.853503834 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.85297019 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.852885121 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.854658979 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.861973313 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.85651047 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.852266297 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.852952444 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.85367959 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.855786335 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.85221571 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.854325557 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.852416975 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.853430244 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.853358896 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.855471522 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.857309128 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.867152251 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.86493832 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.854136589 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.855507909 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.853550287 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.859852013 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.859193086 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.866781407 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.862294552 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.854750502 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.855047512 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.858865151 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.854096593 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.855341336 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.859492967 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.856617886 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.85717132 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.854201631 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.866655276 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.86313215 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.860820913 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.857120135 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.855391191 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.855343667 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.858631444 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.855068603 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.856076422 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.858883312 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.857283485 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.859713622 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.856303804 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.85529024 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.860457439 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.862996985 seconds)
  done (took 1100.271817045 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856263895 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856219628 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.85631779 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.855486603 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855775742 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855527663 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.856121183 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855787864 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.854932193 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.854846489 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856085648 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857743234 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.855899968 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.856157895 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.856090237 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855837404 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856722651 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.856623727 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856955298 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857116833 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.855848007 seconds)
  done (took 40.765804566 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.857216016 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.857093372 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.856135578 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.857308257 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856050924 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.857738093 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.858386241 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856388561 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.856800233 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857342865 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.856852114 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857877477 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.857066745 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.857006542 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857218172 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857699335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.8595225 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.857600698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.856754977 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.857773152 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.857773803 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.858123896 seconds)
  done (took 42.651039584 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.857484779 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.857110554 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.859790797 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.857474555 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.85765519 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.858127835 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.857718186 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.857874364 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.858496804 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.860240296 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.859746314 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.860090422 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.866957184 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.8658487 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.860878936 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.859482445 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.002907812 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.858970884 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.858631056 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.858393963 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.857759732 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.866781823 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.858695176 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.859326831 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.860678172 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.858912479 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.859396775 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.859567924 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.859885716 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.862781696 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.864531047 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.861096574 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.860967875 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.863725342 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.861607162 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.862721187 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.863415599 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.860264083 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.860545342 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.858992439 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.870541296 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.881851033 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.85959368 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.867904583 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.859235505 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.8597047 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.864151426 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.869428783 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.860035242 seconds)
  done (took 93.139711467 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.860166648 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.860728189 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.860673493 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.860441905 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.861530006 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.860818488 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.860992492 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.861537532 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.859908855 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.86161106 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.860763564 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.861077044 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.86073767 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.862146095 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.862874405 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.861286466 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.861082021 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.860381406 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.86109181 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.862316005 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.862320525 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.861713637 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.861923328 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.862836598 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.861930664 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.863683585 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.862412624 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.862929126 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.863510622 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.863005363 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.863990987 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.86249131 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.864015263 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.863519737 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.86256449 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.862873738 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.864070292 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.86369587 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.863290156 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.863416388 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.864212555 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.863416703 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.863358787 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.864163087 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.863511995 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.864082913 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.864454948 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.864257651 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.86331676 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.863548533 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.863696225 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.863463314 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.863876564 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.863719681 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.865172257 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.863434175 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.863090215 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.864848951 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.863779794 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.864173224 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.862431337 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.863844795 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.864671653 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.862763365 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.863926766 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.864286537 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.863894046 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.86388059 seconds)
  done (took 128.462945039 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.864259091 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.864721669 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864500364 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.865299968 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.863844799 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.864513441 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.864462291 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.864276077 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.8644193 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.864284307 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864198447 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864320655 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.864653757 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.864270603 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865497066 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864361458 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.865450506 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.865621196 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.865047884 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.86576215 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.865074294 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.86491847 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.865819537 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.865377332 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.865588289 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.867254389 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.865050743 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.865372201 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865459792 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.864958986 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.866288111 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.865309223 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.864562315 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865649488 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.865163287 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.865959814 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865546547 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865598449 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.865502595 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.866161209 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.866691298 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.867319211 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.865604229 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.865981209 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.866161145 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.866205245 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.866185901 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.865726352 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.866227289 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.867239256 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.866627452 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.867338223 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867539908 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.866690375 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.866812349 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.866552522 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.867721003 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.868608278 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86719356 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.86684706 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.867297816 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.867168701 seconds)
  done (took 117.470809384 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.86638318 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.866687332 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.866538614 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.867714664 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.867511565 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.867761435 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.868660224 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.86828591 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.867631819 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.867704107 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8694986 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.868448223 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86909444 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868089506 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.867462026 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869610984 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.868178457 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.868225452 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.868227778 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.868605898 seconds)
  done (took 39.158246922 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.867578508 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.869137164 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.867808406 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.867666155 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.86833034 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.869400144 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.872711568 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869215316 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868203281 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868834251 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.868984951 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.868499168 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868201863 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.869209871 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.86863106 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.869444353 seconds)
  done (took 31.701492494 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.869857345 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.869246417 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.869192071 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.86926675 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.86974051 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.872342752 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.869838696 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.869336005 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.869355979 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.870454064 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.869660812 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.869435441 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.869527985 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.869133763 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.870299239 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.869196691 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.86924015 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.869500241 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.869896239 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.870255248 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.870613724 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.871950506 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.869592432 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.870294254 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.869924716 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.870901542 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.871836465 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.872636401 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.870181117 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.870706568 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.871839453 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.871470479 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.870509926 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.870436884 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.870652242 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.870805406 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.870486984 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.873667634 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.871050798 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.870309499 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.870898945 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.871530054 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.870679267 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.870862287 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.870523984 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.873206622 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.871094943 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.871379382 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.872068805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.871170814 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.870815461 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.871519157 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.87204249 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.873774862 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.871977005 seconds)
  done (took 104.689264222 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.871312845 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.871558381 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.872028964 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.871520545 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.871972979 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.871028955 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.872547387 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.871647517 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.872578961 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.87191023 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.872130578 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.872379048 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.872566581 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.874677751 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.872283373 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.871777437 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.871983892 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.873906774 seconds)
  done (took 35.502596723 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.873226246 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.873062025 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.872965552 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.873514208 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.873601813 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.873057192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.872597702 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.872906136 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.873190686 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.873756508 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.874715894 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.87340112 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873178349 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.873470472 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.875166803 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.873019915 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.873111699 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.873938257 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.873119936 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.873382392 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.873958031 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.874414857 seconds)
  done (took 43.019366248 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.874267424 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.873615111 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.888798124 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.896511751 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.89435265 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.90560572 seconds)
  done (took 13.136956818 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874169842 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874203646 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.874326249 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874321495 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874210832 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873999182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874646808 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874249864 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873736996 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874435759 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87449121 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873618977 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876436366 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873887574 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873439894 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874097945 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874340489 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874793577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874863376 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874942047 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87393969 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874213464 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875484707 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875069268 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87580586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875429703 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877119192 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878326942 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878146576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875415854 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875704075 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876319369 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876235381 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876406792 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876159457 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875881002 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876933979 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877048901 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875996118 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875742041 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.876374465 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876241187 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876143273 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877128738 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87725998 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877242263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876214324 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876398048 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877291046 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877739794 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877293578 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877033165 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87627722 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876641617 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877317852 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877001535 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877329622 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876882779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877145135 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877702271 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878758943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876481453 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876691249 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877608765 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8780719 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877297843 seconds)
  done (took 125.619057179 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877658985 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.877190831 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878684864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877761483 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877751098 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87812033 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879494584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878463566 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878311953 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880526622 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878880375 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878763932 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878111672 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878411706 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87845647 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877693758 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878801142 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877825799 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877722825 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878583111 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878318511 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87770758 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878439431 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879705334 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879030196 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882504859 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879261026 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879330323 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878433967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878300933 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879318963 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878762094 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878645065 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.878946692 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878102607 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880213592 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879506225 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878846663 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879575728 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879366541 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880155375 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881532492 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879389802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879801073 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879342454 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880446588 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879538255 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880000446 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87995644 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879098793 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879695568 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87993869 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880449868 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880405473 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880179901 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880376558 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881267515 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880300168 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880611825 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880231931 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881452291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881331714 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881215186 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881312653 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880707789 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880859439 seconds)
  done (took 125.849401948 seconds)
done (took 2563.956288132 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.914101358 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.88723983 seconds)
  done (took 15.613150064 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.045261276 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.99878476 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.883971478 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.927976879 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.884496346 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.907961818 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.892955217 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.883581747 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.883437866 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.883716943 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.882870294 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.066980806 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.938252226 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.88370265 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.883774762 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.975531367 seconds)
  done (took 52.643552135 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.887071122 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.890250447 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.89600212 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.889850016 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.88737161 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.899421913 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.91791807 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.890894873 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.920023582 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.901282112 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.955189223 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.901283859 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.886840888 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.936225824 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.903965618 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.902347225 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.97936499 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.968220159 seconds)
  done (took 36.226139682 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.96339718 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.899357682 seconds)
  done (took 10.684519255 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.890287372 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.92277728 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.978536459 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.909255515 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.90893766 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.900041442 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.933867894 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.93248099 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.898577129 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.901322319 seconds)
  done (took 70.993039845 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.891766959 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.889908229 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.889099351 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.885991521 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.883545839 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.890712338 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.887287741 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.886175561 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.540267044 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.923046437 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.897863048 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.891877547 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.886257555 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.888455448 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.885027139 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.908745124 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.998618373 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.884076275 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.88450997 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.892189909 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.888107171 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.94371528 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.900433182 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.888222146 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.917768563 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.541789493 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.895101506 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.892769176 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.998044925 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.8850487 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.886993381 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.073003308 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.889903885 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.351967619 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.15520224 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.89356955 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.899762146 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.89517297 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.886626999 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.011861881 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.888128964 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.894065265 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.775338302 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.136669053 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.984314332 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.932188728 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.202066651 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.904702278 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.889450188 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.9185895 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.891543752 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.888869731 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.901385325 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.393836989 seconds)
  done (took 133.696909569 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.887098947 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.233172307 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053403545 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.887939015 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168381268 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094795996 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.889064193 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933470577 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.888764769 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11480013 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.139320636 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.991121587 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.890506391 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.888216694 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.888279619 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.886424936 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.04180368 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.958806816 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.890077212 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.887065559 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914271498 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.127485104 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.010342082 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.893954665 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.91365403 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.09668578 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.009491232 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.993344563 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.683222041 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.886605291 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.949613186 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.890043047 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.887358784 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.88736707 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.042541164 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.98232305 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969382033 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.890352556 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.888495246 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.888752212 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.550803518 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087162988 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.982759171 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.016819151 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.140598778 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092105454 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.665866563 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.888063254 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.62391296 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.050447514 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.115828318 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.118912566 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.007870081 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.892604311 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.232913768 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.887178487 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.887206249 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.137204207 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111295808 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.985193038 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.891804128 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.887253762 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.887588832 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125304894 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.893500835 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.982702581 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.890147278 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.890755789 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.984723876 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.987048632 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.117920195 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104732535 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.91921878 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.239176892 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.392786439 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.134089915 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.952916481 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136268539 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.891440275 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.888266602 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965729198 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.726905391 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.141230363 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.130363426 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.132711489 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.923853023 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.60869328 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.887538478 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.113824494 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.108403627 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.147401345 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.135166711 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.120864496 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.2106984 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.889539391 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.890227588 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.123039355 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.012420864 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.894020478 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.228109212 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116101497 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.409515729 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.915167731 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.188571272 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018256703 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.890507326 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.51437934 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.887573535 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.112941361 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.925286635 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.88703847 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.885871167 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.101600136 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.877228744 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.884641919 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.531827747 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.940691459 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.883702772 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110662157 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.882142006 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.146139484 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.880837216 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109113713 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.317837059 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.909154937 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.055418723 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.122750573 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.881287642 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.115968304 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.1178566 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992538078 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094760833 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.580993607 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.876480424 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156656935 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87593302 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.871956702 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.0382246 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.872423746 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.008335569 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.872168808 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.160223809 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88743943 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097315296 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.315004748 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.114860734 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.895628932 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.914418906 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.869239718 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985152687 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865954999 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.685034209 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.016444705 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865606441 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.859543322 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.406864265 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.857797931 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002461465 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080472554 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876719527 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.924702294 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.518155328 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.853991154 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938416478 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875317599 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.24129619 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.854088834 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.103905815 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.859773208 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.853147342 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.851819002 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.086565124 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.035363908 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.85755497 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852455272 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.75352584 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.851487271 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851963444 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.032732506 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.213162209 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.85096743 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051074932 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855311954 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977867788 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.854231829 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.004104656 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.179837767 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846741524 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.848712583 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.846226401 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.846124372 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.843543562 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050916876 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.869480388 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.332832613 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.977165273 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113724829 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.151630288 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.081610515 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883161604 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.847336804 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092357733 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.843483127 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.901151432 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.842442653 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.858831368 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064641362 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841916218 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047200153 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.108698356 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.847378177 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88378419 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.842269837 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837064222 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.836066326 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.981006517 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921928817 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.838988626 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.836721518 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.948685079 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957117386 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.044860447 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.835489084 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.867559095 seconds)
  done (took 903.728118349 seconds)
done (took 1225.399180989 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.834380857 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.830834407 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.834102327 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835369651 seconds)
  done (took 29.101610384 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.830746966 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.830741061 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.830030913 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.829454555 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.828980521 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.829151167 seconds)
  done (took 12.74047252 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.030023509 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.826322295 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.829617632 seconds)
  done (took 21.447626209 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.897652046 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.208384942 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.960881948 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.239200703 seconds)
  done (took 10.06629522 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.826323231 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.827226855 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.827459482 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.827457978 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.828037857 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.828109466 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.826864487 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.82646316 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.827719452 seconds)
  done (took 18.209222682 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.022792794 seconds)
done (took 97.35404883 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.850002011 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.239444748 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.192624966 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.228369601 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.974823245 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.219859556 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.998132284 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.838525563 seconds)
    (9/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.162159962 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.901479391 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.029602496 seconds)
    (12/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.974643693 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.896644876 seconds)
    (14/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.165626422 seconds)
    (15/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.048376287 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.234487824 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.062215236 seconds)
    (18/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.17238153 seconds)
    (19/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.200251082 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.924797862 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.025312606 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.3485924 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.900216257 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.53298471 seconds)
    (25/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.772014578 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.06860889 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.685387876 seconds)
    (28/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.9924677 seconds)
    (29/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.227499031 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.982155763 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.892568512 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.984678182 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.878583418 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.564983592 seconds)
    (35/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.083945733 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 6.897345228 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.196714234 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.069123763 seconds)
    (39/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.026947615 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.997896226 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.954255362 seconds)
    (42/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.894558543 seconds)
    (43/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.893883824 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.348028178 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.922324619 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.373264892 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.025784525 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.110640894 seconds)
    (49/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.2661543 seconds)
    (50/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.903628847 seconds)
    (51/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.904091699 seconds)
    (52/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.420362832 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.897301509 seconds)
    (54/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.105508441 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.337089028 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.899654789 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 6.136748927 seconds)
    (58/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.009676784 seconds)
    (59/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.767394792 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.914908261 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.144343619 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.138490378 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.900732455 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.99413143 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.132571927 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.923779649 seconds)
    (67/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.018167421 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.928548651 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.923918169 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.920509758 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.992778278 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.001457718 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.040139533 seconds)
    (74/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.903985224 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.920910393 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.97498575 seconds)
    (77/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.982122573 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.140127763 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.226238714 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.928099024 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.250898527 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.852274593 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.209424056 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.924332282 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.572667881 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.905698923 seconds)
    (87/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.396639844 seconds)
    (88/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.122065557 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.905907447 seconds)
    (90/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.054557338 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.98178189 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.007705848 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.111924977 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.092942649 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.050794304 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.273590887 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.155971643 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.229754084 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.723449061 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.997875938 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.905141196 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.28585638 seconds)
    (103/309) benchmarking ("sort", Float32, false)...
    done (took 5.624688133 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.929579415 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.926320205 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.131004759 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.908778032 seconds)
    (108/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.971439922 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.594941085 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.911111595 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.011371528 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.91031029 seconds)
    (113/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.087908435 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.905825911 seconds)
    (115/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.999755865 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.256120733 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.582921277 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.924904924 seconds)
    (119/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.072999182 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.983885941 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.213585813 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.928355162 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.905300466 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.998007419 seconds)
    (125/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.176324136 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.983384489 seconds)
    (127/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.158780331 seconds)
    (128/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.225298626 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.22695705 seconds)
    (130/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.00954713 seconds)
    (131/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.009446732 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.90949234 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.000627113 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.220427111 seconds)
    (135/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.155937968 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.942127603 seconds)
    (137/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.055401433 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.905185205 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.159169997 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.047413473 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.162914148 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.295617246 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.909211871 seconds)
    (144/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.925863682 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.927779096 seconds)
    (146/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.230675962 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.044496503 seconds)
    (148/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.986165969 seconds)
    (149/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.947846331 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.320928845 seconds)
    (151/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.990673489 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.916273798 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.10875028 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.907912605 seconds)
    (155/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.122592306 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.922631258 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.965894854 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.666021849 seconds)
    (159/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.007747809 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.555455733 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.058381892 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.15740521 seconds)
    (163/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.960876064 seconds)
    (164/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.132631872 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.815954798 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.912025485 seconds)
    (167/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.158078901 seconds)
    (168/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.996050174 seconds)
    (169/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.822766688 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.149792164 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.910321467 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.027066628 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.905170692 seconds)
    (174/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.293717695 seconds)
    (175/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.167809502 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.912150031 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.303854193 seconds)
    (178/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.065662315 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.080017166 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.007505377 seconds)
    (181/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.974250563 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.159184319 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.911060941 seconds)
    (184/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.933984024 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.231555589 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.097236912 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.910096694 seconds)
    (188/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.11732186 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.021872474 seconds)
    (190/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.906725481 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.922815206 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.18735559 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.919870529 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.008869148 seconds)
    (195/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.098132326 seconds)
    (196/309) benchmarking ("sort", Float64, false)...
    done (took 5.634024859 seconds)
    (197/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.463645334 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.372110479 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.912386156 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.953744174 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.542053241 seconds)
    (202/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.042362764 seconds)
    (203/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.920996388 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.251273157 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.271738575 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.976209258 seconds)
    (207/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.903038975 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.272140817 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.057104096 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.001809716 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.825784851 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.255530671 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.864395877 seconds)
    (214/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.038697586 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.135338315 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.031084812 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.247120368 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.226118761 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.010218321 seconds)
    (220/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.140068659 seconds)
    (221/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.932369878 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.609426589 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.228276966 seconds)
    (224/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.938273068 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.00612205 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.906778724 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.908011823 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.183443236 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.010402266 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.925809455 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.897900806 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.021796818 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.930898076 seconds)
    (234/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.919002313 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.231842616 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.283246977 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.899037925 seconds)
    (238/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.530118307 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.895586442 seconds)
    (240/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.993422004 seconds)
    (241/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.890670373 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.196160064 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.894773279 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.022260854 seconds)
    (245/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.046761132 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.128270112 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.227555778 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.872902976 seconds)
    (249/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.103138418 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.220260632 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.214061453 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.890229613 seconds)
    (253/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.98248895 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.907715247 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.371894459 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.259730901 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.019046126 seconds)
    (258/309) benchmarking ("sort", Int8, false)...
    done (took 4.771725868 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.982336539 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.008700887 seconds)
    (261/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.327919562 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.905843396 seconds)
    (263/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.032212699 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.278438183 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.113765705 seconds)
    (266/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.224529883 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.677807526 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.662401223 seconds)
    (269/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.038673309 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.561264176 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.053221482 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.048810572 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.993089051 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.275790558 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.969301714 seconds)
    (276/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.959498089 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.880895231 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.166450678 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.113487456 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.623645339 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.234093413 seconds)
    (282/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.696092664 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.871239168 seconds)
    (284/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.076820354 seconds)
    (285/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.872429354 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.581267565 seconds)
    (287/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.259973107 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.115737958 seconds)
    (289/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.119243048 seconds)
    (290/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.923253491 seconds)
    (291/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.406060205 seconds)
    (292/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.026743902 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.141544917 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.713097854 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.866852627 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.866415467 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.545942266 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.898707008 seconds)
    (299/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.867233297 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.702537355 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.011141892 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.141016897 seconds)
    (303/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.89543695 seconds)
    (304/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.867075607 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.446717134 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.777759832 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08690891 seconds)
    (308/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.877258826 seconds)
    (309/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.866786696 seconds)
  done (took 1011.942477702 seconds)
done (took 1014.04617883 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.082626647 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890578832 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.871849092 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.892967678 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.984670753 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.91528273 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.885035757 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.874852437 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.921868306 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.921254158 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.871981347 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.91193687 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.872657828 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.87276417 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.872046937 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890207878 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.177106052 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.907142393 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.891101574 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.88413708 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.890013869 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.87110093 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.921629351 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.912956125 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.87630818 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.878481785 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.878595963 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.892871428 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.986029932 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.87669914 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.877140715 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.885640065 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.17830868 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.90312392 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.871942706 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.893514308 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.886326456 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.886100464 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.878381512 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.907443442 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.267082592 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.92116724 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.876064853 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.874448677 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.874459751 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.881378177 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.875435055 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.883223886 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890892947 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891421366 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.258063195 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.933970806 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.879188329 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.874449207 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.887793424 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.874173864 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.878413888 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895281308 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.894771648 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892661929 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.165273906 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.914999407 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.878512209 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.893370268 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.8840894 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.293686899 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.916570816 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.881826545 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.266810399 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.926074674 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.29428071 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.929288112 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.880763555 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.889943695 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.908845957 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.178017132 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.90527521 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.8746737 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.883091322 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.872961823 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.887495603 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890414353 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.87907618 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.875456147 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892150453 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.917771891 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.888755113 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.87649289 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.890866618 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.895897125 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.885229996 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.888247717 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.878933395 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.873896766 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.888650747 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.880422493 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.879494111 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.879913527 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.881182689 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.888987001 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.26522568 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.936703923 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.873646953 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.87499445 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.877509971 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.890980504 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.265322342 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.918782508 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.89915208 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.925178136 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.877999477 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.167765366 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.911444314 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895354027 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.887737669 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.879838229 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.875834629 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.166778495 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.29379301 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.93735562 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.877859769 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.875139197 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89496007 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.87878962 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.874840998 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.181788715 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.912472966 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895393666 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.999679761 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.891481286 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.91116638 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.876034722 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.881680793 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.923017641 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898002657 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.910780224 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.879903898 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895400749 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.895334286 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.875243045 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.89027114 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.890884828 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.877475143 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.886325771 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.876478133 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.924068154 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894709587 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89496042 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.899941445 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.002448785 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.876843278 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.167412788 seconds)
done (took 296.264174246 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.958511178 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.87400868 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.967615995 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.87501948 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.971446598 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.949031414 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.876355878 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.875987466 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.875510236 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.368242335 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.874795654 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.880596244 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.874337773 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.87597839 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.953089249 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.877044664 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.874400059 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.314574111 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.876037185 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.956559085 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.876061271 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.872538815 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.873338447 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.363447828 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.872243272 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.870289512 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.947321061 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.868007017 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.309481603 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.86766326 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.864609381 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.303634296 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.944649149 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.890208487 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.869017723 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.8713563 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.949691422 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.871551144 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.927057672 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.935876137 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.954700954 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.892667481 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.85779051 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.858321257 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.86184043 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.858938191 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.85900326 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.886390908 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.85391323 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.861751705 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.289549018 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.857281117 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.857164241 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.851921001 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.851076389 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.879693017 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.848927669 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.850032382 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.932264038 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.851511737 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.914944569 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.33852434 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.336931286 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.849529255 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.847127769 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.844596875 seconds)
  done (took 184.85073342 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.910670083 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.917676155 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.907243703 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.847343065 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.890517291 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.908940953 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.845276708 seconds)
  done (took 15.002503763 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.846359673 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.840183942 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.891122099 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.887389313 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.838310993 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.993368739 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838164932 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.849217433 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.843424722 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.866116574 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.839155994 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.838781607 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.842694642 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.839112615 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.887090048 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.850970613 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.95439663 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.840742984 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.83852881 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.987938865 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.843877115 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.845941056 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.864773983 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.850667415 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.839161347 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.845949961 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.408437504 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839371694 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.838789749 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.838873001 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.83943315 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.881948929 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.839733143 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.839229414 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.839959038 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.953546226 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.839635497 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.839133973 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.839341122 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.839496121 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.839295367 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.83959718 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.840599044 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.840199835 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.840057496 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.863187324 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.840615393 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.840260278 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.840047778 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.840110822 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.865181891 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.839936126 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.839296861 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.848127383 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.883177991 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.847204369 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.839947269 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.840492991 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.842865519 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.840537657 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.989834117 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.889287775 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.840318534 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.890686479 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.839717988 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.839830989 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.840048947 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.840928648 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.929157686 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.839818611 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.890722483 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.840363086 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.000333069 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.863632484 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841755311 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.844997719 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.845253466 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.841414681 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.840550889 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.848937855 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.840275941 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.843721494 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.848039925 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.84681741 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.841571852 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.953218317 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.983157862 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.842779237 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.844227342 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.8501454 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.842747838 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.886783954 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.841090927 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.841650621 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.898783675 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.958326313 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.868767694 seconds)
  done (took 202.894187423 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.848868968 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.849156904 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.840739727 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.855915705 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.840730528 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.840796811 seconds)
  done (took 12.848694577 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.838983163 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.839713921 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.835692608 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.835596344 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.835849066 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.834403163 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.832075205 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.834119411 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.837946241 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.830870584 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.833094428 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.830632372 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.829639889 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.82993613 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.829830684 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.830596162 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.829196481 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.828100551 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.828231308 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827784008 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.079643695 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.828609596 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.828286537 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.832691928 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.832876427 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.828458905 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.843327937 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.828660179 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.828274173 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.837523365 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.833637049 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.829291609 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.833529742 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.835930094 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.832841662 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.832509627 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832754503 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.829961378 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829169227 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.830690573 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.830906831 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.83056947 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.829282811 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.831235543 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.832186856 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.837332805 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.834977769 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.843362885 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.830893413 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.83145283 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.830459274 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.829650435 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.830554534 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.831199496 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.834802843 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.837152932 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.83598902 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.830447283 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.830154163 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.83464247 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.833412975 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.830132691 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.832578714 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.834610052 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.838980438 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.831761108 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.834043272 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.834588611 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831051752 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.830594696 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.832263957 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.831163166 seconds)
  done (took 134.969246819 seconds)
done (took 552.390112326 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.103990042 seconds)
  done (took 8.865865155 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.037150547 seconds)
  done (took 8.858002064 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.240222502 seconds)
  done (took 10.00983452 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.850062673 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.872995704 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.856614894 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.849191159 seconds)
  done (took 29.217553044 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.088783883 seconds)
  done (took 8.857348214 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.862026922 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.837523019 seconds)
  done (took 15.531319786 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.894361759 seconds)
  done (took 8.669668215 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.15190703 seconds)
  done (took 8.9283963 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.852389289 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.838677135 seconds)
  done (took 15.4808052 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.840312924 seconds)
  done (took 8.609343458 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.816295381 seconds)
  done (took 9.694940868 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.860038687 seconds)
  done (took 8.700980768 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.864642064 seconds)
  done (took 8.634811951 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.89646688 seconds)
  done (took 9.666054722 seconds)
done (took 161.487554571 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.860606164 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.84450879 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.844920245 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.843236882 seconds)
  done (took 29.163414842 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.873909926 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.874849275 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.875072462 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.883234879 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.875599307 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.872515935 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.864716148 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.86688 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.884498251 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.876008423 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.875032758 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.875229292 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.872836047 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.866044527 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.875843179 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.876277338 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.885036767 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.878005908 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.866568339 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.877297033 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.840862895 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.884911527 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.876230468 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.842434754 seconds)
  done (took 46.710867202 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.03317064 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.913427707 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.996374995 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.895064767 seconds)
  done (took 9.609564588 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.893053685 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.895388675 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.905971531 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.947785052 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.96937278 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.903945463 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.866023886 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.863801575 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.84889767 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.894400203 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.969846415 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.888765821 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.981949358 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.841087227 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.028543975 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.842303949 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.842267969 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.893683916 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.950318335 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.959940799 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.843241473 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.894086972 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.896754777 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.890714079 seconds)
  done (took 47.483651664 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.843472835 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.850640386 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.849703488 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.843786748 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.844165673 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.843914553 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.850971149 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.845120468 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.864956536 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.846266459 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.844832008 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.844911191 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.850275133 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.844270688 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.844513914 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.857713174 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.858729398 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.844050416 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.847228656 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.851381243 seconds)
  done (took 38.743842293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.84203405 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.691347242 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.188368284 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.095357782 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.843575575 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.844051163 seconds)
  done (took 31.27848985 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.857149057 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.850687131 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.844890224 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.901653563 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.986855183 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.853321289 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.845023191 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.85535367 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.892720526 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.91143451 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.868212097 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.873572049 seconds)
  done (took 24.314466413 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.846195482 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.846920292 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.848695143 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.858125757 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.854762815 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.85314639 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.851883188 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.843395118 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.859412362 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.864096857 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.853309138 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.85726675 seconds)
  done (took 44.016797547 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926174377 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.718807407 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289445447 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305671712 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.367292312 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047575338 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.845152605 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.930364789 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.846008044 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116135171 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.151765191 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134815666 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.184713455 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.690684404 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.040516835 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.415305251 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.226813101 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170371824 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971691498 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546135213 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041031206 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394509227 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.725799712 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043309733 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145662783 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.068072848 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.201117867 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.897800378 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990771202 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94592177 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94694314 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94261505 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214657445 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06422388 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012815165 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949429121 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.359674226 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.647425555 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.94668744 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.614963414 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.437456105 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.052380523 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947575455 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942290615 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.869759542 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398689571 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140900815 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.946454673 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.644509377 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.946157325 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94916508 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018300565 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.945505027 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.75080634 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.628055661 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.211683954 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.945315497 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946445512 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.498499808 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929550466 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470869458 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.984512437 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.037949489 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.611915684 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384626169 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.094519321 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.946537691 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945673697 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871594553 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.615420494 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050484485 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.081357231 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.962173447 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.585009282 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23369222 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.310033112 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.986114344 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239626102 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.658063083 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.988788888 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161410724 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887879617 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871870063 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.77695587 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871398448 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164602199 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978221923 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.521541368 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981036197 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029570965 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952623325 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963115984 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949006503 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.160184927 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.841172711 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947397038 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.185204559 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190712778 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962356208 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.031830945 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872911062 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.950096642 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194357838 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.15082351 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.135674092 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.524481327 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031250947 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834787192 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.072766384 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.790427137 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.063455411 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.218188744 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001606125 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939395956 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056119906 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.898067152 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218123668 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838765734 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.159122859 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.2635269 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176443546 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.278185344 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.194848611 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010385444 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947089705 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.948433442 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.630717765 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.549233963 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.166220363 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.962094845 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370578308 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066093911 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.949339992 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884167602 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.610350268 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.263217071 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.016998325 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.162716685 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.843760082 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.337253005 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875510099 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086786457 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.949870634 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.163754096 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.586882247 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.025653159 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200896126 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.140664722 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.227893708 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068594739 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965494484 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041792091 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966276906 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.309088899 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307840891 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.951572362 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.950818423 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.623979757 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.003034116 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95599913 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.952201026 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.509045009 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221301865 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969464046 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.958397641 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.824862286 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.962732476 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014595102 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953428412 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954669628 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.472073485 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.464651218 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.957375149 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.611422891 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173918837 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95455668 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.555819632 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118223646 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.964668471 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.216751619 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013020775 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.878061442 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.650198196 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.653941879 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951962465 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878600135 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953152474 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956980532 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956853652 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.141513853 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.229883415 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000861885 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.631870307 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.051961208 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958188387 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.956088007 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956617608 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.445167572 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951918287 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478487789 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073113728 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084318596 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.966259536 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.878469047 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.956589632 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954501086 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.955839049 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.90130241 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003147749 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.625453673 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15427326 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202721919 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.360372598 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967887042 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.609817173 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.067478024 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.972134254 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.211272306 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.563760558 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.059527119 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030223952 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.963711485 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.618220672 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.681099599 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.51064994 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261311968 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.265626583 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294167391 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.385636424 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.293800948 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.044663701 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183558027 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477692322 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014030067 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048165635 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89704707 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973613681 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.594958882 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30478281 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969897318 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176269579 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238561921 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.27260222 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080765442 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161454795 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987633249 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.835346857 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989544003 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.495381096 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978748678 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.358820425 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149643404 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04202975 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.213573905 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.028459925 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.959504071 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.298838123 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001629524 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.66679298 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.312685062 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388992847 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.387668981 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172849028 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.961424003 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.398840142 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313649466 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.205035292 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.082999654 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887789773 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.964390453 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.966756998 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.972526607 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.934895332 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.797551796 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.208023595 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96567969 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186648536 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.130922132 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.339627071 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.861801512 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.962844356 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960270968 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208430135 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.683186902 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119376141 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.318934911 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.539855652 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972497644 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.886148301 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888528579 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.662340718 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.964382257 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926718539 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171041525 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.062688051 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.641166272 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389500889 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273205826 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208176748 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.974479485 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.224811701 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233527485 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.45343432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983640277 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.060484755 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.212264016 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.642217363 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.177423968 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189391078 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50056379 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.179714958 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40752303 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.931978021 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.964212334 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171115159 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.179427665 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.282960132 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125450069 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.672920884 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.978648811 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335320013 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022779085 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.279483676 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138150215 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.049119807 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970096979 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040610974 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968142756 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.970369608 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970274915 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972332873 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.285467092 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.070191063 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.976488306 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038615839 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.96014169 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.523041588 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.971680011 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226906257 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306662596 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.300017777 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022492238 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.964493798 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966894235 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891304836 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094370966 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.402617401 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235919694 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.087457355 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.1001339 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988425161 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.217877161 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.247996104 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278942576 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238725993 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.844579615 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.65186007 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.090442147 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.18066167 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970707083 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.168740793 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178740661 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264940281 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534558869 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.160188551 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162050324 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237273899 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.326274664 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.967059366 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550303078 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.982544291 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.366295622 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.000660041 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.283573387 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211175203 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971048278 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089585158 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969001847 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.164991989 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.416106947 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576664861 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304516675 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.820252184 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971704317 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231221616 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282085271 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26554475 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042872535 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970867572 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.6555245 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099320475 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.844792919 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.186465279 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96796172 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171518116 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.679089708 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972140258 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239968701 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267289728 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.968595425 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.892746157 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973455199 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.971665497 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.182196234 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194104934 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212967969 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971928057 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.976606442 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.775407765 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242486581 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025365258 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8962769 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.970462236 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013529486 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194899413 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98530286 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.483759128 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.66689699 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258776524 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.874596052 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985580008 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430521714 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35399819 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294706662 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.486371698 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19946404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.518830499 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.856898303 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349246716 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.971236415 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408916015 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.352589667 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.970475222 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.510189217 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086376184 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.230912328 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291854007 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.981244847 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.656613581 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.999485736 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182335463 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325968209 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900578178 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.971192573 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.014827261 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.970720916 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.979879095 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981023467 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.903703145 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444178841 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.813358051 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.529379301 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.973721176 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.978945549 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.257895201 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.547802801 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083502257 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987318972 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978747794 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.682758323 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.256049498 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.21400613 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.524869441 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.068790061 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.973685796 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970745023 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891223093 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.159007944 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.159934292 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252595219 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.37505705 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.08496436 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971826429 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.178725708 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175109732 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.299394388 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090782509 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.153050948 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091368994 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.909849095 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.677204079 seconds)
  done (took 1702.206897416 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.994689969 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.987123118 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.984561565 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.981816276 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.987569941 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.989559599 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.025470204 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.063343808 seconds)
  done (took 57.914661617 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.971155602 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.264640181 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.976358946 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.971823633 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.978204331 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.972973592 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.13516416 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.984690413 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.977153165 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.977781531 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.973631569 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.361889334 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.326960602 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.997525144 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.976492928 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.977493457 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.982174184 seconds)
  done (took 76.713088448 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.974886077 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.324888808 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.0038503 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.97549121 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.789221356 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.990603712 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.966921164 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.028011244 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.981267566 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.026417984 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.270550346 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.985451739 seconds)
  done (took 91.219764294 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.987460418 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.976190516 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.977041275 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.975528254 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.977175525 seconds)
  done (took 11.803532141 seconds)
done (took 2213.041266801 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.301108847 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.032485601 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.07509215 seconds)
  done (took 6.007269537 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.124226311 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.169256041 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.28126652 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.286501352 seconds)
  done (took 10.772388302 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.287858058 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.36071584 seconds)
  done (took 6.549502528 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.298595078 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.013815542 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.362857535 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.979492898 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.979984338 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.984356167 seconds)
  done (took 22.850735272 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.97716911 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.977118657 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.977850563 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.975954987 seconds)
  done (took 9.810773527 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.974132385 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.687066495 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.980420646 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.991136603 seconds)
  done (took 21.536846066 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.130551945 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.092389552 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.120837884 seconds)
  done (took 8.246968434 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.198610223 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.084538673 seconds)
  done (took 7.18701252 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.115308786 seconds)
  done (took 4.018712842 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.00605529 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.248387349 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.466698255 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.495824346 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.561940325 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.856728296 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.310065083 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.20538645 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.423192127 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.442320052 seconds)
  done (took 25.92144684 seconds)
done (took 138.78231546 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.320927247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.007846282 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.183133941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.332683865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.222459171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.181799087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.195727667 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.320130059 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.009463941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.997519521 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.336470867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.217732619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.143481819 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.996876715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.149778975 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.000192497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.211438135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.337406997 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.017916408 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.235280888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.209462088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.981764238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.178479033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.995694723 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.215266402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.135933535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.524814789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.004623543 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.156682273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.539067786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.139411465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.377696179 seconds)
  done (took 171.782569108 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.981191256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.982630748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.981938712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.982082839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.433170159 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.982652547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.981305801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.981973366 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.37740951 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.379306919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.983677137 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.434327609 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.982294021 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.98123447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.983234072 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.981041915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.534421253 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.983025469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.983000992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.982012716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.982788104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.258017736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.982939662 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.277186346 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.522576766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.984261863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.983989134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.98408269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.989278752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.982851342 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.983188009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.983715912 seconds)
  done (took 212.714766507 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.98344591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.98355988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.985204342 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.984060993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.985189535 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.986682479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.983643655 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.982977003 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.615620806 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.596281887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.984673794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.986438742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.984038016 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.985349487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.983911826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.982730479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.983525854 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.980517752 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.985705886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.985088271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.986321367 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.703407462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.984815186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.697471868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.985868639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.983170033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.989811044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.984877349 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.984276667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.985455795 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.98711183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.984446426 seconds)
  done (took 224.092864609 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.226721563 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.984014588 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.985079057 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.902531878 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.98613413 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.985541897 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.977109062 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.233422601 seconds)
  done (took 20.191656562 seconds)
done (took 630.695117707 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.33489163 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.180139868 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.161409903 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.009856959 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.254224911 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.053843942 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.00641806 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.069626018 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.854234563 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.088562365 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.672643285 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.02990287 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.768126053 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.035376404 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.132636032 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.063687624 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.559506018 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.655691813 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.148078856 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.068718058 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.180678424 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.92080397 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.09924675 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.890965877 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.690684066 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.972174304 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.047571141 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.565673131 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.018146326 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.163578004 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.633826533 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.280886086 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.026050888 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.004873843 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.06755393 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.04284666 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.23677049 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.023821248 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.131323056 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.71607516 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.090982472 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.756910205 seconds)
  done (took 107.620822994 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.998409167 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.994159685 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.993107504 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.993723467 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.001393943 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.992601666 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.99356621 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.992537191 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.992628245 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.992171698 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.992456501 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.001708278 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.993595127 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.001800349 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.992846499 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.993438022 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.994172112 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.000690395 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.994869119 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.993532506 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.993075147 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.994355191 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.989000215 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.993372771 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.99257364 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.992666011 seconds)
  done (took 53.784214079 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.989516075 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.140447724 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.233874104 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.009348604 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.988930711 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.993473506 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.009340969 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.994705096 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.992763254 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.991363271 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.080327871 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.994073318 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.007359069 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.232390571 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.006979384 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.989071522 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.990500395 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.991023574 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.149079369 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.006463701 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.010194302 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.998179011 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.009038509 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.004444612 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.994250597 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.991559775 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.994267524 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.491864768 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.001565873 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.083556317 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.037336581 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.015406416 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.433445864 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.245220908 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.046568438 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.003942089 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.98985966 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.086126111 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.998441818 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.992208393 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.009043006 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.995563674 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.23390537 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.515670412 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.004997219 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.990415216 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.495282495 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.094467863 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.033538163 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.002025931 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.236116681 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.009263417 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.991955941 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.993820765 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.030165245 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.998836456 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.995390424 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.350724292 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.003702889 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.011153608 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.997587812 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.991698684 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.155794531 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.002345218 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.145257775 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.002027701 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.998011424 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.994825401 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.239164748 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.010342839 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.529322831 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.013507592 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.993148948 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.08303503 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.15026043 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.529060745 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.006726986 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.15946737 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.457336747 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.022594869 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.005029269 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.478125724 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.024002909 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.003938551 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.99407698 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.993617033 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.992753545 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.037068299 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.007586809 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.435381728 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.528528779 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.366611054 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.022655019 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.012758913 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.997395377 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.348966335 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.002069733 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.993753089 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.230010657 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.537909641 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.008269172 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.001630706 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.505101635 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.010655609 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.012302163 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.003401109 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.246164068 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.011496884 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.038167409 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.99292039 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.999679369 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.997806573 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.01374922 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.001892698 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.99481499 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.496354709 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.103973547 seconds)
  done (took 247.063900546 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.990949202 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.992650277 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.990492982 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.992108324 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.990076558 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.991450223 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.992528001 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.990355555 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.991161719 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.990524136 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.989521762 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.993906533 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.99228403 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.992373505 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.99584838 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.99270451 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.593975328 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.990518681 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.99080843 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.992450773 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.630213255 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.994329251 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.992559389 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.991719598 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.992605675 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.994064607 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.993585231 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.995898341 seconds)
  done (took 170.944229921 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.992313487 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.104793034 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.016374251 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.021700554 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.999554785 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.992754826 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.092186717 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.016351876 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.999611037 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.991606915 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.991791273 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.053198869 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.005357749 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.092271038 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.031726062 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.100885878 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.104590736 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.005062693 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.993304575 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.993457035 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.021602215 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.002412517 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.054829216 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.118862953 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.016963244 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.106854483 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.012973648 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.994191737 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.994388679 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.106743439 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.016752348 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.05424376 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.02340407 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.012955971 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.112599096 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.113728663 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.103552717 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.104691945 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.004502086 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.994195491 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.993824716 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.996216306 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.108144925 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.014088048 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.995637466 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.112095434 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.018453838 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.995467067 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.994918654 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.995397925 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.008241871 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.013032002 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.061852292 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.124977268 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.030810638 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.01926778 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.094748146 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.122144954 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.996439076 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.09340335 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.007531808 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.109571894 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.021663908 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.998119782 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.998268981 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.999610453 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.025193464 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.10424209 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.107193752 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.009961938 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.094575802 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.038539558 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.004574869 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.99646831 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.997599652 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.110136897 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.119002774 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.036487824 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.033376889 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.027169377 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.006724382 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.997620494 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.997797243 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.01375094 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.001937419 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.111471725 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.119053318 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.007624049 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.99813999 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.99716006 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.997538216 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.022130445 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.118746952 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.038806189 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.103807979 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.068262669 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.074495429 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.011693649 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.012074016 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.002639938 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.059831106 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.011883463 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.009275386 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.287317298 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.058034686 seconds)
  done (took 216.246296397 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.366379217 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.047657073 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.05264231 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.306860956 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.359862063 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.903259825 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.043257534 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.044402871 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.071149465 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.233173606 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.118484248 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.064877676 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.033410495 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.021035523 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.048742406 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.066360387 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.054850908 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.387196579 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.248468795 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.214179501 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.037107876 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.311189789 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.371483204 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.608351503 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.09525401 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.434283549 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.628184574 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.198224882 seconds)
  done (took 65.299002312 seconds)
done (took 862.87160102 seconds)
SAVING RESULT...
DONE!
