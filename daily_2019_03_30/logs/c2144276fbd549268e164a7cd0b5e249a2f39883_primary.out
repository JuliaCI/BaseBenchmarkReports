cset: moving following pidspec: 17432
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.298013161 seconds)
loading group "string"... done (took 0.578039852 seconds)
loading group "linalg"... done (took 7.150872024 seconds)
loading group "parallel"... done (took 0.175132828 seconds)
loading group "find"... done (took 1.138954043 seconds)
loading group "tuple"... done (took 1.763712919 seconds)
loading group "dates"... done (took 1.224698714 seconds)
loading group "micro"... done (took 0.230846746 seconds)
loading group "io"... done (took 1.024824409 seconds)
loading group "scalar"... done (took 40.236805211 seconds)
loading group "sparse"... done (took 13.271236183 seconds)
loading group "broadcast"... done (took 0.98942285 seconds)
loading group "union"... done (took 14.057065919 seconds)
loading group "simd"... done (took 4.513570314 seconds)
loading group "random"... done (took 9.221821057 seconds)
loading group "problem"... done (took 1.986574668 seconds)
loading group "array"... done (took 21.667245541 seconds)
loading group "misc"... done (took 1.97772585 seconds)
loading group "sort"... done (took 3.276113917 seconds)
loading group "collection"... done (took 18.203363194 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.550992735 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145152134 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118312024 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141333262 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190525772 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1332058 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144328809 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085829904 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.106700958 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163593727 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141663481 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.479697781 seconds)
done (took 5.267889402 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.207049438 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086757121 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098106907 seconds)
  done (took 0.991696877 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066647799 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127802654 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082648839 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069092445 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067507584 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083347226 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068322047 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066536075 seconds)
  done (took 1.378778414 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074901114 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06962687 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086741008 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068419256 seconds)
  done (took 1.113617592 seconds)
done (took 4.580767098 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.906160346 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237782889 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19088504 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453912317 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149720725 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190240185 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659575373 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.334139052 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211540759 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103048342 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107148376 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.382669616 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107979195 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673694036 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076797113 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10733877 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162250228 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426896766 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084303879 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083836933 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10497272 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143089539 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102836692 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078136573 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170071621 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070895964 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148951467 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09726801 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069794095 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244867391 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191484819 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680942784 seconds)
  done (took 10.605634353 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098722236 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119393682 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070284687 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142086581 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103150098 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088814283 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072709081 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084783872 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092949548 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160907512 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117080573 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106738749 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08403168 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072001655 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103697041 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211769188 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109151864 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086336185 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089283182 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076837552 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12410698 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083398746 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096313399 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079181691 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154108173 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197208564 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.117179107 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113841469 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070855628 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081457123 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134102119 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143543645 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070383047 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084951174 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141600663 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112910905 seconds)
  done (took 4.724733356 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.071855198 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.162173612 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093722703 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154615763 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087432683 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110689038 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085215348 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101838466 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247623971 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.083266777 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.462499449 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131182475 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104315471 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069232089 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086942825 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069128377 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.53107669 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146326926 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102863578 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104016652 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091139493 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072673191 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374393251 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069002842 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067194129 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085598982 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060451304 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145548977 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069092871 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.222460355 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088226228 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089431335 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11985322 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185364466 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.102911724 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09483332 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12663253 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067031787 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086061293 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170437091 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075042971 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067109908 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107935421 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119835497 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106095974 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085952411 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069183135 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182411377 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067891093 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101866902 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.899014479 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169722717 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096339989 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068723289 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294861774 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085165266 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085264161 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066040505 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280334152 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.156309421 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068116706 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085408298 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06779181 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068481368 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399187107 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071011501 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.730922071 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072808921 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078990864 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087983211 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067909742 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091065397 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074375967 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102211351 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068286779 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068582996 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085549183 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06700751 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086031574 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08646998 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206724117 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085457528 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069067375 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068056037 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104321634 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112581801 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071267606 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066948869 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11808255 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110353473 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06967967 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068050497 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122143915 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068305888 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104449123 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065255225 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087445971 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130468649 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069270532 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.146173927 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070216986 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114072966 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073763199 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116372659 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096383205 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069942965 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156145296 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065849047 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082771275 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065571674 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064981669 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085316988 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068438543 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085629345 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082400479 seconds)
  done (took 21.253503864 seconds)
done (took 38.469330365 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.29319404 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094855106 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094230184 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076632504 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095220495 seconds)
  done (took 1.545150879 seconds)
done (took 2.409749634 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120584737 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120431988 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064722876 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115739424 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065029354 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121722763 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11671939 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081369307 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118838587 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065148624 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114161137 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06557698 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064163605 seconds)
  done (took 2.124014761 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08445151 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086528385 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088597982 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082830114 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081421385 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083638201 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080911805 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108285238 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081394296 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091828287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066281636 seconds)
  done (took 1.792665169 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084588381 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084669859 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087918924 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08297237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080993986 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083321403 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081189748 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10490477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082913877 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092371316 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065586804 seconds)
  done (took 1.789563053 seconds)
done (took 6.557934864 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080115473 seconds)
  done (took 0.933352461 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.71555641 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.715846475 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085233018 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135544306 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.22347264 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.156367041 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.448674357 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111329729 seconds)
  done (took 10.627795717 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102625935 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088806791 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073332441 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088689712 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071078199 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090738247 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075086892 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071598871 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091351168 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070059933 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090764082 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072086467 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088164454 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073586645 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07266945 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087431091 seconds)
  done (took 2.225486195 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094661247 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095360833 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093880523 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077638795 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092265052 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075379843 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094226095 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076942828 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09054791 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075389899 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093888769 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076544702 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091814461 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067652694 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093639528 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07842115 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090515115 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076918823 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094449281 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078320098 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094910831 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067225198 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090521824 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077201 seconds)
  done (took 3.001757031 seconds)
done (took 17.647930525 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133693536 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077905967 seconds)
  done (took 1.068790383 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084000368 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100393941 seconds)
  done (took 1.048871865 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085612553 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083777092 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091512226 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098020328 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066909393 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.085173224 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105800205 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06899314 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066756835 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086258897 seconds)
  done (took 1.702736543 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071495584 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095660826 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073263903 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100301805 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076329463 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083683054 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075701993 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086452215 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08101955 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08193992 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073694609 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102173621 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073137279 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104337263 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074700119 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088167603 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089456437 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070749285 seconds)
  done (took 2.367160159 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069708891 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068592707 seconds)
  done (took 1.003558871 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070579877 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064921407 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08597004 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068594677 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083053704 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065573348 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08239327 seconds)
  done (took 1.387177578 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405049384 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109388036 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.244645895 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091635869 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105557641 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.266522988 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.086845849 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073261848 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09116133 seconds)
  done (took 2.376912357 seconds)
done (took 11.818748911 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082408737 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087378955 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113898747 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.428313603 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111677435 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069364074 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133586738 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227510964 seconds)
done (took 2.120330252 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128483013 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.626174305 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.408247617 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216037799 seconds)
  done (took 2.121488475 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.388686177 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092426424 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076263132 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07046225 seconds)
  done (took 1.501663682 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069354713 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071330559 seconds)
  done (took 1.012299144 seconds)
done (took 5.634966834 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069495854 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103209312 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06880303 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067428618 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.084728064 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068718752 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065170032 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084928789 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068731696 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06682953 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083108789 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067900747 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083934332 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.069067172 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068391164 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082113989 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066410936 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06728162 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082877309 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066301766 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065492222 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085600132 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066190995 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065175363 seconds)
  done (took 2.675592571 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088174227 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085833747 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075309973 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089719132 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07293518 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072694961 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092380213 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067894865 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090727734 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070372636 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089155532 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072058028 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087213196 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072637081 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087115884 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073473801 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09005193 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071506878 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070496696 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0905547 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073091873 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086681202 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071723512 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090811381 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072587962 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089465369 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070528236 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085837817 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075203645 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071336443 seconds)
  done (took 3.273628057 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073401816 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065118191 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084350796 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073266186 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065126048 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085217742 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065999384 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083183584 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068333959 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06611865 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084939571 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067171633 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065020185 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08482379 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066705455 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068740276 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101427224 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065731401 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084332969 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067691677 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068621584 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084153976 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066046439 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083318494 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066864319 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065137834 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08290959 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066724242 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065894328 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083835477 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069165987 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068313196 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083549273 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071939675 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085847844 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066360074 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06950308 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082623497 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067404172 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065063153 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082960622 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065945197 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064950136 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090431259 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065863579 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084623032 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066228002 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06717223 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083894946 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069445636 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065257002 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.084474351 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067358834 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084068166 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070114827 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065344608 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084843128 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065745276 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065693108 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.083311295 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065689859 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082794718 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068611978 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066166048 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098978632 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072388172 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065162628 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085794008 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066993595 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085229318 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067659647 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079050465 seconds)
  done (took 6.212254876 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120009329 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092242133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085701609 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067375639 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081550139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067993899 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068553467 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083629479 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068155715 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089329854 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066883699 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067300334 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085263534 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078350185 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083396999 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068663848 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088655543 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064845434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065716592 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087261064 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066623872 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086470106 seconds)
  done (took 2.618732688 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189869797 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089639389 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110854262 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09421454 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068702422 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094504027 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070697733 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09082454 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071495781 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090675327 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070370363 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089650802 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06971584 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088264577 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070473337 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088382783 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072179488 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087329975 seconds)
  done (took 2.491991984 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081493724 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06782121 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109720415 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067845207 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086807317 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070279065 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091763557 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076467628 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088356841 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068659901 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094313006 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070985092 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087384418 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069150801 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070568041 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086041158 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070195903 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085455553 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076578353 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090215977 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073671662 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093820193 seconds)
  done (took 2.663552969 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084294317 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069098133 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103984524 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087210978 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065884849 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066322974 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092662004 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06823295 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091009575 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071310984 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067652737 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084823131 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072160868 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085647325 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072927236 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086286665 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070663401 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067604262 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087475587 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064291903 seconds)
  done (took 2.446062946 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089332987 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08652674 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070646578 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095127414 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070361399 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086989974 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07995955 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086668707 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070535843 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112697378 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069662786 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087353987 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079282048 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092972575 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069639898 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095473352 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077560162 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096123935 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069256992 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087189374 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217300415 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070802275 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094042868 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070614011 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069231957 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088199296 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069504846 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09281019 seconds)
  done (took 3.337293932 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06950441 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067651138 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083121871 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066764644 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065853041 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08378097 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067081076 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065627506 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087029484 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06701735 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067817167 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086336508 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068892461 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085352416 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069659758 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067712474 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085740606 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066732511 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06634872 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083631594 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068709805 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067242525 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085920707 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065825942 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065181632 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086651877 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065621817 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083043164 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069627314 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065381415 seconds)
  done (took 3.084330492 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078990506 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092483492 seconds)
  done (took 1.064968911 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06782187 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082084489 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084697505 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072441263 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089991162 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069213534 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094212137 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07365421 seconds)
  done (took 1.526440657 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083865735 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078647077 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08864025 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078847195 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097408927 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083906317 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158121325 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087747931 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075035993 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083492547 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082802669 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066834717 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092603198 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068429653 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091440452 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075182507 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066465677 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.0919289 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070549072 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085289022 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070889776 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096712574 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071215356 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06520506 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08803657 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076721565 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097218856 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06962945 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08890419 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076093261 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072996124 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.080967433 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068102246 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086775352 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067171459 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077824495 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101686351 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070308875 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095576466 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068586197 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096325931 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063837145 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091172404 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074102861 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095029655 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069739495 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06892452 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.082764728 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06603293 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088243576 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065379414 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068006154 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081883694 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075625628 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088967088 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079538872 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067057936 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088077805 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070853319 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08958381 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075818391 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069624298 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089600598 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068061376 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096964246 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07267122 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094837989 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064684144 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062470837 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085517771 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077156386 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108764919 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074226161 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087591251 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071297877 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066005297 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090099634 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069925903 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092223662 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075293471 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086122614 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074654641 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093074827 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06928808 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070640422 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094983255 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06650613 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08927984 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067276462 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1022164 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068666788 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06674061 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084337802 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078046316 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089635695 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069213379 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06611844 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093878264 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063201258 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087241587 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070014786 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06819302 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097168131 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072289925 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092865586 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075964446 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094314869 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067934623 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089465777 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066611904 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068613032 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086458756 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074783524 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081157089 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07183738 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06867824 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087737164 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075710779 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085134526 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06876863 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093318103 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074639498 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067695295 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084087685 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071711272 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086070879 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072602708 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093020186 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068692507 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064387088 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082161097 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072640788 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067884266 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091509378 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073168051 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09047938 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063453038 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084115522 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074183928 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095008413 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069995162 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06847882 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092592975 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069996488 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085171513 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075030761 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070407142 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08573367 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073515855 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087728771 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064804896 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072093529 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089712215 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06716109 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089835953 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072554956 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087764532 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070935313 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066789368 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.092283986 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06889342 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085123047 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069882282 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066970672 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097012234 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069852827 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082531231 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066303936 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092011055 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067506916 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068006979 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085345001 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071370158 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068329735 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085100116 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067877369 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087863736 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080468905 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091024407 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070089676 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091380861 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080016869 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067727298 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08910331 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069038048 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087685529 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070369341 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094320991 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074806498 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07358827 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089938978 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065278986 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092218634 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075862246 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066202507 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084740923 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067841641 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08994352 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073907704 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089120393 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070821267 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066415532 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08718614 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072143759 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089033213 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068661874 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067153889 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091970122 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068187504 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093507764 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069068035 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096472447 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072044903 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063610517 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090936251 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066398347 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092417571 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063981043 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065253676 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086843812 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068809532 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086074551 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07139457 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062039979 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094065237 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074819724 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087107687 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067950917 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067777032 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094319665 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068786136 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090234358 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071762616 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092305771 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079260267 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067200838 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090686978 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078239883 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087018325 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063457575 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091279956 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068830939 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067541965 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086676533 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067141663 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0883437 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078368083 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092426031 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064378986 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07076896 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085751754 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067600001 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064036289 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093156558 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070902975 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087208514 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075331879 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069033841 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088288735 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071112383 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087286774 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069314862 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087630115 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072873551 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068628193 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089681098 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068334113 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089226526 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069071665 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066774911 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089217914 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068779004 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086601206 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074998455 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067504403 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087596492 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071109611 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087923629 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069509748 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0684715 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087094832 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071340916 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087290363 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069564545 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07078287 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082558826 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075614061 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086370292 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07721441 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067804672 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084287685 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073564414 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089015256 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073778187 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087313159 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070172603 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06925147 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087878887 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070490952 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09272521 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06707187 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077969622 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094891539 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068888147 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090008027 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068496484 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087639865 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068915671 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069188083 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087662082 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068335505 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085517629 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074206211 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070150385 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087485402 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0704544 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087145582 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069692707 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069219293 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082400152 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068289897 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067268077 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087742509 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076721846 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088916876 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067707819 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08594534 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070571948 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067237427 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084413998 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075666166 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096813887 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068918396 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093684906 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067739499 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086777837 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080017743 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065488826 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086186712 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066990371 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065544172 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095157968 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069013955 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096608777 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069071036 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085711911 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067286376 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069726576 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.087139675 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063685604 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066075515 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091573682 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067754321 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087215323 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070194148 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070652624 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088579131 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076913689 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086572832 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068805816 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087709685 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06673081 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067330178 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086320689 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071907106 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08796486 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067533711 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065970488 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087424656 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070183524 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068784919 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087332547 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070218345 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093728945 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068486305 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070911446 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091102421 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064391413 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089868456 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069006717 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086223209 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068672281 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070976736 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090584545 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069966875 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095608451 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069378303 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068388496 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088572533 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066567231 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086701053 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069091492 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067363796 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086850809 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070191057 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094694659 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066277776 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07031402 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088058162 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068452311 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094281682 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069502989 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089413985 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077264337 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068756382 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08957293 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076100218 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09161303 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071858724 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089109065 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071029995 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073407888 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087087608 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075283401 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087770704 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070310014 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069398723 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085557143 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068935348 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087247685 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068349539 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073121062 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088701002 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067815741 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086861979 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067651799 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068890485 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091079465 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075433679 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089562565 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071715428 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081651985 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06745033 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069263313 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085244044 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070583631 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070294875 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093047333 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069660945 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087484205 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068976445 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095130565 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075129227 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071570729 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085321688 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071906394 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088383349 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071121761 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06834754 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087895615 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070364119 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090943937 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070227781 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067275397 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095508578 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070505805 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088955385 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069820379 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086434881 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070705328 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064381147 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087987048 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071020178 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091884233 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072116052 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069088655 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097881236 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065342671 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.0873641 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07312113 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067562376 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09184993 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064229414 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088406232 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070170542 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069339778 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083808621 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068053981 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084482312 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071425054 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066348076 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083574194 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078644723 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096671739 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07180758 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085896187 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068949783 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064097105 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083842983 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068765439 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069419473 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090152298 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077813339 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087507985 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06810877 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063504372 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088120307 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071128404 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090808694 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06655698 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063254188 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087154523 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07118889 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092503531 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068398328 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067320909 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091039884 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069569729 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086019424 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072727594 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064668845 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091928027 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079629698 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08884238 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068644596 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093284877 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076206778 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088291268 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06479424 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068663959 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090856613 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06862632 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087716556 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069744975 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101752671 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072225122 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067100253 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087549236 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070847403 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086602617 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.0763651 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069313317 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08919265 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072539905 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089057419 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077441814 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089780471 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076294474 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089474155 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072284751 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06831349 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088611085 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067681022 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066692629 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090104037 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069946633 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093223733 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075855489 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087901688 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079296498 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096999061 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071297381 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065042835 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087475886 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068404363 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08265614 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070352266 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067527628 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086765718 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068532171 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066552482 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08959631 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073400662 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089461416 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070025147 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085855439 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064814872 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069936821 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089601702 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069868623 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064805496 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089101427 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070129714 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091071641 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072263615 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065445277 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089038199 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069508661 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087568468 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064715372 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073924161 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087102424 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071011442 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086370314 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070148833 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068774077 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091170237 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073121578 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08933572 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071018018 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095104776 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071930912 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065838906 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08577607 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07297628 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085180684 seconds)
  done (took 47.554236006 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10942862 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085642088 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063827508 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083126168 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076539502 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085083451 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065393172 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064626406 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084839705 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067009021 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08332546 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064280583 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091178009 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088510742 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096381843 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068459108 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083893195 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065098883 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08369672 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06613356 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091763575 seconds)
  done (took 2.605613681 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07774052 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092088807 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075758609 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097709292 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069576182 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092880866 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074507673 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092284885 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096614337 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07131458 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097875406 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074006375 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087777134 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07008934 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088031544 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073819501 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09793553 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070513503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091343675 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075272395 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092540817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074744064 seconds)
  done (took 2.771599214 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069651663 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067119847 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088168934 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0642113 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067454478 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.08309858 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072498712 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.092671169 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072027577 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066014925 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086575159 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066837258 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087525609 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067742945 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06702821 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085436713 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132354377 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07204616 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066988278 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089299325 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063476259 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089688502 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06459826 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063624856 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.086689177 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071951002 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088484378 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066860416 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067424286 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08695801 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068257955 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065069151 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089163479 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068904971 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086088578 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067494799 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067419524 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087397812 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064213168 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065772119 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088390584 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064475566 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088022141 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069556457 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066104264 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.086345976 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069368911 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086782207 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065033451 seconds)
  done (took 4.671162862 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087003999 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13267876 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09094239 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090865912 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104990422 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096149049 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072762968 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114256939 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066341137 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087901343 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084541221 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103730294 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087978357 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074461645 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093622253 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070059047 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069098493 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087506974 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072559141 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087567327 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071037313 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094611817 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100878983 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082946812 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091437893 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068025412 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085864214 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072775437 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100894832 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072444173 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093280093 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073290513 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.103523248 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073400842 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087297952 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070176689 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104604597 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067811153 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090686703 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065650048 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.0896606 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072627644 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094420364 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083799876 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088898081 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073262241 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088727927 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065698365 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100783419 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069935969 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096016173 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103186394 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073419998 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068160735 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093337547 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102936775 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068920786 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084992468 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072636296 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10007901 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066481586 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071087676 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102398435 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089285889 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076072505 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102070854 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073245541 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091676525 seconds)
  done (took 6.87446925 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077616496 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093605538 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08308578 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103929253 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093746936 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075976389 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094246089 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075336043 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094567707 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079667809 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094203225 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114752625 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070730121 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097295087 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075091226 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094812266 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075395015 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095251048 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074680294 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094859322 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093811777 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083554914 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094594758 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082153704 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124887277 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089170301 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075155134 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094868014 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082347856 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095335595 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105516646 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074952386 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093965753 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082271348 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.10636243 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093957437 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067765685 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093680327 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075563394 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093817977 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070299203 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102917609 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073933002 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089908104 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073882611 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095029974 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10148926 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086543423 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098024217 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099164733 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076552037 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101718019 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074301975 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095196372 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101934107 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108357416 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102860294 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102015788 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075179243 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102831452 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1021534 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090571167 seconds)
  done (took 6.534284594 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089986744 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097303705 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078396172 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085140596 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06613587 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092740301 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06612379 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084959128 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078336183 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096541016 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079781648 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092021304 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074706892 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099504754 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092031063 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077527126 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092151522 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073101621 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096483649 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071796149 seconds)
  done (took 2.639597491 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078808667 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104877456 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070705126 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073790364 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092277356 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073978659 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092314005 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071153831 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090024355 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072234093 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099087042 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078456566 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08968531 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074920593 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098278558 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074396553 seconds)
  done (took 2.290708573 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081591944 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100047116 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083170571 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089262975 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066299521 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085264269 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068976609 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063948087 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085958456 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082128546 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089697819 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071635082 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088564072 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067349049 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064605892 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092053416 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064459645 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086561963 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068781237 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102380984 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079896559 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087100443 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070993992 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068600045 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090165297 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072811613 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089644193 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065655297 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087483355 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068950447 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088264275 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076274063 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084023561 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068415742 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06655729 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085778177 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068263781 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087942839 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072790096 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067476541 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08788947 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068440831 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088617753 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069815785 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084228405 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070993483 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064578105 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094573574 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066032554 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088660052 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068695796 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089499884 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071133031 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078080834 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092662235 seconds)
  done (took 5.292968809 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083053561 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070653801 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08540792 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065893672 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090754457 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071387312 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070992941 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090890381 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0694902 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086598539 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070705707 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090323901 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071366577 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070917895 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090282314 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071308593 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084156638 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071647206 seconds)
  done (took 2.366136961 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074972872 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067625448 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096417014 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068165142 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087611564 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071543296 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064271156 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087808076 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067063069 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087677834 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069043887 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069568739 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086876239 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071170695 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087614317 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069077523 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069247749 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087447648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068603913 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08306863 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071813435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066527073 seconds)
  done (took 2.634759737 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074128734 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09409427 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164724792 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110226769 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083426236 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101700271 seconds)
  done (took 1.591942173 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093005744 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101683501 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069385166 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10898056 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077311222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090160388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071182344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089737062 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079584509 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103760598 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069950846 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099325669 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098105176 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080990039 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095650455 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075688629 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09071167 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070411859 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090188514 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08702909 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091137173 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098744218 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072094197 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089770066 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071351518 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098505145 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079596819 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10426826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090303026 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079412609 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096750731 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070511473 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099628742 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102559497 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073768888 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099073466 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071697223 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108417832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075683502 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098498823 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070477139 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096711338 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097998801 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0760993 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098379121 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069843892 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095975991 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069720992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091067544 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11529355 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076509073 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098077853 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075808275 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099862992 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098812883 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115406223 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083959024 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098491642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075895577 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104203226 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099293403 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075166316 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098636221 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103972777 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076504248 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098936737 seconds)
  done (took 6.838342723 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08432836 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108140158 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071006112 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10520387 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097668668 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071370428 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089704839 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07280525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089627011 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07155883 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131452398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070700672 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098232782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098492196 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07044926 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089953452 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071080716 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098126022 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069938649 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115410207 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089912149 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079325903 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09900241 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098258026 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085191606 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096257054 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069768165 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091308697 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069763983 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090796596 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075220571 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091460957 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097667544 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070406619 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098274342 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071215884 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090042342 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075942505 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090747406 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075945268 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099351809 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108654784 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070791406 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089727515 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083788281 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091034615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070156308 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09044341 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069891797 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089534666 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082861356 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103794852 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103860926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077268208 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09168973 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070078935 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091473949 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06956945 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091309724 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094379856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079154115 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090093002 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1143692 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07090899 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090138202 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078976347 seconds)
  done (took 6.711168466 seconds)
done (took 133.64459451 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215384143 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197863026 seconds)
  done (took 1.37598073 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071595838 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095764263 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100780925 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129172815 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089373583 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101284315 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119661035 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080201391 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06704061 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088843773 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067899181 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089131688 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133855529 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067503192 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088707596 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070444856 seconds)
  done (took 2.432688984 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104231087 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196765948 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11074977 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066762816 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101762444 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079309689 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087106372 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078747804 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093094801 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067770751 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079054621 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097772713 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066448124 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097336293 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072529842 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100738742 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06644112 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100494043 seconds)
  done (took 2.641426836 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106330764 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151123001 seconds)
  done (took 1.226749875 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.202657395 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126417976 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206469403 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.420535059 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.210925288 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.28307911 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178504408 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177470329 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166363402 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17512972 seconds)
  done (took 3.116031904 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100991431 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172338354 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314947638 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138986456 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088549903 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117235629 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140535703 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.109237363 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084284105 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102643573 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08169658 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099491441 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11924263 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07753795 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07531601 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100287931 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122296872 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076111369 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09921046 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077796632 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119717209 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068682374 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09577025 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077355632 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097602907 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080854643 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067437213 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088845144 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07612453 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097871781 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080185532 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115889546 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100062709 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133208851 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083628846 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.152481789 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080214086 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073169295 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097769751 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073449027 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099210737 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078585494 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106188086 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.0976329 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068335685 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078367006 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088670435 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068467609 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101553288 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078662487 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101743971 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078850035 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131669369 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099822538 seconds)
  done (took 6.405245896 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.746131753 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110306398 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096271266 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.800909654 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089038086 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106338119 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.70340294 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117877368 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20689744 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757362718 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089783816 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098775844 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180205917 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213795473 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.000193645 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285553668 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632287939 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.080816928 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133061807 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131536874 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13885052 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17319933 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148101458 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407772718 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075561946 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092943784 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137644108 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075493955 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138635852 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104865378 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098743 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153538664 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.227323795 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153155007 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097299013 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070519386 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091358028 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148054457 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215345773 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188125132 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158705762 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068501093 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090977774 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138779242 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12977414 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068857609 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138382561 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151122396 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166959151 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07398671 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095818628 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141185241 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138350979 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141378179 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10194431 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.272701438 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281112899 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070909008 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12065215 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103963585 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209459007 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104613744 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.196693358 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138227374 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165388491 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091313129 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.739045919 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144926201 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092248566 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075504948 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119918346 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09453834 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138011398 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144390341 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.348336956 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16190213 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074147372 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089811992 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197367037 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083036991 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092388537 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140389997 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075305705 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121421571 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163348701 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144536448 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145918001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.211231232 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141465163 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.158932355 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075806673 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1247246 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07497139 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209152108 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171402446 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139937237 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.184229104 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.159802926 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139658867 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146319422 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076111662 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.1699844 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098621078 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101884371 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137190662 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189873446 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122521976 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082818608 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094995798 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141060081 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126450613 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084926866 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.159727277 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149590804 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.430547272 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146636729 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088577026 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086934298 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138007473 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139374907 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097352276 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209535363 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12312118 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16647054 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101186965 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089955489 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120705294 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140433529 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078609559 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121358161 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156072878 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078774817 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211393395 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189441992 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077960783 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212407631 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.139153237 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096830417 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147338755 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121063533 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144801937 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097832382 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138367971 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076230214 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747536563 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142242316 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121839248 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074113973 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166847464 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092128702 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083344917 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104436079 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068706901 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.746587321 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085971805 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102060421 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082637195 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096949357 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121791089 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136537084 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072842476 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158834645 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.178916939 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097146153 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119955332 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082905942 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139185511 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097539714 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082926689 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105314052 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104407222 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12333646 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075403141 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103235486 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14651936 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140416401 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.188449006 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542683486 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071116279 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10486239 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198518382 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071777438 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.2591798 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137205411 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.176152357 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162407419 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080876062 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.278003683 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142358366 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.166407377 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085913483 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150876867 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091261196 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137838233 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.14127353 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091868611 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076648425 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140098427 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14367633 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.164767733 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.909084881 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093188264 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20190047 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068215677 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148139949 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097620192 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076372707 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.26711811 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070895786 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.166985507 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142108632 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073215968 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105434936 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.666097154 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104784075 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139390653 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094113187 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17311868 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141246992 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136152369 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.159949071 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076782234 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138490327 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.18375246 seconds)
  done (took 40.331266522 seconds)
done (took 58.500251187 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261690561 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.18232377 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.247597298 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145630008 seconds)
  done (took 1.907103053 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14691572 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105807919 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120047718 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087654955 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104375265 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088760595 seconds)
  done (took 1.647731269 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.406679208 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264366392 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230943525 seconds)
  done (took 1.896426219 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262956269 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214415056 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.453150955 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299524927 seconds)
  done (took 2.355035986 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176242978 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115152273 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068726118 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109018741 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160048987 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255639629 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128220895 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186156665 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081301926 seconds)
  done (took 2.324638587 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197145642 seconds)
done (took 11.326349688 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.193853326 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.136380428 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.128589475 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.083251473 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.177790324 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125391416 seconds)
    (7/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108613409 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103774888 seconds)
    (9/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.318051769 seconds)
    (10/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.234903407 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085878775 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.229968715 seconds)
    (13/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.137692396 seconds)
    (14/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.195908361 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079247213 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.261516248 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07947062 seconds)
    (18/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.179127813 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100238247 seconds)
    (20/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101148071 seconds)
    (21/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081275017 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.17864119 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118614387 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.216357083 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.12105576 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.261026823 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118500413 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191877935 seconds)
    (29/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.164026494 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099801373 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068530821 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07327103 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.182123009 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096937233 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.112574887 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.134349568 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.276505289 seconds)
    (38/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111099055 seconds)
    (39/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.102042875 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11288909 seconds)
    (41/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.101550939 seconds)
    (42/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137052572 seconds)
    (43/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064004463 seconds)
    (44/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05447133 seconds)
    (45/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.25135979 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09803398 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095092216 seconds)
    (48/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117036789 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07649844 seconds)
    (50/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105842161 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.282393271 seconds)
    (52/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.262619314 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055756566 seconds)
    (54/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.241416327 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070533358 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.282172478 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132753941 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055411631 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11294368 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074366585 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.168914634 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066461344 seconds)
    (63/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074414508 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.100643346 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076474661 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093081308 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069073903 seconds)
    (68/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.165241878 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077998479 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.0671033 seconds)
    (71/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164268882 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089246194 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076681163 seconds)
    (74/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116474858 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.069665079 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094342324 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171784168 seconds)
    (78/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.1339513 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09027528 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159466774 seconds)
    (81/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106500129 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.063156484 seconds)
    (83/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124437098 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075485952 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091460241 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068845709 seconds)
    (87/309) benchmarking ("sort", Int8, false)...
    done (took 0.165803585 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.260711794 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087226909 seconds)
    (90/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.173499292 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107410337 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.250222787 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054797129 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068893514 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.251196908 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194321391 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150640617 seconds)
    (98/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112038665 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079658229 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09170637 seconds)
    (101/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.120804179 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087607488 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095227554 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.277363079 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0747105 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130942805 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078204104 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161137406 seconds)
    (109/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063865988 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171976217 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.168242918 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.113868035 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.10310541 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078802653 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202129679 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077801642 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09718132 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086395638 seconds)
    (119/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.24983933 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098018166 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055484307 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.272259706 seconds)
    (123/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.180299932 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.055578371 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078551198 seconds)
    (126/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054146598 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.159040107 seconds)
    (128/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101627366 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076959479 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.260060176 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125672835 seconds)
    (132/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.077509245 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075869194 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089058525 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05519338 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074167145 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088598575 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077088466 seconds)
    (139/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074198788 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075167076 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081945325 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08862716 seconds)
    (143/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099156862 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.244410067 seconds)
    (145/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082975953 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073892251 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.10004757 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083122937 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.095200527 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071938558 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089983153 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090312672 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075833716 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099192609 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068741348 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053417905 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117382042 seconds)
    (158/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055110487 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.134728576 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06812513 seconds)
    (161/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069781488 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09557232 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071685107 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167010746 seconds)
    (165/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067080685 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076110177 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092370311 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108374945 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078044096 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096475931 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088637733 seconds)
    (172/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.116622874 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.159482069 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070417828 seconds)
    (175/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.122890821 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.218155655 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107506786 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054035838 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.160113878 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072174922 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.091929358 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053800592 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195027929 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.240754562 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100206963 seconds)
    (186/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.344876604 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067876007 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054643603 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098512999 seconds)
    (190/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076061696 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096600601 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070483453 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.138040004 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.218878199 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094708046 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078877868 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112865076 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088589073 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100095256 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055218928 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067115836 seconds)
    (202/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091682326 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074382627 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053378366 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095201071 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067870528 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069188396 seconds)
    (208/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097200509 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075978238 seconds)
    (210/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097948952 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068784823 seconds)
    (212/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118007123 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08971992 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06743081 seconds)
    (215/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053560507 seconds)
    (216/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092427898 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06845844 seconds)
    (218/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063218691 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098998198 seconds)
    (220/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.236397185 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093928011 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201590078 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05397227 seconds)
    (224/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054149234 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100938952 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075350877 seconds)
    (227/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054074357 seconds)
    (228/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.104857605 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067154147 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07636976 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075289015 seconds)
    (232/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074587205 seconds)
    (233/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.085026654 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054867904 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074247201 seconds)
    (236/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054055587 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.076999251 seconds)
    (238/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07236221 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065488353 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.240120072 seconds)
    (241/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052855498 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078430358 seconds)
    (243/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209913972 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055615297 seconds)
    (245/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077567819 seconds)
    (246/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054350138 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140149647 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.259239533 seconds)
    (249/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07567552 seconds)
    (250/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071264395 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.103896219 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119268731 seconds)
    (253/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077245081 seconds)
    (254/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.086049464 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070433639 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053327022 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195293181 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067686394 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078100637 seconds)
    (260/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055415189 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053534388 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117832381 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067697683 seconds)
    (264/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120575226 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074818602 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055337334 seconds)
    (267/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194349805 seconds)
    (268/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070235331 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099661289 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087105425 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076946259 seconds)
    (272/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08538754 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.114167365 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068636909 seconds)
    (275/309) benchmarking ("sort", Float64, false)...
    done (took 0.125960517 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148388753 seconds)
    (277/309) benchmarking ("sort", Float32, false)...
    done (took 0.151557125 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06767784 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191005187 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074743149 seconds)
    (281/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.087888684 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091906221 seconds)
    (283/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062422754 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.103254012 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074577967 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090834774 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067630042 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065996834 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.078500064 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054338115 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075550879 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076323363 seconds)
    (293/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054706465 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068756289 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064150884 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077561129 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073591802 seconds)
    (298/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064680717 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078081357 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068765613 seconds)
    (301/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053209735 seconds)
    (302/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079309254 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074197391 seconds)
    (304/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074236245 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114626012 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053876666 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054968113 seconds)
    (308/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076548768 seconds)
    (309/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054689196 seconds)
  done (took 35.465391211 seconds)
done (took 36.473288724 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084032969 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115614184 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07807439 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117476492 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083904057 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101648962 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076383722 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080132675 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106106073 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083921472 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105541232 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056648245 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100287514 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077003602 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100038519 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0937653 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10331122 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075678405 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074581707 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.090288428 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075552441 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090653587 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070277233 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05663487 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102508686 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075592664 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073192246 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.100266757 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066907663 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090062531 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071726931 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07395498 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090625407 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080341829 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095682888 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075860896 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075937845 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102141892 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.0696166 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089389311 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07633429 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067332292 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096961887 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075712698 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072509197 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096652399 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074806314 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104334584 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092311384 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092384494 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076283904 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077756084 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102484252 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073786484 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094979936 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075640092 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071941442 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116750856 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075601466 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094763942 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07545132 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099850395 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073343853 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075080221 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.099658864 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076725731 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101499579 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073543438 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099376383 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075152858 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06726597 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098827407 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071436404 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066880615 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.101276714 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078779107 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089192915 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074977257 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074365229 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096647058 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067992541 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068790991 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.093259844 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075149556 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091038629 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057662231 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071741864 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095555839 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06880992 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07588473 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097106364 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075176472 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068871926 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102124997 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067324616 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095424218 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069277331 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067462388 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092945998 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072518077 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067137071 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093478149 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076759177 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069359512 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097700428 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080275371 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091208151 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073773569 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066678161 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091193209 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083262457 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100698466 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068349333 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069015496 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091135063 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07479688 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090206336 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069168826 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067346662 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090924963 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074044874 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067015741 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093100263 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075444237 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080958667 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.09408433 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071102899 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092213171 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068122014 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072831173 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090600449 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068484205 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069086949 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088923857 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070083109 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06673647 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099415008 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069700805 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098342461 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070593529 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075398613 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096277038 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073959777 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072160335 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091450915 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060762688 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069373346 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094195088 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06958056 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089995775 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070725797 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068011704 seconds)
done (took 13.570728887 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069280419 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170494699 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127240111 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097201898 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112479386 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067587094 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102636705 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105586657 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.094201297 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12833642 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089839625 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108530714 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116084226 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090696376 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06865363 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071429863 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093972681 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089245848 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127752027 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086896616 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142227422 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090783565 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122352057 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092864326 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113382815 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095302388 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.092155743 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072711724 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070631609 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127119191 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110044553 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072009199 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067745696 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125328588 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119492037 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086854792 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090473185 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08757699 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089864943 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06864976 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115987 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101433585 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107550977 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082776819 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096052811 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071277535 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091408438 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089208302 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115629848 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082842567 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114095498 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136389048 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071234285 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108268747 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067040394 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112812091 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082545321 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094883197 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068230015 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09284365 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06880758 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070441639 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11342715 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117353545 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072801445 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106236031 seconds)
  done (took 7.460883337 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087420473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118217397 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085944212 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108623302 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068704467 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068129218 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091872016 seconds)
  done (took 1.693313628 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069675827 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090096702 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11515086 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090503913 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112090667 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088102191 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102715249 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069230293 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109708465 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070658573 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112937734 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107084886 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09344292 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076848362 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092150245 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093245673 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091528293 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092179893 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071725017 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114721953 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072708476 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1125529 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072338782 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0684996 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1068954 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069754948 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139821377 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074527852 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092475604 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07446133 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066853313 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141713772 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105451623 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080158135 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068505381 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107834634 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083672462 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090510381 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085809348 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096852981 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08535335 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069319986 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09450173 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067644733 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073731756 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104543531 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069891644 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09292818 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072876444 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088370356 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094028886 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082903116 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092911126 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073855635 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069364715 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099058311 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079381865 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093570688 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090679342 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070885604 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109823747 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084690848 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.108094306 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084903977 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095798827 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083612688 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106081149 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072505884 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070074151 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096795653 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085729315 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090418276 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071905257 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079599281 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095183098 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091759609 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115893107 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071219523 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101866182 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069906441 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069994398 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093302935 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092399938 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095985392 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070899492 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073072255 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096086793 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067900084 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067115232 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096656055 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067931821 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06980984 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096878716 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069990397 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095205646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086046207 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069128103 seconds)
  done (took 9.574209559 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071298689 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069616014 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095293922 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070120464 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069602742 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094147027 seconds)
  done (took 1.548223557 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100274495 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09582033 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084170276 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097206474 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108627011 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107410123 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084329698 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107914657 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086419144 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105618377 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083750426 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108974219 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090092055 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09996623 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083865565 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098756136 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084995156 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10248298 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081055611 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098754251 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091000825 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098799962 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077205732 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083577266 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.097873085 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074948359 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103774081 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080929765 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104940305 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084484035 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099695811 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072877308 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098143134 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085022805 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108191569 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074079697 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098786306 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074630153 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102312406 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073779027 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107835902 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077173044 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079182142 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098213997 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.083183191 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.098635666 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073377572 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10321575 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083627744 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098195145 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073820268 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098181732 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073457802 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072299059 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075562573 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107281784 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074782206 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106954171 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077665795 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07370173 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096504045 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073203568 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.108424744 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072283536 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106805926 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073207905 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.098128561 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076788939 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098441332 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075702642 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073177217 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097017015 seconds)
  done (took 7.580779038 seconds)
done (took 28.91967287 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.65992801 seconds)
  done (took 1.73335885 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.786463768 seconds)
  done (took 1.861213818 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.167340133 seconds)
  done (took 16.248704577 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.622187377 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.767563289 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.81590517 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135814687 seconds)
  done (took 3.419776584 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.896689535 seconds)
  done (took 1.997837996 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238742635 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225633026 seconds)
  done (took 1.545528161 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774751144 seconds)
  done (took 1.863043485 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.331255553 seconds)
  done (took 2.416733357 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33152677 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183773176 seconds)
  done (took 1.60358483 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.532119663 seconds)
  done (took 1.620799083 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.805123765 seconds)
  done (took 7.896435782 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23198226 seconds)
  done (took 1.33681419 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.272800937 seconds)
  done (took 1.367864299 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.223779314 seconds)
  done (took 4.31813017 seconds)
done (took 50.309024833 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081608683 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083093638 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107368457 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079662097 seconds)
  done (took 1.440268476 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08092697 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07527764 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103970833 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075137203 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104720755 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075580277 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100784545 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08078984 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073898455 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101274354 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075020773 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098263004 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07830079 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100256469 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075508083 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077158655 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10301279 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075258714 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102579315 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076018876 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072439264 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101495838 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07758228 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098684863 seconds)
  done (took 3.18336233 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080586508 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074317649 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100743983 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074927217 seconds)
  done (took 1.428709241 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081262212 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117303233 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092054026 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079061765 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119492167 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112497879 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073535429 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07169351 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099996558 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079873411 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092679961 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101758536 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114710802 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079117046 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105563972 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069973365 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070687605 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113992976 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079978445 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104655458 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073868592 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078574455 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095270702 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091397535 seconds)
  done (took 3.302917712 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080298357 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104719851 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.105941227 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090676907 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.119922601 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067288543 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104137264 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092493662 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.153233848 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067806393 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098191187 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068076979 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097520417 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069235167 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079082324 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136764878 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115032576 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.096440127 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099047959 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.093531258 seconds)
  done (took 3.043850783 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077693122 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071599661 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091314663 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072054644 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078164624 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099781685 seconds)
  done (took 1.593961836 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071803594 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068300554 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092863311 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06958958 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073244135 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093769324 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068394552 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068727467 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093835046 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069178041 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067695038 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092956513 seconds)
  done (took 2.034197826 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.438406922 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071787474 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094098968 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069208345 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072564574 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092836551 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082416874 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069922442 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118602006 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068201783 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093807383 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071542224 seconds)
  done (took 2.451603748 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265494185 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080228752 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325970074 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16867941 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142220877 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156946108 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105312919 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14207457 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197953587 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139181418 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201148565 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226912257 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135390053 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168581343 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117701061 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108016523 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212283624 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222368337 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107420061 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225368445 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207383386 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158664768 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181733977 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130875221 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136466422 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152172086 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073264136 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108075518 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233841126 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162215326 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202816179 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139685151 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099169399 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233508378 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227673806 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196645653 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139866498 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113121491 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159042331 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169656779 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259798683 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116304557 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195752859 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13648002 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107654002 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174771464 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149654564 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148814818 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139460933 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115208849 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176405954 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241663974 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167406648 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114589671 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138075182 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144122516 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120090405 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131061005 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243220602 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221137138 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16033659 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097939319 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101061406 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212742542 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162486586 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143863488 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.156469528 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120962709 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170421176 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213732221 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14892737 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175837991 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.158302178 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117897942 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14945997 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170792274 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182123244 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207954986 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155792117 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101096296 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153685499 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132518726 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08403442 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171287849 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078491606 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235934931 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126731526 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140562638 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140200523 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11271959 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13892847 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222445272 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20312627 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107739332 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093322574 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105353988 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149675986 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204242442 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115328919 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112003643 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148094043 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106961682 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167955525 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102563887 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154383016 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080667063 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152009158 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187821178 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078909501 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153824506 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130431892 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129489757 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166188834 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1938719 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11830411 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109746394 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20209335 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155062531 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133531346 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203615498 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191166388 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.129597395 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13106691 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179440903 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243094126 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118396316 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223407665 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11004448 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111939668 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115729658 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157303984 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141677062 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15038813 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085862648 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153217448 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226580342 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102004456 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098503079 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166636947 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109903145 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107577437 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141708404 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104683998 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123583644 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12865923 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134645705 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170531182 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154710583 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135646973 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154763728 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126988779 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226372896 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116696934 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108477086 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132420165 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071349534 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191559548 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193691828 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107734687 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198405941 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.182133165 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10746979 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147781568 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111808955 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171025112 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106210631 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07477609 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174611643 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139684048 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138638473 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210451793 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10622666 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181934527 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153967479 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165720824 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161859067 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162833034 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135383446 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115543589 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142446292 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157175733 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076488775 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122404666 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110612821 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107757162 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124785687 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111641783 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173647867 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15537817 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126461358 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141485286 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124541883 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183096836 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103685747 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161873152 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148767979 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097210114 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213833132 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215311776 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168493092 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128408387 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17937131 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072399263 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102850439 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.11803981 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159706216 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085836966 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112335938 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14708062 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180231052 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157040156 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196102131 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138247247 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152864711 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190405394 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097603471 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121483183 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206310597 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156272805 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.135667097 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11719452 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126872199 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177943603 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13835734 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246388527 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145027075 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154731566 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210514789 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106730885 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109252677 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131855197 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169643452 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135381876 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207996258 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103437742 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117100558 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138568288 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082920583 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132694036 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18395511 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149095521 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165494641 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145569021 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162405106 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106146544 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151078865 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153225755 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153434929 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066029957 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149837708 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221697884 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123551084 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149012666 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185668544 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108891853 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153148527 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239019072 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176744625 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113643609 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139325364 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152536378 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159966346 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149611469 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170960152 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139800901 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165229732 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140510286 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112994411 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090943464 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127294001 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136245866 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122148043 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141516876 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146382111 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097867359 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18711062 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141948299 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114443052 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149130369 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127487786 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118155982 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101516747 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236744794 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150756959 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234936342 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129540526 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181860906 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227043805 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077327432 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109519846 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108095859 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173279238 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087002104 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189815138 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099376401 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13433312 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1564668 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172234398 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12447243 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070136063 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13905447 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191382364 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114794484 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127936227 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135058164 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224011669 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105922486 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10907147 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155602714 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132537981 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105989557 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233698358 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.090870377 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099183669 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104273752 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084140106 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15952338 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215165051 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110853402 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.134087197 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150065165 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149260563 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185365711 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104754973 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126659393 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141213635 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180471592 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157290654 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119295024 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142540761 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160592335 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217299555 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135546397 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09703375 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233754541 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215553404 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22332785 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092585357 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145154165 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145199301 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142234886 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198952406 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087284913 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22805456 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084338089 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194887464 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134248864 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120299406 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161192209 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11512771 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117988438 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205297775 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151666517 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086471897 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108690105 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148891245 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152487922 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136581532 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07850315 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19583358 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07638855 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166855275 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230876755 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083509287 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135124155 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125356248 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109600467 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137784977 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107555541 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115934049 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.12379982 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229873666 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121047529 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209716039 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172866437 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145235003 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195963214 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102713757 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664695142 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1084281 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186765939 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147671732 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262264174 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101845605 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148474458 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140021641 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154089818 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202011223 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134721996 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180113984 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18941875 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152825988 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08258116 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132966674 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141119553 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.119747794 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136685473 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144759416 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146585756 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.103880105 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150962497 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184940319 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085252203 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125411959 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192510612 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147146401 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201549445 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172838207 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114032085 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149558767 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172284298 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109386008 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153075461 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215701318 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136457307 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10173311 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110302802 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135866286 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20478272 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103266922 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222720328 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154628607 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140756291 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144904139 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15004194 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163861098 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138185895 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155042098 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1249968 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142217535 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145320119 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113017497 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080390801 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135568757 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142188914 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129454272 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130990395 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123697319 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215008001 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07487545 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125013629 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10492258 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203592417 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238950944 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090701288 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113603964 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149485024 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144650988 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146087863 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155421177 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109787882 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085984115 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111807859 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.115746607 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141205322 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14632777 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132499628 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141463429 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200523647 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114534009 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253935756 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097048848 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139033776 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09869855 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083202494 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125466111 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12648271 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139086976 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101653992 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234355172 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125120067 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094258716 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123084431 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075426744 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113009589 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161648204 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140566237 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151309264 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128155325 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065172634 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139241495 seconds)
  done (took 72.200222378 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149650556 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.126297819 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.135571185 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.194866666 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165368275 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260532128 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202588091 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244375546 seconds)
  done (took 2.662514592 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073340717 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121521998 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104696683 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117788217 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09441322 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070796399 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.30018903 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111666368 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069009815 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119502425 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120835555 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096594319 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.475439341 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067474759 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09588207 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089974996 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070956205 seconds)
  done (took 3.378291356 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.437859111 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.642313759 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.461477643 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077456494 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.942142755 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113927583 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.443812365 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168768842 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096704722 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.439344993 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.729973638 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159046898 seconds)
  done (took 17.897892134 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078639985 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071212658 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112276263 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085688892 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100285578 seconds)
  done (took 1.631487595 seconds)
done (took 117.337996623 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084146307 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.352482423 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05526852 seconds)
  done (took 1.626044683 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086827335 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085989758 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114294855 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084909371 seconds)
  done (took 1.566419907 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078051771 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07838891 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113983372 seconds)
  done (took 1.462781934 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.285071452 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168389394 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09241968 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086419459 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079967016 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107689097 seconds)
  done (took 1.465493874 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076082687 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076767834 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10288595 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079013407 seconds)
  done (took 1.523228949 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079572729 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05481705 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056102687 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084481844 seconds)
  done (took 1.469016397 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093357373 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107513239 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084325458 seconds)
  done (took 1.47601969 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109974872 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114609613 seconds)
  done (took 1.418552356 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085080223 seconds)
  done (took 1.274518014 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094932291 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.143612211 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158191168 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138276287 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16853914 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137621867 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086917416 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11658784 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106871728 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090767577 seconds)
  done (took 2.436891167 seconds)
done (took 17.530921184 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082039777 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.488918488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363199525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118404545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672452457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357599675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.01408273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120481121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122877265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097322263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085865669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677657594 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.013203803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.445306308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001706047 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324346169 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678566583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070774453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069036385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097020981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970512621 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096134974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07008533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069075941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678511814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372910892 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096973772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324797779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06869958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099409412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357327315 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096375971 seconds)
  done (took 16.386818921 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074132844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144932071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076982384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084207245 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100471696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071711933 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099725438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071818204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154743241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069456874 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113712082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069392729 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099100823 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072460808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087964017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097583654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071312863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069435075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097675157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070789511 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114881906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0701094 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068742714 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098004196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069751809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107793708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070384039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069102961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097319616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071431315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098462347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071231513 seconds)
  done (took 3.999444945 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118264834 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153980057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075625511 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131586378 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11416086 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099601113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171593318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094880683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157529197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069454782 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11396839 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06945878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129893711 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070688426 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115594508 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0711856 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070301319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097777327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070074448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096361009 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089979301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069210811 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097832464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070720613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096831363 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083664264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09439353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075003406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069921255 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098658971 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074253838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070655056 seconds)
  done (took 4.287291296 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076243995 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076858207 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111897991 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085432601 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097464393 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075553213 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0745419 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098543603 seconds)
  done (took 1.902435557 seconds)
done (took 27.771700728 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082024031 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071772409 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102095328 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083595428 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100279218 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08171738 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068451794 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103886059 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077150234 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074062239 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105608252 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069524853 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099976277 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071267606 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075847855 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096874343 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080970361 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.09974023 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082135305 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080557365 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099973638 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077853313 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102324586 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081551429 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08004077 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108302802 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081013024 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102826078 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071972963 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099026522 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079993346 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084637376 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097793381 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080379212 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097367193 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070590329 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.06937878 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097276057 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081003963 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103913388 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073392647 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076536387 seconds)
  done (took 4.820004922 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091498296 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089511616 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114238001 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071567766 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100009667 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064659556 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117995189 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072866246 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.094715575 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091631335 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057033833 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.087486805 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073736766 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063173499 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.096464345 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059056454 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060550397 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.085387015 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.0625637 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061068096 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058935892 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.083841329 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062898306 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064306173 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.085401618 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064669208 seconds)
  done (took 3.245987777 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078069281 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085901347 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11691937 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130005653 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135891765 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080181883 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107815562 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090116171 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11663277 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069677189 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071951884 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.12734329 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089203622 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103386048 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069516201 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114144367 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084128943 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07054397 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103383966 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093240101 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113832349 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080028432 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122722207 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084500353 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068563551 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099492827 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07336335 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108717787 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074988083 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078098278 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10206215 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072900697 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097929455 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082297751 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072690104 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0991307 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092576458 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10651657 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081306749 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068948913 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100986668 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071424206 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11654374 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11374866 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095748626 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077182161 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076535077 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.106564205 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069438515 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115052983 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07971373 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068566804 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.100569044 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069092277 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069349497 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110983648 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071210885 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099365494 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078965643 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071967598 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.110448849 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072768159 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112909572 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06986658 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076120108 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097456566 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070109324 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095104872 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094680706 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069666364 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.140981924 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069918272 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.099434374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078147641 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104329123 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075767157 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069564698 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112650505 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079359921 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099869944 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079415545 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072541948 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100438345 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091781725 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098590774 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073051087 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070245722 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103082521 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072722818 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069808183 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1103548 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069692407 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100039301 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087090647 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068607949 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.099234201 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075090744 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.1018968 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070092873 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108111689 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076356221 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069984249 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106201583 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070228661 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072057257 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107603 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073999479 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095426139 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075435027 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101355964 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07194203 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070885217 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099715323 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072482287 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078956917 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103543144 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074111326 seconds)
  done (took 11.638868488 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193824874 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.190606057 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07270277 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181355153 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077391593 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109334093 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.182336409 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097290231 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097774948 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071134054 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070480578 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.134626729 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.127062994 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.111253433 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110029142 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069708731 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115825001 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.110051937 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184308889 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178352547 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116631483 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079350985 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072770475 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099906254 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072446799 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079132856 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.115583265 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078084204 seconds)
  done (took 4.421431803 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085632642 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14048906 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076461695 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092879467 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.123082661 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069382558 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103209546 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07128847 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109788221 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083030068 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097369297 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076659335 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07588115 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106666107 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071080131 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10628691 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079709876 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071615939 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101288857 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075472769 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.109558306 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083003672 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100994741 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070719036 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076693524 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097351381 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068184496 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115760456 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070801396 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120103247 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069074163 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07489269 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.117040286 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07017745 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096645258 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07353812 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071385103 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09929761 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07195213 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068279342 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.0972308 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060116875 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068335773 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110535776 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076527505 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.090147676 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076349285 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074986954 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103766411 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067984785 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099233828 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073994569 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073198122 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.111705194 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075264723 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075039775 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101166502 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069282166 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10502132 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073418307 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066397668 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095445271 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076140364 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067221755 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106842343 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074878641 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095765581 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072972861 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073186793 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104901427 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072813364 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071971748 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096764312 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072802006 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102112273 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.0762336 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072519018 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097353692 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070001718 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070130641 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085736739 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070502739 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055147489 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101854884 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069098637 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068715904 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100039336 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078372052 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111312676 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071846254 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103469945 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072170681 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068660876 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101259777 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065176452 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072717089 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.116873368 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112729883 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071955685 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068370096 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115718178 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075658323 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068294485 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086437578 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078003739 seconds)
  done (took 10.181131415 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099938259 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09392174 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100995726 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085780142 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.127757185 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094329164 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106028602 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076202869 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070956297 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114970766 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069618607 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10582802 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071604396 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078975351 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127865716 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078713943 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09947475 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080183439 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073611545 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.139856525 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084918466 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11282615 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.084225007 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097839334 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076017931 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081156872 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125964809 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082917067 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109586277 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.089296518 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082477747 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125405197 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.089096447 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102312569 seconds)
  done (took 4.476597604 seconds)
done (took 39.983717464 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.289297748 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.505124773 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.278773119 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.241186733 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.299726911 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.295245889 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.290430347 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.278826079 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.587325862 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.278349265 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.54426321 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.006513707 seconds)
done (took 60.118638364 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.296574891 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.421378377 seconds)
    (2/2) benchmarking "String"...
    done (took 1.581725965 seconds)
  done (took 4.237561456 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.665752464 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.303513235 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.575038976 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.282348365 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.284513516 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.747361754 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.943889676 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.1310755 seconds)
  done (took 28.490675658 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.281647495 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.665949693 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.670186776 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.661429352 seconds)
  done (took 18.50368276 seconds)
done (took 61.417828865 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.291441116 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.341887397 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.296155769 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.264806871 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.391870043 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.304482809 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.435524545 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.36211382 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.286991721 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.286177821 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.284219518 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.287237345 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.285024579 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.43060426 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.286753712 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.291769022 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.326160981 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.95824488 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.678910239 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.292874767 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.304622692 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.291226017 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.293392901 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.287592241 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.33636899 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.282222591 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.288783169 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.288945974 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.562701108 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.291115781 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.378831109 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.665762185 seconds)
  done (took 192.876928509 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.283406218 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.119348284 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.268244308 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.305078639 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.617833428 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.490022042 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.445323337 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.775219233 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.301633539 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.30145438 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.496679981 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.284623751 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.565084459 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.319756065 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.289382187 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.375661999 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.505481378 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.57517761 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.299452401 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.537161988 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.308909872 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.377969181 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.304557158 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.466543352 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.291707559 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.327289458 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.306971774 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.287275133 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.47682049 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.436042396 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.316224382 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.302576119 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.866028517 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.143087015 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.284604222 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.301156665 seconds)
  done (took 152.178933457 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.577560503 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.285280915 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.285680835 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.286026652 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.314525331 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.285469591 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.821813837 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.824444706 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.826746889 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.361376885 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.346866109 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.533435313 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.28767435 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378335922 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.298343517 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.285956868 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.301865422 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.311411649 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.289167358 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28684324 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.823355163 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.301614812 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.74865889 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.291478157 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.285953674 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31566393 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.676183111 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.28615252 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31603886 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.601294742 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.331982384 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.286284418 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588138051 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.706287034 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.285937428 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.394355573 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.286287447 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316387486 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.286398624 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.554177107 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.287276026 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.287275779 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.289757198 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868870032 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.289633191 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.824717734 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.288253681 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.182714944 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.287594439 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.288274901 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.766235778 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.723397775 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.288975565 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.287723807 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.290225484 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.286506877 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.287814594 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.318548237 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.80180326 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.38940863 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.288634094 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.291195502 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317243057 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.28706324 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.745262384 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.288291477 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.37610594 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.345824343 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.394371644 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827351669 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.291786657 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382018812 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.406386931 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.288519143 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.288789416 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.289343597 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.28844393 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.394580032 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.289104278 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.690231212 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.293463141 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.290038869 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.34780498 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.381209581 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.288582044 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.616118043 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.291108808 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.289547641 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.976551359 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.289376005 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381010194 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.289949621 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.289530725 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.289407576 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.689511237 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.289686312 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.828062314 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.495303141 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.291425726 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.819812935 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.293023988 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.70663686 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.810573474 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.886148822 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.293085091 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395941994 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.294497515 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.291619471 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.289669965 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.289538091 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.289903735 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.319294918 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.290589676 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.34905542 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.686426401 seconds)
  done (took 355.84465468 seconds)
done (took 703.702318348 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.946702129 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.9317587 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.047519237 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.9304913 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.905747436 seconds)
  done (took 10.993166268 seconds)
done (took 12.223813148 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.4801415 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.482173014 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.352119533 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.484734145 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.320437329 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50193368 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.461073062 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.311533003 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.397321237 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.3688016 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398656754 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.340669771 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321694323 seconds)
  done (took 19.452678143 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.60450591 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.602554032 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.355498725 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.597648677 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.332538698 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609102536 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.483619649 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.494448243 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.481901451 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.306602147 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.302459321 seconds)
  done (took 17.404196022 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.608511064 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.600959903 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.358932723 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.602308089 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.333519714 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.607495379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48581106 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.497860641 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.482409226 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305539265 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.303062039 seconds)
  done (took 17.419505847 seconds)
done (took 55.509517933 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.298976201 seconds)
  done (took 2.531687278 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.335190975 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.500600396 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.31765691 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.304736464 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.300031859 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.299722633 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.30491551 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.299847856 seconds)
  done (took 11.895619658 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.298319906 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.2949206 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.298297508 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.297329436 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.296080118 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.29844309 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.298928235 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.296224752 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.300164693 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.296218211 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.298760697 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.296063862 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.296998886 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.300878536 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.299238108 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.297198438 seconds)
  done (took 21.998563967 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.296825811 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.295817321 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.296854601 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.297534783 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.297362427 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.297889294 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.296431078 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.297579772 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.296129127 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.29642266 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.29737764 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.297961399 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.29784969 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.29659131 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.294587933 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.29863944 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.298056982 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.297464297 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.302299178 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.297508754 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.298260479 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.297455181 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.29806152 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.298394736 seconds)
  done (took 32.377380736 seconds)
done (took 70.035813782 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.332738953 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.92012949 seconds)
  done (took 9.487701618 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.299830256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.300131976 seconds)
  done (took 3.837397388 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.300874856 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.301669229 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.300357004 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.301151095 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.300673903 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.300145792 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.300952991 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.300676775 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.30078763 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.299893626 seconds)
  done (took 14.242530241 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.301560087 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.300979762 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.298164876 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.301451161 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.30142605 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.298364039 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.30082659 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.299802951 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.301256937 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.299220568 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.3014928 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.299233497 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.301635064 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.300313379 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.302213351 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.298677339 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.299546484 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.299747902 seconds)
  done (took 24.642825828 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.303495851 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.301971516 seconds)
  done (took 3.84345362 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.30076936 seconds)
    (2/7) benchmarking "second"...
    done (took 1.298660569 seconds)
    (3/7) benchmarking "month"...
    done (took 1.298445839 seconds)
    (4/7) benchmarking "year"...
    done (took 1.299612439 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.299393129 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.299412313 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.300105381 seconds)
  done (took 10.333962316 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.303066168 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.48036073 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.562933799 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.895791143 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.303923741 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.305615925 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.142710669 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.306432652 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.309714277 seconds)
  done (took 14.848660151 seconds)
done (took 82.47278025 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.313405505 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.297344188 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.181622028 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.315517348 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.313726524 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.638725764 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.335399788 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.424279894 seconds)
done (took 38.059255839 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.294424301 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.0446763 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.049375176 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.296571875 seconds)
  done (took 11.629075919 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.28687941 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.223072998 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.286347338 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.340420812 seconds)
  done (took 18.376781929 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.916100393 seconds)
    (2/2) benchmarking "read"...
    done (took 1.631190843 seconds)
  done (took 4.786337819 seconds)
done (took 42.323481249 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306055246 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.301885323 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.305125789 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.304930564 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.302519993 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.305447258 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.300958234 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.300201243 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.304917406 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.304198652 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.303754691 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.304153368 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.30612012 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.306375696 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304658672 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302020898 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301711131 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305585572 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.304076976 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302739915 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300643714 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305925886 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.302250418 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.302991092 seconds)
  done (took 32.528455199 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.306506939 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.304522966 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.307060009 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.306807874 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.303218502 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.306584473 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.305110455 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.303192207 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.305638137 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.306416362 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.303196886 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.303886956 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.305238978 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.302389898 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306810644 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.304736448 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.307266936 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304694826 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306085984 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.303972331 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.306787896 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303699891 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.302950428 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30560111 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.304924367 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304205899 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.307540134 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.304758533 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307754692 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.30485218 seconds)
  done (took 40.399516301 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.312572949 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.314759602 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.307707432 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.309143187 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.30961303 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.308423818 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.307214135 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.307686669 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.308700974 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.308331249 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.308076643 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.307258042 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.306240778 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.308759073 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.306641981 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.308686914 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.30854136 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.308396122 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.309065982 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.30875612 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.309364557 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.306040518 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.308593694 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.30885848 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.308723684 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.307390862 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.30711178 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.308867306 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.308812199 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.308615979 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.30922376 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.309146217 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.308874417 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.307878201 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.308804725 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.307755124 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.313877707 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.318704062 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.309782013 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.308068107 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.309743732 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.308680794 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.30872841 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.309927676 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.308179937 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.308976 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.308247494 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.309992571 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.308294216 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.309935904 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.31029955 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.310218182 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.308460728 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.30932606 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.3106027 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.309023384 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.309565748 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.309602084 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.308433422 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.308148263 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.308615975 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.310395008 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.309399351 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.308491498 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.310114769 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.309887068 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.309308574 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.310484946 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.307130619 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.311397925 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.309075083 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.31136397 seconds)
  done (took 95.505139893 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.310697982 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309281755 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310194759 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.308328844 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30741294 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.31055817 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.30966093 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311208141 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308860737 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.311572303 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312092929 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.307849531 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30966092 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311372732 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311935372 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.31003036 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.31270119 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309296914 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.311082768 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.312447293 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312502733 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.30959601 seconds)
  done (took 30.075817166 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312388114 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311901364 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.310812477 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.311597557 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31020924 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.312621204 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.311039772 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.313577953 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312914484 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309744262 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310685546 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311201513 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.309988903 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311406987 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309321589 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.31110056 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312634805 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.310726771 seconds)
  done (took 24.849036829 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.310871501 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.311255128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.311065938 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.309384765 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.311059965 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.313878722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309424977 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.313170028 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.313029099 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.311564483 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.313494423 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312167872 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.313344185 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310347947 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31293564 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.30971051 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.313478942 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310978154 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31367233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309846539 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.310991852 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313397227 seconds)
  done (took 30.10780591 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315120747 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313249712 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.311120725 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.310992998 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.312526665 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.314575033 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.312665849 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.311496401 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.313566918 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.314651392 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31265651 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314122306 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.312951012 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31366045 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.313155 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311426581 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313790052 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.31325816 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31483196 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.311843912 seconds)
  done (took 27.508522044 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315897293 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316401961 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.316581593 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3146505 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317022846 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.314716819 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316593692 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.316757056 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316726404 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316960491 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316512891 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.317020193 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316334091 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.316267335 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.317890344 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317225946 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.317271312 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.318537242 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.317686616 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317120026 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318082768 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.317129513 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.317204251 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.317591342 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317532747 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317792831 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317863379 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317412719 seconds)
  done (took 38.126179923 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31625856 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.315150306 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.312225261 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.314600769 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.314847857 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.314745184 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.315562463 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.314254537 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316721311 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.314345591 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.316812369 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.316586452 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.316893489 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.317144514 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.317932115 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.317671317 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316917954 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.314268585 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315035208 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314961613 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.317682253 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317883423 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.317977385 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315169819 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315883392 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.317621164 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315461166 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.315246536 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318329456 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.314977829 seconds)
  done (took 40.733284027 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.338099975 seconds)
    (2/2) benchmarking "in"...
    done (took 1.336329957 seconds)
  done (took 3.927584647 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.31684779 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318102802 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.318635354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.315651278 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.316605963 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.318748259 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.317826661 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317621754 seconds)
  done (took 11.793932975 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.320936855 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.31965399 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.320092262 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.320040507 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.320545854 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.32170322 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328899936 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.3372825 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.323282431 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.322128269 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.330741849 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.331065153 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.325320373 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.322547571 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.323086443 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325366566 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.32054329 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.320617995 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.32126945 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.320814027 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.320169514 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.325599654 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.325090224 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.318025728 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.324998752 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.33561265 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.326909445 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.320717889 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322791451 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.327994364 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.323585192 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.318280812 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.321572541 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.319420389 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.321905434 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.321211543 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.333094417 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338855829 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.331551221 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321847951 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.322464017 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.319763131 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.325700404 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.327295998 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.325536437 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.323187227 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.322536306 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.319598595 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.324082093 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.328093274 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.327682497 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.325215024 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.319612822 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.32882649 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.326622836 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332010227 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.339498615 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.327204098 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.334793814 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.334214992 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.337800107 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.333160725 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.325571819 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.323409967 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.334584338 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.349858686 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33156246 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.337644635 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.321620536 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.324357411 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.332595163 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33874291 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.335935361 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.32364866 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323217141 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.325030022 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.326506196 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324748385 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.334052357 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.345506794 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.323538751 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324577235 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.338051377 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351219785 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.325764502 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.324177939 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.324787448 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.325021847 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.327084985 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.337918225 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.341159107 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.325112132 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.324913652 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.327501545 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.328259284 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.324842411 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.325695811 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327891292 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.32286517 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.326013369 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324863817 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330867811 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.337051872 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.324561526 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324574658 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.334515708 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.325140853 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326560552 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.334827188 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.325981721 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.325058792 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.328815164 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.33594076 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.322481676 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.331395999 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.336701763 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.326070178 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.329798273 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.32492314 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.326420544 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338394023 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.355009501 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.327157307 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.327256819 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.332660526 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.3384377 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.32735694 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.331756694 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.326533674 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.324994305 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.324917113 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.32988958 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.328557698 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.330339759 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326808451 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330368885 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.325325366 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.327757793 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.327389248 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.33028954 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.330629236 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.330247346 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.330541292 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.331614924 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.32655893 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.330362115 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.336788013 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.328759733 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.331821612 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.330428621 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.325755752 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328686233 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.330725654 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.328777918 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.330192816 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.328593089 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.3298325 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.328024258 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.330121724 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.328831332 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.329411736 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.332313594 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335031678 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.328511723 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.334796933 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.329809883 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.326427264 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.329386509 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.329236499 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.331509736 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.329862519 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.329255355 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.334740264 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.337212252 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.330203405 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.328480936 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.333155675 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.328927001 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.329242547 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.329546139 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.334466078 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.340327852 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.328205364 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.339367791 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.330100853 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.3293634 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.330837057 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.332861546 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.331256129 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.329596759 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.336212636 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.338739806 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.344490143 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.342126001 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.33389854 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.335557553 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.334011759 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.335419767 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.336490296 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.329918683 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.331259122 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.328134898 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.332453951 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.330426099 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.334508555 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.330494567 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.332086506 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.331087701 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.331426002 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.329262128 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.332614647 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.333650933 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.333882059 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.329152858 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.332304798 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330544234 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.331830901 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.328814882 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.331922885 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.332580425 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.332114029 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.33217951 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.340146484 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.329925178 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336134317 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335119308 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.334268976 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.334000203 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.332743783 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.337397982 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.335166921 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.341738551 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.351258869 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.335737042 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341320009 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.351261721 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.334538176 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.339453114 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.33355599 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.331477235 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.337391506 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.3413948 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.334021781 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.332445993 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.332024203 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.334246131 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333767089 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.341312239 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.331491382 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.334980441 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.333781184 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.336246733 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.331600585 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.337602096 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.33583035 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.337087051 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.337956429 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.334458951 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.33531963 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.33585834 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.333164412 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.33394747 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.333602506 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33961372 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.343619138 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.341235977 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.33604729 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.338945712 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.337516508 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.338452655 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.337670112 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.334714502 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.336687656 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.349717178 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.34257674 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.341307081 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.338089023 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.335528105 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.34165921 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.338260378 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.341416218 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.337856891 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.337902154 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.336135296 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.336366889 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.333339405 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338081024 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.336082771 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.338820975 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.337667358 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.340506701 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.336556696 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.337669405 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.33600834 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.335497367 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.335828583 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.337004887 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.336794526 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.339866684 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.340001635 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.336985113 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.337874876 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.345404342 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.355588209 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.338076595 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.337774551 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.337366334 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.336937543 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.339506318 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.335717761 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.341676307 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.345090795 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.342936653 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.349618882 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.340980213 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.348954667 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.336003809 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.342451762 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.34494603 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.3352872 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.33775457 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.340398603 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.33599139 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.346401076 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.354087874 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.340185155 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.341447312 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.337343058 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.336875379 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.338613335 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.337652066 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.337432245 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.337924563 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.347650239 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.358003263 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.344075585 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.341146982 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.336880653 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.33787596 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.338835537 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.339481715 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.343594646 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.337997984 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.341064399 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.33909164 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.341717928 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.339075863 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.337696113 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.339276446 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.336338496 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.338672743 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.346021399 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.358631333 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342406454 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.338692295 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.348602734 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339091645 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.348574041 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.355736043 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.341271253 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.338169504 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.339229893 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.341852629 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.340776923 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.342266936 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.339810276 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.342534999 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.343754114 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.339691927 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.342867323 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.34047668 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.339531152 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.341665293 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.351511364 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363524172 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.343549523 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345217342 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.337387579 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.344439888 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.343881227 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.339038724 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.341554682 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.346300981 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35420704 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.349966105 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.34441878 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.340300164 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342985804 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.340710179 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.341383157 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.341203199 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.3407386 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.341316619 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.343833484 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.34060276 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347469707 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.341402711 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.344308699 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.343546504 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.34375166 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.354532719 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.340484837 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.344819063 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339967801 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.342103797 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.343945382 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.343600605 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.34047183 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.344361599 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.341082555 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.34514526 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351407933 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.350743241 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.346466649 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.343474939 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.341149161 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.343804102 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.344705339 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341518779 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.3424474 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.341861682 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.346795589 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.341663506 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.344342797 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.343600294 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.343618148 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.344731131 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.343241957 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.3487224 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.351952204 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.344908285 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.340713483 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.34164107 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343195651 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.344472399 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.345322439 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.351883446 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348685579 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.356775785 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.355083702 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.346880625 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.346130504 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348125308 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.35307607 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.343714306 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.345856323 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.343782785 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.346537083 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.347398659 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.350921524 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.343394949 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.353668568 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.345530166 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.345991247 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.354706007 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.364347136 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343403169 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.347729645 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.350445013 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.345887604 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.3436325 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.34459259 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.346103429 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353469456 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.364676313 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.344278605 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.348201812 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.344778454 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.347584025 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349167724 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.345323373 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.348016405 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.342554518 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.346240276 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.343475429 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.345670844 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.34355571 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.346954893 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.346758223 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.350970079 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.355211087 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.343760587 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.349226827 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.347907621 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.347353466 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.343555885 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.345713037 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.343178235 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.343337442 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.347579878 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.346122267 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.347520287 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.350711147 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.347508584 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.348864885 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.348519255 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345866693 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.35153478 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.359446772 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.354540559 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.34311026 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.346600426 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.349588593 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.350733774 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.34522499 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.346192551 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.348264317 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.350037601 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.34582479 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346335719 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.347179489 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.351957619 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.364983554 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.364668153 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349248497 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.349117294 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353459648 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.347129437 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.345051695 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.347284771 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.351952828 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.353043262 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.355193693 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.346646662 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.355408567 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.366102003 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.352050147 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.351795684 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.351970163 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.359704193 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.351354061 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.346767557 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.347973394 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.355206421 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.366217476 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.348237945 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360393902 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380535124 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.36760505 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.352003815 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.347589445 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35066806 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.347224183 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.351422188 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.348841383 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.349366116 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348881382 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.348315193 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.352841681 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.356600552 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.35224044 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.349478059 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.348871121 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.35172685 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.352053952 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.346872394 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.348187948 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.349414478 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.348069046 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.348818793 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.349343629 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.351859237 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363438049 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.362871183 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.349338615 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.35009088 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.347814969 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.355322105 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.354100676 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.364166507 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.359020373 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.348980544 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.349301412 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.353691791 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349931925 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.347641212 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.352184832 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.351930518 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353110218 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.347185425 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.364777373 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360181879 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.358140492 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.351483094 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.351106053 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.351969075 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354509931 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.351562416 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.349391375 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.353432259 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.353406234 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.355317635 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.351610533 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.351385739 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.356777834 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.359621753 seconds)
  done (took 799.464728472 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.350471155 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34961682 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.349272766 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.350117628 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349386316 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350310209 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34980122 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349235976 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.349414337 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.349446219 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.350124245 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350303946 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.349300834 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35111988 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350227416 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.3491299 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349755207 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.350164034 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.350300561 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349531192 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.351989717 seconds)
  done (took 29.634718868 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.352917077 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.34917074 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.348760641 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.351111131 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351192401 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.35339782 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.350234821 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352817297 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.352820609 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350243904 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.352493704 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353451982 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.35123511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.350429075 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350710003 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354332192 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.352660016 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351166216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.353870026 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.350975378 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35328483 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.349221156 seconds)
  done (took 31.022956082 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.352076116 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.353468772 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.355697389 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.35104963 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.354790717 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.3520181 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.353557116 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.354436514 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.3547879 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.356419473 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.352757245 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.356064544 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.362461378 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.361069503 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.356911104 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.355117839 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.498843393 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.35447049 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.353567407 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.354058197 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.351465577 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.360777975 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.351345627 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.352342009 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.355351026 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.353606825 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.354567929 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.354565697 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.35342388 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.358503371 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.358903292 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.355537528 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.356254695 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.358023214 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.356492158 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.359901308 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.358963537 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.355656431 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.352706919 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.35390791 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.367579389 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.377367997 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.355696632 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.363477664 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.354796151 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.354976505 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.362119558 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.362722443 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.352225451 seconds)
  done (took 67.894336796 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.355519646 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.3552382 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.354173164 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.355585865 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.356159974 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.355859876 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.355651397 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.355366476 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.353403834 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.353136114 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.355304917 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.354832778 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.353515463 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.3562372 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.355203994 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.353392686 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.353362371 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.354086729 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.354281317 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.355127163 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.35352453 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.356384104 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.355050234 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.354199392 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.357555724 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.354037012 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.353174244 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.355690915 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.35519912 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.353463331 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.356114964 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.356940233 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.356822384 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.35500368 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.35497687 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.356444059 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.357462223 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.353812881 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.357111228 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.354367453 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.356525697 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.356245285 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.356729403 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.358825355 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.353549384 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.356207692 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.356644664 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.355374035 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.356094209 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.357931052 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.357288085 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.355602627 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.357660661 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.355557592 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.359446555 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.358970968 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.356268794 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.355503934 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.359169629 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.357228934 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.356748888 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.358805477 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.357517975 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.359026185 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.358868739 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.357403638 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.357207848 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.358492991 seconds)
  done (took 93.495548529 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.356562235 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.357986752 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357180543 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357900584 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358241714 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.357920942 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.35857514 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.357907841 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.357519926 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.358719562 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.35756645 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.358335631 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.358431475 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.358135922 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.358342186 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.357871632 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.358895778 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.358049831 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.358455409 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.359290182 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.357825002 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.358803686 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.359190609 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.358713489 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.359460325 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.357437713 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.358162746 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.359231024 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.359015887 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.358112267 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.359791132 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.358956184 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.358952889 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.35854527 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.359505649 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.359054689 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.358752807 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358285319 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.359623353 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.358833197 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.358904433 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.359190961 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.359607793 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.360227954 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358854506 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.359502067 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.359354951 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.360395223 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.35874544 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.359832614 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.360078556 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358876119 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359078935 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.359228722 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.360534191 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.360151016 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359407772 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.359382365 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.360276132 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.360755242 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.359380498 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.361638449 seconds)
  done (took 85.546820608 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.360775154 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.360454528 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.357506242 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.357817001 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.360738331 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.357822534 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.359958314 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.360542083 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.361421637 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.361346487 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360866886 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.358355657 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358919658 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360666771 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.358128048 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358076523 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.358393591 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.358585612 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.359613161 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.358178199 seconds)
  done (took 28.483314927 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.358078033 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.360775331 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.359383244 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.359105482 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.361424367 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.358976567 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.361288436 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.361908171 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359717717 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361279922 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.36299109 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.362187415 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359412812 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.360947505 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.360871979 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.358806154 seconds)
  done (took 23.063231793 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.360803137 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.362755694 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.362505786 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.361826469 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.360953906 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.357628666 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.362488294 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.360102077 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.359397208 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.363486827 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.362700158 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.362510892 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.362887628 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.362534127 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.361112826 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.362601803 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.359665531 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.360508189 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.362602815 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.362972124 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.361605374 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.360658991 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.362782288 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.362798463 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.362325681 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.361856677 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.36078546 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.360819226 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.361210186 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.363678494 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.360881598 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.361320364 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.362105118 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.36100468 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.364034778 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.360557467 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.36439458 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.36401562 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.364119674 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.364874599 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.365415563 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.361270611 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.364746814 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.364334772 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.360283013 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.364843428 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.363749095 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.361826771 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.361816357 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.362409494 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.365544797 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.36451561 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.365475301 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.365255455 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.364894921 seconds)
  done (took 76.233478266 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364972533 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.36490722 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.363789471 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.364865515 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.364806316 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.360914703 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.365365224 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.36304439 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362850094 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.364049951 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.36421097 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.363804187 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364081549 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.365404713 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.363729281 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366435332 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.362693333 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.361265481 seconds)
  done (took 25.85027118 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.362931772 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.364989437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.36680951 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.362745501 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.364560638 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.366169245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.361626776 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.365585358 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366882682 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.36602068 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363909946 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.365523885 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367060698 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.365918451 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.365003311 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363346597 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.367507546 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.36481753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.363861863 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.36383368 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.366738975 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.366663371 seconds)
  done (took 31.333227647 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.368201546 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.368675669 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.385253507 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.411646255 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.402833547 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.369361819 seconds)
  done (took 9.60431122 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364644771 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367422464 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.365671315 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368204103 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367586561 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365856974 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365288318 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365782468 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366937686 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364573796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365427153 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367193849 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367863798 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365255197 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367162097 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367277341 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364950221 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36539695 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367674485 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36856778 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365099827 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369375241 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365291163 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366561707 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367913954 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365193388 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368820848 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367671687 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365898548 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369131757 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368818233 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365312436 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368871409 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365999637 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369973547 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368531387 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365757496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369539222 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368696359 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366498557 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.368664533 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369716616 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369134874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366920494 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369746205 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366821194 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366792228 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366931487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36722065 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369783692 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369171397 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367921011 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369470728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370107262 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370527236 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370278397 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368621265 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365427795 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369695379 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36870107 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36698352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369742121 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367830381 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367953283 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371372439 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367822409 seconds)
  done (took 91.565099811 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368690209 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.368111631 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368398245 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368614928 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367858051 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368222632 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368347109 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368233948 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369164088 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36968903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371582494 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368356778 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369626357 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368166919 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368970194 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369146653 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369517894 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368348815 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368921906 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371706619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368199917 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369812793 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371162825 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368197006 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369320148 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372452818 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369281811 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368351141 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369022693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369211553 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369638053 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369289411 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369377688 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.368952413 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370173053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368287737 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369628288 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37012194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369563041 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373216432 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36858519 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371261457 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367923002 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369360732 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370909967 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370340228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37064795 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370127313 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369307582 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370625932 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37081859 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371219091 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371462728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370862913 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370666177 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369955086 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370133243 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371275098 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371684251 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372856651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370179431 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370711178 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373729548 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371413272 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371846674 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371114117 seconds)
  done (took 91.719325586 seconds)
done (took 1861.706282547 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.454056152 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.38566612 seconds)
  done (took 14.146175911 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.5370697 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.489905137 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.375080082 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.42622428 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.375362849 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.368756394 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.380620673 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.3763528 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.376516951 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.375487641 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.37569531 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.55948979 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.374381644 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.376257725 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.375982958 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.472836472 seconds)
  done (took 43.932092271 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.404651362 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.383046989 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.496561134 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.398702163 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.405472428 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.570416399 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.437869742 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.382774974 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.559555483 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.421994291 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.035638331 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.405057332 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.380958572 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.553912134 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.402950768 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.570843622 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.63549548 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.021106391 seconds)
  done (took 31.776783436 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.845401745 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.378298816 seconds)
  done (took 9.532383958 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.411381603 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.408233266 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.404473509 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.411191803 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.435331855 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.429155494 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.402922963 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.39389829 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.416530299 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.416431338 seconds)
  done (took 65.447051512 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.40309415 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.383987204 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.379845262 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.380015242 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.370932926 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.375080911 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.379447297 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.375939544 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.094416163 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.514325335 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.400055401 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.385089225 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.381094617 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.382108309 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.374535778 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.41572906 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.537151864 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.375191203 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.374557327 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.384921644 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.380505572 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.478695152 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.425638045 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.37794821 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.511692284 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.114631381 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.385651881 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.386123653 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.500502446 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.375324601 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.379852585 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.380788671 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.383354982 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.960358629 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.844121278 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.393370732 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.402816245 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.391191321 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.375299664 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.500907231 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.382415026 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.386303275 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.37368786 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.828265881 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.545655977 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.502358437 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.662560976 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.386302624 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.382762991 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.443966628 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.384764734 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.383498682 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.410897956 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.166446743 seconds)
  done (took 114.171444122 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.373454078 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.865239381 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.545727145 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.397151404 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.254095557 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.189835637 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.377850292 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.676680917 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.387389824 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.374416006 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.716351834 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901514904 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.37770126 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.426218769 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.919855253 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.43244288 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.37702806 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.158974785 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.377203459 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.37672802 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802198464 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.393834918 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.379020121 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.528021445 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.418507292 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.848995057 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.897675928 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.813723296 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.377289601 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.374555015 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.866375202 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.387890743 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.410457522 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.377445498 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.660343356 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.756710251 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.718030888 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.382794537 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.389341893 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.37802721 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.399710148 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842171214 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.726028637 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.37777045 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.378463991 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.851087127 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.376464959 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.38073666 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.378470862 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588162692 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.340284259 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.379382356 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.906986572 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.38044467 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.724700963 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.462457261 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.421715851 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.874428903 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.383311193 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.511121019 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.399238551 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.379002707 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.385290377 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.377824124 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.380179969 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.729986055 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.682505288 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.380202987 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.732240842 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848066723 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.377664744 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.922325567 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.230480742 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.398889974 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.409582923 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.378109303 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.971299386 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.873360466 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.414927283 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.378298508 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.718705205 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.380584267 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.710555445 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.397958527 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.394468165 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812856091 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.40028688 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.406141472 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.379522119 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.397110686 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.166886816 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.380442216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.655293703 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.436593852 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.37883443 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.379022879 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.404460837 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.382504379 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.398817239 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.384464686 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.917462175 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.385127736 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.519853712 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.403983413 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.38151439 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.381631804 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.380441303 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.379537033 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.608276188 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.910740771 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.386387536 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.379138191 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.38144775 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.386276147 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.499183857 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.384837635 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.704334623 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.382944878 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.380178968 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.406966245 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.231114309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.40420256 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.380293952 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.384997881 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.241032816 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.596040472 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.404127483 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.38523227 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.380912677 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.396876549 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.848939456 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.383443849 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.460487988 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.38280392 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102964866 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.407138162 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.411231314 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.966663309 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.390901551 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.380765139 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.384511994 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.382064079 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.699011472 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.672842627 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.597691488 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.392306342 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.384610149 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.086956241 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.418391484 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517131026 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.407184363 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.376451586 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582552207 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.495067224 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.382682147 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.959749503 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.383099189 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.60356122 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.386056526 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.70907679 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.89374025 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.385700303 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.383851784 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.10876957 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.043816883 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.031302457 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.38694593 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.728714705 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.381025778 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.833531655 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.382380515 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.382347672 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.978022001 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.387302359 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.381941944 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.382218343 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.383508322 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.450436096 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.559913558 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.508159932 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.383932934 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850570062 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.441290702 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.383432016 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.404838529 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.385653245 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.738207859 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.443194457 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.386639088 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.406221332 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.385656583 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.386786307 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871462752 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.251415886 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.386752944 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.53928461 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035752325 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.387477939 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.384799349 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.076875491 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.655726536 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.914106147 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.403877158 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.714290537 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.387841818 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.426337883 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.194996158 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.461967059 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.876472019 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.390916466 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.388594729 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.997501924 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.389521844 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.479878963 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.386499385 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.386654537 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942657173 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.388629225 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.387552921 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.854091657 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388585679 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.646313811 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.388188289 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.389149363 seconds)
  done (took 1123.554735964 seconds)
done (took 1403.868939464 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.38798524 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.388900487 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.372157129 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.390787551 seconds)
  done (took 26.86420333 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.392088088 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.393099201 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.390223509 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.393035702 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.392323404 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.394010761 seconds)
  done (took 9.678831934 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.665533801 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.388028256 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.388202083 seconds)
  done (took 19.765327402 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.622752273 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.705198087 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.777751002 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.644854794 seconds)
  done (took 11.074715629 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.392277677 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.389861423 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.391549199 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.390791698 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.392243393 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.392667637 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.392699974 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.393562176 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.394305594 seconds)
  done (took 13.851308547 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.458121564 seconds)
done (took 88.017062342 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.042776513 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.998080922 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.261178945 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.392541333 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.387024462 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.432944119 seconds)
    (7/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.893362936 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.963587998 seconds)
    (9/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.860493141 seconds)
    (10/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.082493773 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.661087149 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.411659934 seconds)
    (13/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.120508683 seconds)
    (14/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.583316676 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.428249132 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.397940368 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.429831714 seconds)
    (18/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.77644175 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.401888019 seconds)
    (20/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.514867283 seconds)
    (21/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.738110593 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.390794579 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.757430057 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.805517084 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.33060755 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.862948007 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.377912875 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.094133035 seconds)
    (29/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.026771311 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.474042315 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.810230159 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.870288404 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.018758114 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.518085316 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.028735931 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.376448899 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.550143743 seconds)
    (38/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.920735735 seconds)
    (39/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.41125259 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.396507621 seconds)
    (41/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.391561661 seconds)
    (42/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.406291957 seconds)
    (43/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.773004889 seconds)
    (44/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.689157762 seconds)
    (45/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.426422492 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.514522481 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.646924252 seconds)
    (48/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.414196643 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.486970249 seconds)
    (50/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.119100358 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.389693389 seconds)
    (52/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.773696895 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.309494809 seconds)
    (54/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.735885759 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.447740889 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.817724856 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.623116011 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.413705636 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.466377855 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.677223742 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.516054991 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.907605937 seconds)
    (63/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.530195554 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.391567383 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.506371996 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.368694757 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.394569815 seconds)
    (68/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.76292115 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.393271836 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.379520465 seconds)
    (71/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.362849629 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.374048376 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.418093929 seconds)
    (74/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.474302936 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.639934553 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.436625929 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.390833192 seconds)
    (78/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.773718119 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.815239081 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.413457879 seconds)
    (81/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.609068577 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.673542251 seconds)
    (83/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.037977161 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.516236181 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.397308966 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.391395433 seconds)
    (87/309) benchmarking ("sort", Int8, false)...
    done (took 4.409471203 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.814043502 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.814971437 seconds)
    (90/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.032623633 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.829828858 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.717242826 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.011668734 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.396139486 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.946669056 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.48678934 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.512434085 seconds)
    (98/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.799233943 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.530508507 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.992735194 seconds)
    (101/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.208332632 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.378313996 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.265269393 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.379685389 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.625115472 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.464006011 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.393745579 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.394112168 seconds)
    (109/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.78628519 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.397162586 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.489675386 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.373109664 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.476007784 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.416313695 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.393175529 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.44880039 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.410830758 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.003255747 seconds)
    (119/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.383284643 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.41897722 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.585065555 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.591828311 seconds)
    (123/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.377621212 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.676551953 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.776980356 seconds)
    (126/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.998847437 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.917696944 seconds)
    (128/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.402762562 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.414271105 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.024530556 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.491486817 seconds)
    (132/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.000407821 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.658714397 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.041048912 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.290185101 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.204336692 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.326032803 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.656425424 seconds)
    (139/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.415609816 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.262511269 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.7603811 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.562692987 seconds)
    (143/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.422223699 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.421696216 seconds)
    (145/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.654089124 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.422118668 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.495064621 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.520304014 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.236894539 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.564598298 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.601993527 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.234659087 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.404168315 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.423123928 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.396278416 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.717482246 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.876688641 seconds)
    (158/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.943497733 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.389756034 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.840816597 seconds)
    (161/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.474722202 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.457904234 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.52087531 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.416159791 seconds)
    (165/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.476329709 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.416286993 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.410761696 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.941945093 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.098698043 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.446417235 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.149624136 seconds)
    (172/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.293726481 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.497782263 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.49261919 seconds)
    (175/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.615903207 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.709914437 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.958899502 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.417783712 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.397071047 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.459544463 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.397935711 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.285314909 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.409990645 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.753181954 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.037983129 seconds)
    (186/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.382805416 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.167983552 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.392417242 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.214718822 seconds)
    (190/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.407152894 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.421244009 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.520600974 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.380231423 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.207196975 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.463896783 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.50286435 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.411928016 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.549009275 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.441434589 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.724911747 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.298289056 seconds)
    (202/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.401615617 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.466429491 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.085761997 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.461918883 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.209166402 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.508109517 seconds)
    (208/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.482635052 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.423168317 seconds)
    (210/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.420571862 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.823759854 seconds)
    (212/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.418992045 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.456379997 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.890230493 seconds)
    (215/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.832653931 seconds)
    (216/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.401262195 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.414263695 seconds)
    (218/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.789871133 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.409454717 seconds)
    (220/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.17923784 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.432778944 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.39983921 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.736291822 seconds)
    (224/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.044446811 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.063676782 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.625856207 seconds)
    (227/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.06050819 seconds)
    (228/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.505692792 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.81568677 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.301646595 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.48894372 seconds)
    (232/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.424196757 seconds)
    (233/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.7719391 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.912151302 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.422276196 seconds)
    (236/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.507472491 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.87531803 seconds)
    (238/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.486616075 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.438255583 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.811045903 seconds)
    (241/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.203707867 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.383016928 seconds)
    (243/309) benchmarking ("sort", BigInt, false)...
    done (took 6.406639254 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.40736504 seconds)
    (245/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.669673653 seconds)
    (246/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.63852884 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.404940982 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.049248755 seconds)
    (249/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.259328679 seconds)
    (250/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.521926774 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.477594518 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.890788148 seconds)
    (253/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.509310502 seconds)
    (254/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.794218631 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.485872331 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.874776589 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.404968661 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.210493316 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.120803461 seconds)
    (260/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.396043795 seconds)
    (261/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.422417385 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.961350224 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.623040779 seconds)
    (264/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.608675137 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.428671834 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.384493497 seconds)
    (267/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.403695241 seconds)
    (268/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.491562124 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.79027917 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.018349754 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.388699059 seconds)
    (272/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.948161005 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.275982905 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.49961397 seconds)
    (275/309) benchmarking ("sort", Float64, false)...
    done (took 5.707796992 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.42246926 seconds)
    (277/309) benchmarking ("sort", Float32, false)...
    done (took 5.418381752 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.817212981 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.418505086 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.481564566 seconds)
    (281/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.21975735 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.412917303 seconds)
    (283/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.77554773 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.485940488 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.427556276 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.481913906 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.625011713 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.527862032 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.386105042 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.833393885 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.145674514 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.307639506 seconds)
    (293/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.613335762 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.419703923 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.120894645 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.045647551 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.446252746 seconds)
    (298/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.391557654 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.122071339 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.412810609 seconds)
    (301/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.57262697 seconds)
    (302/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.391136999 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.427791055 seconds)
    (304/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.430627441 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.408046844 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.026241529 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.313986622 seconds)
    (308/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.603499596 seconds)
    (309/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.801993615 seconds)
  done (took 951.973718085 seconds)
done (took 953.297273002 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.437747055 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430983065 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.412717978 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.437720678 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.524499862 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.44652373 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.423619263 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.41421169 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.461938918 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.462315844 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.412374875 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.445708463 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.415307522 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.415151165 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.415184974 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.427298384 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.50254976 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.415778568 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.431849277 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.422211103 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.431424627 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.413319485 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.463180376 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.446970886 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.417306309 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.418311984 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.419619632 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.434624733 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.523525042 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.415621336 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.418231784 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.42435331 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.504226124 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.415903514 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.409407736 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.436651981 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.425336005 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.421391906 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.417072016 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.447763512 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.947340336 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.417017749 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.416610346 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.416246129 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.415815669 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.423702639 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.417918933 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.421639432 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.430303621 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.429947101 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.953667986 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.435790651 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.418844806 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.416191699 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.426657571 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.41644865 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.420232794 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432372551 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.436299597 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43126041 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.502789999 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.424454122 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.417716499 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.434720818 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.426409794 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.915837275 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.410982673 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.42160212 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.882879194 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.420145571 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.997938158 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.430579249 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.417939015 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.431039614 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.447739945 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.512117552 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.414708717 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.417405278 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.429335912 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.415080183 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.425742355 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.429575559 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.421971373 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.418650488 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43422198 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.450181188 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.428887538 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.420220039 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.426796851 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.437132052 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.426195895 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.430126102 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.42219706 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.414357306 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.430163578 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.423764798 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.422949007 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.421624304 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.425486266 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.429776893 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.948549164 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438452247 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.415531418 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.417117469 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.416745774 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.433663788 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.950013872 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.419721569 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.4424899 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.465744801 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.420468821 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.509632421 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.428892923 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.434115413 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.429010209 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.42269156 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.414136215 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.511121725 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.967207109 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.437929524 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.421806466 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.417316608 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.434821699 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.421494109 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.419131298 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.520915713 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.42469387 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.433983265 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.539906024 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.429471787 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.449601003 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.419865588 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.423424353 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.451759836 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436097409 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.449809711 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.423121164 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.43421189 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.43418017 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.414468081 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.432883254 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.430418615 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.41924083 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.428366953 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.414487829 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.453103938 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.430480372 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.432068001 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.441619813 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.54135799 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.417105607 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.463694718 seconds)
done (took 239.475279356 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.486261762 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.414426984 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.527563541 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.416600875 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.52146859 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.520123832 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.417257695 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.416299493 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.416286543 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.798853918 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.415316707 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.416965184 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.41418935 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.417325806 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.501961744 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.420233283 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.414169087 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.762533913 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.420524305 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.491519951 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.417534567 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.415856327 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.417886838 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.801580789 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.420163539 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.421274097 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.494298881 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.419554715 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.766852429 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.416097863 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.416634442 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.765138807 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.51606375 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.435366857 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.430741498 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.428125052 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.523108327 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.434527992 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.501211572 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.499788571 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.526925307 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.457200475 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.420909542 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.417592655 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.421892474 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.42018936 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.419274198 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.447443824 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.417313136 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.420427658 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.765007629 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.428745401 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.426895937 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.421109628 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.417915972 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.442885837 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.419402153 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.421482447 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.514753906 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.421254203 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.488284202 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.805739857 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.802658657 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.422010728 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.42256722 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.419219669 seconds)
  done (took 154.309958756 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.492548922 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.498512498 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.543013296 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.428386467 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.474788215 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.545338198 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.429751967 seconds)
  done (took 11.76410539 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.429463302 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.422433172 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.473556326 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.482196713 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.421642402 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.574650362 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422986558 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.43563255 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.420240136 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.478084886 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.423081501 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.425543085 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.430104584 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.421414638 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.474552162 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.437259881 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.539718033 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.42517448 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.423525331 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.575892646 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.420633619 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.429898524 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.478441049 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.434959022 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.426028403 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.431841489 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.998082014 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.422076589 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.420904839 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.422755273 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.420842039 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.466305346 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.422404299 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.422417498 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.422102521 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.544931482 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.422810562 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.421135121 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.424202199 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.426195439 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.421804369 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.426653694 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.425042189 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.419706028 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.423440783 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.449678899 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.424559222 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.424145306 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.423388103 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.424852754 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.476673228 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.424790087 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.420206189 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.423408756 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.483541583 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.431636541 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.425917781 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.420290311 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.42519754 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.422399872 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.580685474 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.475070713 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.426214078 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.477793607 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.425601968 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.426457515 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.427106901 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.425447273 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485605015 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.425454474 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.477407533 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.424614445 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.586584548 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.451873845 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.427964167 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.434408965 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.429878742 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428470024 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.428047466 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.433326248 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.423065019 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.430692963 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.43484964 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.426402906 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.425685663 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.531791358 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.539899743 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.422892029 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.441374656 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.435280786 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.422713424 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.484141803 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.429147886 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.424456401 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481000597 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.546643951 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.48315403 seconds)
  done (took 162.270115428 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.437041168 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.436775219 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.432601572 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.445114223 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.4289102 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.429394784 seconds)
  done (took 9.96750649 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.4342069 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.428911421 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.427246427 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.426867478 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.427141505 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.429149456 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.429084836 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.431004404 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.433148745 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.429907999 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.427632837 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.429218855 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.427325079 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.427175138 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.428497009 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.430503087 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.429072952 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.42525383 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.429071646 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.428986913 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.525970666 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.427948212 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.428675475 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.434408807 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.434809962 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.428167131 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.439185349 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.428797236 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.428375388 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.441015755 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.433194407 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.428862211 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.433111097 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.439122265 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.433822604 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.433922162 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.43127519 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.429551892 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.426911639 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.430399123 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.430171594 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.429736763 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.429642728 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.430148678 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.434676657 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.43661719 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.434618477 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.443225165 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.429648994 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.430394711 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.430378324 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.428852969 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.429687567 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.430166728 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.436178994 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.437472753 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.433805951 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.431225687 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.431325498 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.434752319 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.432864772 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.430707409 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.434906662 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.436501656 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.437000274 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.432411528 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.436465865 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.433913291 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.43286351 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.430941815 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.433801352 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.427927207 seconds)
  done (took 105.532415171 seconds)
done (took 445.192928728 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.935598886 seconds)
  done (took 8.295680813 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.621681351 seconds)
  done (took 7.982565498 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.887755225 seconds)
  done (took 23.253751877 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.426324609 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.523372259 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.437685963 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.427440845 seconds)
  done (took 27.176966175 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.456068152 seconds)
  done (took 7.816881277 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.424938787 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.430001109 seconds)
  done (took 14.216781212 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.710425655 seconds)
  done (took 8.075440112 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.033967855 seconds)
  done (took 8.401303147 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.451126633 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.443051922 seconds)
  done (took 14.528123923 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.408260793 seconds)
  done (took 7.772589272 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.609675186 seconds)
  done (took 8.974956135 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.428162827 seconds)
  done (took 7.793558826 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.434519964 seconds)
  done (took 7.798127302 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.783217351 seconds)
  done (took 10.145168837 seconds)
done (took 163.594090985 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.426971594 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.430666643 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.434156387 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.431981344 seconds)
  done (took 27.086276704 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.468046442 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.464238177 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.469253448 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.477137657 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.468245249 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.46502419 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.457761055 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.457976057 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.47789677 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.471323233 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.469776886 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.468806659 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.468677892 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.473308175 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.470355217 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.468529266 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.478448859 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.467275799 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.459884062 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.469883488 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.435380397 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.476636639 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.469502627 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.43278125 seconds)
  done (took 36.551117037 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.639165495 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.507061263 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.591073665 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.488023228 seconds)
  done (took 7.589414471 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.485666445 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.487636816 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.499554497 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.542525672 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.568226968 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.495489261 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.462179668 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.453748016 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.442424076 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.487096285 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.567197944 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.504322314 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.585484939 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.433557951 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.625276654 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.433314169 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.434200099 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.486340375 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.540245387 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.561565362 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.436107731 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.487490355 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.501310502 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.506632733 seconds)
  done (took 37.391216595 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.432738272 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.442962153 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.440613804 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.433425871 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.436970203 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.436556404 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.440813307 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.439208516 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.455222089 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.434231658 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.43325255 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.436237263 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.434978333 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.436042588 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.436192841 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.448020972 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.449871751 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.433520824 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.439100352 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.442271217 seconds)
  done (took 30.149036404 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.434201058 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.287212954 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.784029977 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.688338963 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.435200374 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.434264483 seconds)
  done (took 28.428786178 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.511905193 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.657647853 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.441208749 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.831963178 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.91391315 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.441948707 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.441838789 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.693773796 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.03428362 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.031147222 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.501302256 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.51077217 seconds)
  done (took 21.380124609 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.444445086 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.435743399 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.436973654 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.453641542 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.496513552 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.447435763 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.446714017 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.433623102 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.502930547 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.507057367 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.449698701 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.498885562 seconds)
  done (took 38.923562324 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519276954 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.480437302 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.418704377 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344473555 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.814498721 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643009964 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34738771 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.902775914 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.435529917 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707398678 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44152628 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525503138 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689751098 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433740307 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436798608 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.519490489 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662741918 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975096399 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436694866 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.683189488 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461011425 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444401293 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.874396441 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.46471315 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647798259 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.571719053 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.693947078 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.433463554 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737684182 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.449073546 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44615081 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435470791 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709552531 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131728553 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552491011 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44513536 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.375337611 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.146493691 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.432405571 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.701120753 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440388823 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43886601 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442592388 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433721368 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.366503187 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443699284 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926742501 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.4390775 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.145538914 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435319135 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448191245 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528036765 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.438246044 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.251858706 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.598659875 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435562616 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.432789444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44323868 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008237469 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.267537683 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449328845 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.373527818 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.991640736 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.772841964 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13375849 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.539238415 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.441002431 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.439669341 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372411306 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.748457133 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456043668 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575917817 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.459307648 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.100221483 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213938944 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.451833254 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.369685178 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045893688 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438700637 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.373090707 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666590602 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437296505 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376345402 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.400412739 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.371998792 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165612832 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442245547 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.907319951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448095762 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.91004468 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.444516074 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45424095 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461038531 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.665489796 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.3227641 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436442692 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.435363326 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558351572 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457964984 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912615226 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372495498 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.441973079 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694039274 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.649176781 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437954841 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.994109904 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669456418 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441054368 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.455818728 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.436718118 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.449237592 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.091769888 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452219139 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.267513367 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459567514 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438704758 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20700981 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436072418 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.562879707 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.442310028 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697773925 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.255246781 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438573385 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523170044 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447284342 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.440349591 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.787111595 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962867184 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.438180364 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.442560684 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44672977 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.45282612 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.443823871 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399266208 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.434594093 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445646231 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.447220782 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.662361303 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458005205 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719509454 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374172263 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57602173 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.505904888 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.663337529 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.733628335 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.441391322 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699878456 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448189608 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.458959141 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.45549653 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459275643 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535339903 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463221156 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.449037717 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.701128057 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.447134159 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.444317579 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.801327507 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44577665 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444944517 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.445671602 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.419909789 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092529072 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414318788 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.445108033 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333046647 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.45394334 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503446302 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.448770452 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.452783043 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.396360122 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.512352531 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.444956075 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.453026058 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667479505 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451213878 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.715405155 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524590027 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.663759882 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095119264 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456391211 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.375825038 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.152836455 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.135457822 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441481357 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.378004727 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.441311465 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45184495 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.451939646 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.173452337 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.10166737 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445832288 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.717939268 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.450949053 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.455910878 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.44565814 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444717714 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.374981698 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.29551951 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451530818 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.459318176 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587808008 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.45595534 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.37806956 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.448002915 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451143949 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.443238922 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.442215326 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475174397 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.720842438 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948818117 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705691147 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.356633568 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.455213797 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.836962092 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.474496227 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.449530242 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455783266 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449562076 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.462831252 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454418678 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.455217138 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.780886858 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.127437761 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013079919 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226541236 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047568778 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522356065 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.446554316 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447289511 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920733405 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37779975 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.004718463 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644729733 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.919899269 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401375179 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671673223 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.736320099 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267814799 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459060675 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676623262 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508380417 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.44723524 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473110686 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656967805 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480187491 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.443834007 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.377006007 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.747762369 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72648435 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453499982 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525637569 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925053679 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451268122 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.450629165 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.447528872 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.818873653 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631395287 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160219049 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.624490644 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445684391 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.450162816 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950926322 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.449335399 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.675877736 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158649373 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.46142196 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.675396866 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385489562 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.456853487 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.459951352 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.447378864 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.894323872 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.461102728 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.706063115 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.45741313 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381850621 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.451289181 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054465518 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.307165666 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.453742347 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445425861 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220556992 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445988254 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769824546 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.459378482 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.381005382 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452624416 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.379838469 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379228135 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.140836549 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.449476777 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417402391 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992996148 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.951524981 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.63157432 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.477116949 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302524874 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.704891068 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.463339926 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108816859 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676925724 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.466239095 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470193699 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.547082781 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452969477 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.437189974 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447977982 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.683890549 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427385781 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.67260859 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.44007734 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.353289283 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.449254512 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.662074227 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451501297 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.464389431 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719972478 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.161334163 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.474928084 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221034458 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47361587 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.457124145 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372169882 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.007252598 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460539736 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528359469 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460082593 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.460614867 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.461652793 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631618906 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451660789 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455075511 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.462438238 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543214507 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.330253374 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.391818596 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.456376844 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117301401 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242150056 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116820159 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465088145 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.449766271 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458879739 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38498261 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598681781 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.679723992 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725021438 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.570814203 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.085687039 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473488081 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452711356 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472546722 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665434551 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724271933 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353477628 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453507417 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.470447053 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.453169513 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.462164388 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.664279391 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000567639 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064422991 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57163549 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.451575841 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937647279 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726050245 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454567053 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.450577084 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019977119 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.463760026 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.859523455 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.456538421 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465574255 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601221697 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.461895583 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14780632 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.464391862 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.607624193 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.226361019 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853551367 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.709986178 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.994663925 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.465273621 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128957923 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253671562 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720234223 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517607898 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.463361643 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.560846906 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600367723 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.458088602 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.455902386 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455166438 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302140651 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.164431536 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.464051746 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12394307 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720818496 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.451061216 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.461827839 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480123994 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.463044623 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675671311 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19723154 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.678216286 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463746676 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.454366449 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.271676848 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124191274 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467325209 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387163678 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.459249677 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719887304 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.691223433 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476003234 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.906646329 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.164672472 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068489671 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.432279446 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47457408 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454925258 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258346186 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125789199 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.400044472 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004304169 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.017479011 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45460392 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733154532 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.459558218 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.459779254 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733106423 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.456412133 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.454197871 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470922973 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.119614522 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.287223694 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.471977497 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.801357898 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.396085571 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.802834202 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230091153 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392905577 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461939314 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.655763732 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.45629544 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57799806 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468900787 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.464360402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465379387 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.193104772 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741779932 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.461828572 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.451367465 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.443415923 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.469254796 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46966646 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741794138 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458722237 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.142560236 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.81004176 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.714736185 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.456418722 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.446188969 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.461131952 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458014739 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45536038 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.664791532 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.205622388 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067708131 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.459014792 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.470106976 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46043373 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.67268201 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667213507 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.472327279 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473590744 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462595797 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475848783 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.362842697 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.972356902 seconds)
  done (took 1662.620234494 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.5030739 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.489815115 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.506884293 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.492041816 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.478586442 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.495927019 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.52073459 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.501514607 seconds)
  done (took 53.382841852 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.460011324 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.715490028 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.494627039 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.460826934 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.474113803 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.474422418 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.93546074 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.463100524 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.472713673 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.472001103 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.463412318 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.463239202 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.145248731 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.474539185 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.473632485 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.446654352 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.469007202 seconds)
  done (took 67.759750923 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.469864083 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.782828588 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.494583779 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.463063517 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.895868667 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.464519875 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.804195566 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.509558397 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.467352437 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.708634195 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.126018128 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.505691304 seconds)
  done (took 82.089223257 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.471807558 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.47269837 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.47293438 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.471373241 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.470398952 seconds)
  done (took 8.756431901 seconds)
done (took 2103.471745237 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.707634481 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.24354607 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.140249362 seconds)
  done (took 5.781996665 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.606515867 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.655986545 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.827969034 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.793188928 seconds)
  done (took 8.276549641 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.73826055 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.827273241 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.643357737 seconds)
  done (took 6.601985597 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.974362163 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.473716646 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.613982915 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.45774468 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.456784213 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.458624424 seconds)
  done (took 20.767844346 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.460682414 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.463236273 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.460853205 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.462994812 seconds)
  done (took 7.242593379 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.440628056 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.17328231 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.443120294 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.464808638 seconds)
  done (took 18.916613443 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.208339042 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.219604033 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.204868663 seconds)
  done (took 8.028926937 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.461867773 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.306177931 seconds)
  done (took 10.163590002 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.782499132 seconds)
  done (took 3.178249386 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.592232761 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.728148776 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.664730378 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.524835468 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.673770331 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.669800302 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.26221308 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.801195422 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.52549525 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.860379276 seconds)
  done (took 30.699188299 seconds)
done (took 133.826427909 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.472585252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.86308494 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.667319288 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.451232553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.694975598 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.666803709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.776317755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.41729796 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.14731185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.951495052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.496154316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.694337395 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.943396755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.863536471 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.941273292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.483336645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.693093487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.502589674 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.142699635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.372688764 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.773881178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.089272157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.326552592 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.314631588 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.697364191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.617237425 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.670605612 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.486058283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.315601043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.889185252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.620628045 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.462769517 seconds)
  done (took 198.902988551 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.461692168 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.462568764 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.46426329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.468909165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.466216124 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.466757866 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.467046937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.466484858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.475754477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.477872532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.462605019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.483066961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.46604998 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.478306615 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.465009025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.468392419 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.465913855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.466586026 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.468950212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.46631965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.480570081 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.465920073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.466193747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.467212195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.465131968 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.463765965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.462188003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.463570207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.463977516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.463928734 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.485554501 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.481892509 seconds)
  done (took 208.397315879 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.470985744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.465800639 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.484228559 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.466651633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.463692111 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.467434528 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.484035013 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.482093939 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.464347772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.480214148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.463517657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.463607172 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.482653512 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.465968573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.465392407 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.463988686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.465450103 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.482445407 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.468217223 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.466325791 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.467145017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.488417633 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.465262747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.464662563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.48417269 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.467625067 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.482553237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.465107609 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.465650202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.466144541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.469951885 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.468567074 seconds)
  done (took 208.472888492 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.65884612 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.470877697 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.47021521 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.412017848 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.471218257 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.470588849 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.469980153 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.662600471 seconds)
  done (took 15.486463124 seconds)
done (took 632.656628396 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.95250521 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.651071804 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.674015285 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.490455379 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.349015241 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.497703644 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.490390652 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.669252483 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.417932395 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.673695582 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.778104854 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.491332419 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.929321596 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.49089283 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.752159572 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.590398385 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.36860501 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.484578802 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.822281379 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.062576798 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.755539294 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.056585517 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.67322393 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.422574345 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.930734001 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.0508062 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.263808416 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.389536689 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.492929058 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.824078197 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.246825041 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.515354753 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.563273133 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.538597808 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.592827623 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.571846645 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.461288297 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.535288709 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.677445023 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.763670327 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.112801965 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.230976081 seconds)
  done (took 98.708882005 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.461278822 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.462004622 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.459556116 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.462982568 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.462163474 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.463529652 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.4612758 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.460736153 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.461319824 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.460282646 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.460856182 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.461394887 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.461867129 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.462747196 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.463153688 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.460551779 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.46201081 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.463251562 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.462563715 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.461683985 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.464967352 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.463116103 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.464813284 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.466240114 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.464498053 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.465138773 seconds)
  done (took 39.428848181 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.476860874 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.725324536 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.908928284 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.486818394 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.479728113 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.483623557 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.563754576 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.479251145 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.482467491 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.483613427 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.637383133 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.480990946 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.515420431 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.919136409 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.483928519 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.477839119 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.477670875 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.480244086 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.734076899 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.489367093 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.565222133 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.479676457 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.566685804 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.493160564 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.483668645 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.481829057 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.486420049 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.986253991 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.484394005 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.638689154 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.340710789 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.566256369 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.939799704 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.919061125 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.341888151 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.483231467 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.479653156 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.642672003 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.484649003 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.483017702 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.564053366 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.483519474 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.921273297 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.130435465 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.500401722 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.481171795 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.009558982 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.64134998 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.75749554 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.495530143 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946075821 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.486175099 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.480876453 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.4852236 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.756139962 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.49382424 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.484078834 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.023061461 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.488803252 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.568910578 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.485597738 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.484548175 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.748689461 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.486637812 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.73657828 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.487886399 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.49187067 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.484055772 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.924234646 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.486279836 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.145032702 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.501621738 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.482637144 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.642622158 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.732835476 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.043023705 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.488889906 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.752269439 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.956471609 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.566500711 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.490897322 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.976846685 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.572458968 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.491206379 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.483895711 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.484884639 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.482698517 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.526335089 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.567537124 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.069827551 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.144675619 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.043274204 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.572248927 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.499895908 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.486243918 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.027891506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.485077509 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.483009042 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.916549886 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.150776588 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.503224631 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.49180475 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.136616783 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.505728815 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.572427658 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.494125072 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.932727072 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.488021744 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.52646152 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.484307124 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.493290649 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.490496575 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.572009157 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.493397487 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.484485988 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.119333126 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.664747343 seconds)
  done (took 193.762837582 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.495716611 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.480739822 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.480678013 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.4958165 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.479995843 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.486616117 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.480405478 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.48176294 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.486742124 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.480526 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.480733614 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.482559102 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.483163271 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.48374901 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.490806617 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.487228318 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.092946502 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.480696602 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.495815313 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.481543289 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.302347404 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.486363098 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.492841521 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.481799573 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.482684328 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.481407054 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.487672512 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.484719781 seconds)
  done (took 156.423923416 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.485517362 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.12725362 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.488877369 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.632734507 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.510456633 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.484024894 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.631145552 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.551247126 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.492483547 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.484278628 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.48358959 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.828747558 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.490476165 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.061797569 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.698011482 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.632021042 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.065522975 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.489258501 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.484868562 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.483352526 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.634479524 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.496953914 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.813387957 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.093168591 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.487543562 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.094122715 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.475875784 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.489935086 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.493670306 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.098966558 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.488801834 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.814457521 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.57490497 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.556433948 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.100326286 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.067952571 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.043114034 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.646479653 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.493386951 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.488785789 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.490098837 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.479146777 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.098860072 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.493046072 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.494784177 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.091028759 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.508480924 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.491194436 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.506739014 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.489144712 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.55853169 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.559118812 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.821924079 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.10648796 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.574719202 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.531211335 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.633574473 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.874581264 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.497170188 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.046994794 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.479724722 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.100332683 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.495599475 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.480271983 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.491703196 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.495514549 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.656984317 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.637955075 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.075228924 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.500343326 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.07509679 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.658946392 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.493488331 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.491049388 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.494690443 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.118715443 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.076778075 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.659575805 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.644725711 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.706372261 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.482028883 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.494937755 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.481458656 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.578866093 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.493120504 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.101104966 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.053078759 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.495331559 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.494803186 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.494808727 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.494212048 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.687898528 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.106571603 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.580804819 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.058234977 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.840445133 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.822783958 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.495311508 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.556652911 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.493393575 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.823905291 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.496151966 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.556415879 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.94160544 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.82528373 seconds)
  done (took 177.607757598 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.76149157 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.706237732 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.589762625 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.619572532 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.076162593 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.08843594 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.762426691 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.630611405 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.609561889 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.751401499 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.686875842 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.582369427 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.694726099 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.577638024 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.241343076 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.574524003 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.592166843 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.628204162 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.612182122 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.593532315 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.126579864 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.799181423 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.685614338 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.671370262 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.595183959 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.338878627 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.072487758 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.028250373 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.680668791 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.797046944 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.040094011 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.652192987 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.48128803 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.191404741 seconds)
  done (took 70.967174786 seconds)
done (took 738.301952593 seconds)
SAVING RESULT...
DONE!
