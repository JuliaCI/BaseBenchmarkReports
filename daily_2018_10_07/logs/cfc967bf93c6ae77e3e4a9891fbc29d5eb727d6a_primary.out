cset: moving following pidspec: 12795
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.229555118 seconds)
loading group "string"... done (took 0.456698746 seconds)
loading group "linalg"... done (took 7.490719026 seconds)
loading group "parallel"... done (took 0.168092389 seconds)
loading group "find"... done (took 1.14213502 seconds)
loading group "tuple"... done (took 2.067391299 seconds)
loading group "dates"... done (took 1.315813414 seconds)
loading group "micro"... done (took 0.242427244 seconds)
loading group "io"... done (took 0.644849724 seconds)
loading group "scalar"... done (took 40.410229806 seconds)
loading group "sparse"... done (took 12.403332194 seconds)
loading group "broadcast"... done (took 1.102654277 seconds)
loading group "union"... done (took 13.575452807 seconds)
loading group "simd"... done (took 4.746037693 seconds)
loading group "random"... done (took 9.580232317 seconds)
loading group "problem"... done (took 1.967575595 seconds)
loading group "array"... done (took 22.291644077 seconds)
loading group "misc"... done (took 1.423147963 seconds)
loading group "sort"... done (took 3.542061998 seconds)
loading group "collection"... done (took 19.165703943 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.506710326 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135794253 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131838663 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145428036 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200512806 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142327465 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154730689 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.111819558 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.959360338 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177719608 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151607718 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.504710693 seconds)
done (took 5.058565221 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.220062117 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092216088 seconds)
    (2/2) benchmarking "String"...
    done (took 0.101914216 seconds)
  done (took 0.855871648 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075696456 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143750191 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09298935 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0774401 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093308718 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076394154 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093934151 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.075963193 seconds)
  done (took 1.316350065 seconds)
done (took 3.140564792 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.722872814 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275213163 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200800728 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45584212 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194631081 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.210201065 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674800006 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336142068 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.249253757 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098577326 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141413315 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.382899542 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134113857 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680396889 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088626179 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121579609 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176339115 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437251179 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081349184 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108108076 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115348478 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139894584 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127589432 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089813104 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183329894 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081399272 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190505439 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105936344 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079864525 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285802497 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.198889822 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679169646 seconds)
  done (took 10.747216702 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108911035 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.130633502 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095343316 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136836115 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131289175 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098495373 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083447631 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09534787 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119488885 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173961419 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113429302 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134475013 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093823552 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081974227 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113097647 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241753977 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118814518 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102703868 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099225149 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102841589 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11979175 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110742572 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106436625 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092353976 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164894779 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219881116 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11073406 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124577818 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096053184 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112987653 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143458052 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142589392 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092847323 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079553737 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169999033 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123100433 seconds)
  done (took 5.064161957 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.184306712 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.1187467 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164667791 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160332428 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13762745 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157718983 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111204957 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241851688 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114687716 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160521043 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138897415 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114388032 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079106023 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096768557 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.12537104 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077577403 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.613469112 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160932826 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132384676 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095452916 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102947671 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097933727 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362620694 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086252789 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094983861 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079618607 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119337751 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063275921 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157109309 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098794128 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.120124942 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120152571 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078872261 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133258512 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206415282 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123913066 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115845211 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095024873 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076393108 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190648408 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08663473 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094676038 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101719367 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133829852 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132490425 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095535795 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079305911 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.214523828 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078469638 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111755245 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.921755416 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178852195 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089160591 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.093955544 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317719188 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09839676 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096094331 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076920561 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.256650995 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.176543587 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095921579 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07868719 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094885196 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07979179 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379330187 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09924239 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.857534861 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081815341 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.104443894 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081399575 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094746698 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10149122 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08616844 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112650687 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.075830761 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09509646 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079797396 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095098406 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076644552 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098628317 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105076695 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084245962 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095367999 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146239052 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093350833 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096550678 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126885717 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098641539 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077439761 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13071179 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097468349 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079570955 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.130800194 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096650569 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089898743 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098195657 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142408418 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094393009 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.154257243 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093203733 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120890492 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097352548 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113903372 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109604012 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0969911 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082913928 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093421528 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076107725 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093908294 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14732953 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092459941 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078803268 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098048314 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106921214 seconds)
  done (took 22.354991745 seconds)
done (took 38.828927764 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322650882 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100276018 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.099978431 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099599506 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.097650227 seconds)
  done (took 1.457988441 seconds)
done (took 2.170644798 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.294846788 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.169365785 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093510763 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164575611 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091890122 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170947991 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157737918 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11023343 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215027713 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.075786296 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161144443 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092562217 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075467843 seconds)
  done (took 2.610049098 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093405785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112329018 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082360049 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10945842 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075873974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1095825 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092151618 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11471578 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107562988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082955865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091746778 seconds)
  done (took 1.78405047 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092339357 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110569495 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081063164 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10819722 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0753043 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109325384 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091257779 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113678645 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107862402 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083518772 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092119976 seconds)
  done (took 1.7731882 seconds)
done (took 6.870322744 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089130476 seconds)
  done (took 0.794224344 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.903630604 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.580405922 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111762982 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147305331 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.295562326 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189534938 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.451966356 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123354361 seconds)
  done (took 10.716384923 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.142297066 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084275676 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098010604 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082544503 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100010906 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085443254 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097834736 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100052766 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082201256 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101551301 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081004968 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098492211 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099872366 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084217717 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101077386 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081794452 seconds)
  done (took 2.29444399 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11688119 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115969654 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10422884 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106937253 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085357787 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102783139 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10465854 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088387224 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100342735 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102051053 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089987525 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104748698 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10243758 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079289217 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105308313 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105992923 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085222032 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104659367 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105011136 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088839552 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105482874 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095066233 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085642584 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10375264 seconds)
  done (took 3.207476398 seconds)
done (took 17.722403972 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157876913 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107524743 seconds)
  done (took 0.981905259 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093797564 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111886363 seconds)
  done (took 0.927672188 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095662682 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094968356 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119556252 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107558896 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079101164 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094399166 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118370539 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079339123 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094351612 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078740467 seconds)
  done (took 1.687471381 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080976966 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107634218 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100320495 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093078436 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103175066 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093990651 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08627418 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096635702 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107773173 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07650754 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101503204 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112638718 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083933575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114900791 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103771748 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083336156 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.099901836 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097707312 seconds)
  done (took 2.469264409 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079020163 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097250787 seconds)
  done (took 0.901213989 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080543072 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092884863 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079143691 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095682486 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092655095 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075844841 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092552708 seconds)
  done (took 1.333246121 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.46512899 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134906926 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251273145 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083862418 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.117662998 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30094759 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096603917 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083625957 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101323219 seconds)
  done (took 2.415399449 seconds)
done (took 11.437560372 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09338644 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115638366 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110984096 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460497732 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10619605 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095763847 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158801927 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246906361 seconds)
done (took 2.116630248 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.147585621 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321153134 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112781497 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065848008 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093572329 seconds)
  done (took 1.321158438 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078775012 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098490942 seconds)
  done (took 0.907184048 seconds)
done (took 3.108934667 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080138566 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128325898 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078735528 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094985751 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078908705 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09461248 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075960752 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097199437 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079070777 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.094686325 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095737147 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.078804905 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09576489 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077175359 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093288085 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079204009 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093073276 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076083231 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093891853 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076679901 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095978085 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078764905 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093396981 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076592849 seconds)
  done (took 2.871346902 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098933224 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09647951 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101649779 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08416326 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10025761 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084078221 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101456684 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095878457 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084737652 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098642463 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098978811 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083501031 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098285855 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082446665 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097881214 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099579723 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084039411 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096365321 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080924726 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099214624 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100631789 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079443733 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100013633 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100629536 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082528515 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099396698 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081540012 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096037338 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101070348 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08300042 seconds)
  done (took 3.526624478 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083516841 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092935154 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077129136 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099978216 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076979623 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095217854 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076679867 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093828385 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078527234 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09373455 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07813032 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094152572 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077616441 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094653594 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078141936 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097086481 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105832618 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07747531 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094254518 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077341075 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096460755 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077122004 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094425604 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076476628 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094266983 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077000061 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094308436 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076478628 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095508504 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076607414 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096731011 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082272133 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095379993 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083961998 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098174063 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077387807 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097715622 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093139498 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077472204 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093737838 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076327997 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093993215 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076676322 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100546056 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076558274 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096207098 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076822803 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094776056 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077266129 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097705295 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076861001 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093648094 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078460168 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094422389 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097922863 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076521012 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095613083 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076359049 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096123371 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076918529 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0941334 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076645519 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096829815 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077337829 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109397802 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083396378 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094064548 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078820623 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094954178 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079696639 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095915206 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108143725 seconds)
  done (took 7.05605966 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082421957 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105130617 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078682425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096346271 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07524229 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094743308 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097299477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077122593 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096371265 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083927421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095168487 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079143984 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095208895 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10577725 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077687531 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096473562 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083952015 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092245595 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078075057 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097795159 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077723095 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09708703 seconds)
  done (took 2.703595265 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205123007 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103067476 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139904676 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105493773 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081854552 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104831656 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100506433 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085754921 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10043205 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08172933 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098317033 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101102521 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081499721 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098683404 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100058644 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083028876 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101759362 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083489132 seconds)
  done (took 2.599864991 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091693812 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097236504 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101639642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097233577 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097581442 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082642944 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103304795 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106601278 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082374983 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096633236 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089952652 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098932168 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100087408 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080451426 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099223163 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079943146 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100024472 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081044761 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106399073 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102469513 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10280155 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08915683 seconds)
  done (took 2.832652939 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095118804 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099527187 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115507027 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083069638 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093812256 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078418822 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.1046342 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079833609 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105855413 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099019611 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080137592 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096210773 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087510438 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096901889 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103177959 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08024735 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099066684 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080243145 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099702117 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076608612 seconds)
  done (took 2.602741113 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100981929 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099013718 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098850216 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090285048 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098484931 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081535661 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1079702 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099516615 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081429849 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122339733 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098571925 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081253125 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107969115 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10407065 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098044557 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089849491 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107649499 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107973577 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081446748 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099216013 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123615876 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082197102 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.217427698 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099094509 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081386383 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09816528 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0985938 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087712907 seconds)
  done (took 3.594951571 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079538597 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097339736 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078248472 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095355604 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077308106 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095330839 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077772435 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094778799 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079915171 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09536115 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080760444 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097442086 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079558733 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097361061 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079763977 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09696442 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082801965 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094452927 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077593822 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094249882 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079775158 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096987388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080066015 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094335088 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077854183 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097212916 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077741389 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094275594 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080254996 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094604876 seconds)
  done (took 3.37751529 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089854612 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105202711 seconds)
  done (took 0.94769252 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0777439 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113310572 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077731889 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10172055 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08551691 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097873352 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106348764 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085257405 seconds)
  done (took 1.496619611 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094941977 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108803164 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082164439 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.1098572 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.107721197 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.093084707 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15753221 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099278913 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086123789 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095966449 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.110582674 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079754869 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103597972 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080933323 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104266692 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086754358 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095130751 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086679683 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099278139 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096689548 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082949928 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10899723 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083672703 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095631428 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083018214 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108537219 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107971968 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083248363 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100790383 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106998359 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085756822 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093169479 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081344642 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100166943 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078648922 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107044975 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109799338 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084320754 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107365294 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082275815 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109977875 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093762453 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085841942 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104265887 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091041527 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098694506 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082026126 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093728514 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096480382 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082840748 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094538119 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081009608 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092611761 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088860056 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102137617 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111538993 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081281104 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102522482 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083950697 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101518374 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087593158 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100684759 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083788276 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097710219 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104988401 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084572756 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105528228 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076388335 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092064326 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080388932 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10663049 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121327731 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088753834 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099330969 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082195355 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096477006 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101808858 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08191464 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106364266 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089302595 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098401933 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105614755 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088818471 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097964739 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083760053 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105735054 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097149656 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084069098 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096777404 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096127412 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09805458 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079159968 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096161613 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10727394 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084997724 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098342852 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079434961 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106496702 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078106987 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100303751 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081892786 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098826328 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107867236 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087413691 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105248436 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106110092 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088456721 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098837262 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084631937 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09608597 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082198364 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101714068 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105738646 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.074865727 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102023851 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082638234 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099708154 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088682736 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09704025 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081555537 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105683636 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105962528 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080309888 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095393665 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084306242 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098504415 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084601853 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106221864 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097133095 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076545702 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094367066 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085242486 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099710711 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085476325 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1041468 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102485452 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076300722 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096766454 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086138055 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10644469 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098927356 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081700365 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103337546 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082043818 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098038482 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086873746 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100904578 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0802275 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104091992 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101546593 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07750418 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103407064 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084498526 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098192345 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.084873494 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102828904 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102364742 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082485401 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097839381 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087264303 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100756133 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080383763 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098874181 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080274292 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107316086 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10176553 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076544737 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095805597 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089313714 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097144234 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080468174 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097810767 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101438975 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083239214 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097470861 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081177145 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100583127 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110251917 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087299104 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100786943 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087085636 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108939204 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080813409 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100736686 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098770151 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082454375 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099609922 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087832563 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104913341 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104885699 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084397799 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095748455 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087698374 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10785227 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081082758 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096800063 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080181041 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10334699 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106844305 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08451963 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100808006 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079682753 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099228282 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103121019 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0839551 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099200916 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080320053 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104060011 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080991201 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105689363 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101036975 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.089983693 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102700655 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077311025 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102757119 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097679372 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087207228 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094585798 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079176423 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097994764 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082562942 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099341104 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084669444 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093703124 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106734136 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089208511 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099332347 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080752722 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099982641 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08965766 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101219512 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102794925 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084847798 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104525746 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094111356 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098826016 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084779464 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107820845 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100134878 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075375228 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105248972 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079998848 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099202289 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080274093 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098160551 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084493528 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109894056 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104224336 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075421696 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102933812 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080557276 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098283764 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076708144 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105810739 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103861842 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083416304 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108429355 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08273307 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100493585 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103936721 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081035547 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100417001 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.082695356 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103520838 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082998304 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101993657 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080555484 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101988372 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.098965264 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079547042 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10228201 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082610423 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100380144 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08783765 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102668393 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082179637 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102854057 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100614555 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082594008 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100379055 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081686916 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104100301 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083100118 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101088884 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084482266 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095537039 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107008254 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081381976 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10767504 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082118044 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096115585 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0869571 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104096869 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10437907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.0833592 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100499361 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083864887 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099615819 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084791056 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108309247 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097579956 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091894552 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106112806 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082962283 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103578714 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082186957 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101114999 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09879629 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083852633 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101025985 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08271177 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100349172 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.085854257 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102567013 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082251642 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102799171 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101178769 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082298041 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101346003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.075745492 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099547704 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081773221 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100338295 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106895035 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082983202 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104223955 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080759747 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102774224 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081758731 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097467254 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091764953 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110871124 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101463458 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090255098 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099613401 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102699808 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091491815 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095045402 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080345811 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098856782 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079563034 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108298828 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082812755 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108181373 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100395181 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081351089 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097631815 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08262781 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099307481 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076361416 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098646033 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085365247 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102727663 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080551828 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100952315 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102950437 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083809089 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108078353 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081889744 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102819478 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082886548 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097892307 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080493374 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099021427 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102237295 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083814411 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097642741 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079349927 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101202039 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084549948 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110003486 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082143562 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10268365 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106960807 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082257935 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103216638 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087008614 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095504834 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.084673604 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100721741 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081822469 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099232785 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104672225 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085651557 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101359634 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089152538 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100262777 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083126491 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099982587 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098422698 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081171314 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099894655 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082439701 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099518945 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084338044 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10925625 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.07967062 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102573166 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099760409 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083030171 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104936162 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083536355 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102505319 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109101905 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085258769 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102014156 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089049967 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104084227 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086280056 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102394992 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102792595 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088285994 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099425531 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090635604 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10057097 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083427962 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102407819 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079769236 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100602815 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099673091 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081284994 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105684544 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083282452 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099508998 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080973654 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098594728 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085160059 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105219425 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1079543 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085300784 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103732291 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077582106 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098026692 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083750827 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099316119 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101609729 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086223862 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10702475 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086223927 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101305364 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081655082 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108981928 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107590795 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087634391 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099919185 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087333212 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102349919 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084922894 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102470954 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081848163 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103755985 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106816131 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084143088 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100458977 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090543534 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105058081 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101971578 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083880975 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100921701 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082541427 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095762259 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083201865 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10298001 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089103384 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103952004 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100343021 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091621626 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100187529 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082555372 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104712339 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081747339 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107481266 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097362518 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08287649 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101562937 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084381986 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096609969 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082221619 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099053183 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085368053 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100123795 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077318299 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110767435 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108422054 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084839855 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099965757 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081332162 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096968326 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078275128 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101043247 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101987158 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084628441 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109537433 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081817723 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100317123 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078202041 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101322179 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084914659 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10388655 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097943816 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078524926 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099334387 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084735541 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107656771 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081562305 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102751932 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086601376 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103931098 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099157903 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086929729 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097167253 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086852567 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111995572 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083742397 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101886733 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.10721322 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090583685 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101842476 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078105519 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102704158 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085252474 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101536927 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102948989 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084105972 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115717975 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086035692 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100781072 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08067686 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105238069 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100371842 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089595629 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102388496 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084092144 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106466712 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08503661 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110762079 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10402085 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088327652 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103630461 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083935583 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100703763 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101165788 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08134818 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099614252 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083854137 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101940375 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08800832 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109411292 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100091697 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09212453 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109551236 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086641739 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098371753 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081909338 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101372993 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078269524 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103453186 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099055607 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080761592 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099762776 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081976402 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102130484 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089541613 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104239781 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084701621 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.1020328 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095932368 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084944593 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104440608 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084991498 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098754766 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083571996 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102607324 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08902768 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108974633 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10227043 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08560612 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103585634 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084074255 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097349471 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090432588 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100855713 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086147807 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101569516 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083299636 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103694787 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1053627 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089738161 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103838208 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085426692 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114626562 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105013037 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081497069 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099568127 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088894424 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100718301 seconds)
  done (took 56.980370369 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146167917 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08045765 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097237708 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078133673 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111798971 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098543007 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079836284 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0986331 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080140848 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100293876 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078883004 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097773257 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108191508 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123155932 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092913155 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102536447 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096767399 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079785575 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097379584 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080431819 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108165741 seconds)
  done (took 2.838659351 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104744996 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116356866 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113515844 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116874525 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089160841 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114850186 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11385825 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114912636 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097776283 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110107748 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116825437 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11411294 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090073372 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110833569 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109463841 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09210969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116706192 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108021774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114389105 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09468889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111308125 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113598812 seconds)
  done (took 3.186252186 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084332338 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101488512 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085160181 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097416942 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082931822 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097093844 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087691921 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099161812 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086332789 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10057957 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08144332 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100978862 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103383939 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078622802 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101356465 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080386864 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149545749 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105676132 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082565802 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103868729 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097998759 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085032908 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097705966 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078843471 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100436346 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086730249 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10357664 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080985162 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101563552 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082828102 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101715302 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079931304 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103974806 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102712536 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081800565 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101270838 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083173512 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101466386 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078783054 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099919652 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084131523 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097840537 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083142028 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103503629 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.0803242 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10037242 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084640793 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103268637 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096863866 seconds)
  done (took 5.398731846 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103519119 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159619979 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084982989 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141982287 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119852296 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112434724 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086437828 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141003857 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101650197 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082470967 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121638091 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11842356 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102688175 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089001811 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109587328 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103092747 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085515006 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101884967 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107605821 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083196409 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10757044 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089356424 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117606081 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115725595 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107448996 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082443207 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102303147 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10764716 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095716001 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107669252 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108493767 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089404137 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120292919 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108268567 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101134766 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0867419 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121059907 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103235609 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08654621 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099572991 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085087625 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108594579 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109150597 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120945685 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08424775 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107823973 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082661625 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099673058 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11613889 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086155403 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112458749 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118330737 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106041831 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083763043 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107730713 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118975632 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083383482 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101581272 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106734302 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097732021 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101276776 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106437325 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.098147392 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105913799 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111306338 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098429007 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108410721 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107315089 seconds)
  done (took 8.031296574 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09346871 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110108647 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119042682 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119365513 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090079256 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109445525 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110242995 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09058092 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109374927 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114988195 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109737626 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132514222 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084993721 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113318909 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111064851 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091455676 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110828785 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110061136 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090942262 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110613874 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109318681 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119330269 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09031696 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119568462 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14033557 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1049697 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09056458 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109872895 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118941636 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110459341 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121782826 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091457344 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110351689 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119612438 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123152508 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09038024 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103406017 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109777665 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09061189 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110117292 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104303784 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119481334 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090968279 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103992212 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109710367 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089977409 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119357352 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12326744 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11359649 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096726744 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111004184 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119469115 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110261973 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091210735 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118483231 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146021795 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119123234 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120324592 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110111702 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119728547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100350396 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127218908 seconds)
  done (took 7.593855288 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106672748 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11429517 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117252824 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098963533 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082090834 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10808261 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081609904 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101653722 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113137467 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093434736 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115341751 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10696232 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110119184 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096386859 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107878343 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110769117 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088570614 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108472928 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114209866 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108163262 seconds)
  done (took 2.900197881 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092289224 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123008267 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084689371 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110949113 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107698982 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089996831 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106823524 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105873694 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085488117 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106663551 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094395726 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115149217 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105126514 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090069867 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11501777 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110272475 seconds)
  done (took 2.458034245 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094956422 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116278937 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.118360955 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084195277 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102822136 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08054727 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104883778 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099570099 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080141086 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119650462 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083901185 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107267018 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104088285 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082101205 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100356625 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086809386 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099797613 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081394673 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104485233 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120932413 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094774155 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103642129 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103853481 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085679994 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104241623 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088610096 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104756419 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101221954 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083054412 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10394851 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084589962 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113288985 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100358246 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083568725 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102284145 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081899189 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104016777 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084581024 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107413318 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104396991 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082498447 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103903529 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08495378 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105935344 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080110034 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104760424 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100370383 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090903546 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102727789 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084651307 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104021256 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105638417 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085537002 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114458275 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088238455 seconds)
  done (took 6.170569117 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10014024 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108010254 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080169411 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10263403 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087720423 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10690606 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107262518 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087957991 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105848305 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082860478 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105339138 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08871066 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106763801 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106815729 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086462198 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107954899 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080171752 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105327274 seconds)
  done (took 2.582782825 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090223813 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103976108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091673453 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104475155 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083872636 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107755002 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080181601 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103640365 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102713136 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084700194 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104683919 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087456046 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102674161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086627013 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104534968 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083532097 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107703616 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102535245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084633369 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099583116 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086700399 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103402826 seconds)
  done (took 2.930973137 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116998651 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123290778 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091434376 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.226391881 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103593249 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131130888 seconds)
  done (took 1.618181282 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107774171 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119589014 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105225825 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106500069 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114029172 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106466079 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087523299 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10674591 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116474409 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101203937 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106336239 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116862246 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116009301 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09530644 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113247763 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112934697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106040167 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086455404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105528211 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127681363 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086675542 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117914994 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106256256 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086130703 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106692385 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116040745 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116618188 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121522878 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086759546 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116581051 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113284601 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086560756 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117084587 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120672914 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107379227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096217263 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107158959 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127094435 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113143934 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095678922 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10848729 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113273869 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096225505 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11190988 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117197893 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106434808 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092524529 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106700086 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106783532 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133138901 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093166245 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116706539 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113727784 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116503369 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116414755 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133191413 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101272385 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11657359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113472384 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121906571 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11634867 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093843102 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116486382 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122064304 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114035677 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116349284 seconds)
  done (took 8.045601729 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100862748 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125460053 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107264379 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121276712 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096059088 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107416152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106668838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086954393 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107142276 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10673817 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150362539 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087681244 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118436943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116632144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107052328 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087830825 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106959262 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115935005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085907929 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134522487 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108501481 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115965927 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116219493 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096276581 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121428347 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114556819 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107553016 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087516148 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107433957 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106042322 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092814539 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107630676 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116754671 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08631858 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116520157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107295646 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08701301 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113759195 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108138024 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113958263 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097199076 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127280647 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107523579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106644522 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121213896 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088102909 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106544779 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085779374 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107232539 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106083574 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121397242 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100625487 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120374747 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117194436 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107436055 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086753419 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107716601 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106568406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08670081 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113980692 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116207962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106695243 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134695815 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087163937 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107668442 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116312014 seconds)
  done (took 7.930935967 seconds)
done (took 153.004721769 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098176402 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135820797 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09452377 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167507602 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105373592 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118957623 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137148329 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096924426 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.104947624 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085142359 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106271666 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086598358 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170819576 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084434367 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10520471 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106876116 seconds)
  done (took 2.633858489 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198520528 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252065676 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101270429 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104985846 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088111937 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109216099 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10415926 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090208206 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108707203 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085458607 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107876535 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085733123 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104420382 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085386493 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109020581 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086770301 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105132576 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086969676 seconds)
  done (took 2.849243729 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112433295 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14427413 seconds)
  done (took 1.097136035 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119425498 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178198443 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293506129 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154155258 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117574334 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126028128 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15453302 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128931571 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19555692 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122161679 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121477069 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096801183 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138641346 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114150396 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093120776 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116759151 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14093726 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092694684 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114629108 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114392416 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116138838 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104927084 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114205565 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092798147 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180201774 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.11878874 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085094253 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105879974 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114826137 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093805012 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113586596 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123479908 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096518238 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173587236 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102416587 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174824209 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09674709 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110941412 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113950379 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090152529 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118632601 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117748858 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103778869 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117021181 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086254306 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118516495 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104752021 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084646259 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113736066 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118228264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09332956 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111830855 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153877235 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11701034 seconds)
  done (took 7.450968462 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.790475212 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161849245 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089482137 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.874205338 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137282354 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102548223 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.773458745 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132035359 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234102723 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752522301 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132898983 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120651998 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224288643 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236478966 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.951324979 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3083707 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.664673723 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101859736 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147649598 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151919778 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117690065 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136336361 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12928023 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428472709 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.093666005 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111337405 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116007673 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099024259 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157409147 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125004398 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114330968 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176761253 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267769486 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181838087 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114609236 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088383851 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111473236 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166825132 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263123095 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212630079 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178704447 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086589775 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111004601 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120640292 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109099582 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10781924 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162268785 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193279419 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170914813 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091206526 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120535343 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119703152 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119349065 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163576832 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118772707 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.294810981 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308963663 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110843558 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119130414 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104967159 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25974662 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121746523 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221035372 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114630109 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211011461 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109814133 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775426422 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188069271 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088457582 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1179672 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117506826 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094793517 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120863416 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167785063 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407079466 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122480081 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092778701 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111383739 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203222999 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124313177 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110311075 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160475606 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114301009 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097494241 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124165963 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121513015 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168148939 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230511188 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123505703 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118790617 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092796688 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124283553 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115619071 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211925363 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215967136 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.1599813 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209225053 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122558597 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162146346 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187869856 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097263379 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192010169 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096347485 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125633669 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122648992 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211845344 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143579774 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100488536 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115876655 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116978287 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148684401 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12494397 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097116625 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167438806 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478017576 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165937934 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10874276 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126013118 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098313991 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158695493 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117563106 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259917708 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119388508 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167963859 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116577125 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087607901 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118554945 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162083208 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122237277 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096781357 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122546511 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117961527 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233439074 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213792067 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122770995 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218106901 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182468721 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11761061 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169525406 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119552383 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166101175 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119700549 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120326868 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094173167 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794269886 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122572342 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09722061 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11504347 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186517548 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11022247 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101643723 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122872614 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106906702 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780617862 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126814484 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120525242 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10188264 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118148203 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117643684 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095269229 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115323571 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159513645 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225035816 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121006097 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117614596 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103093892 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178837341 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094443588 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123864546 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1231371 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102252365 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119530553 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113854389 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100749108 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189769041 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162155184 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216427151 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.585103448 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09014606 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.1247019 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225030187 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089562223 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291661439 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118534084 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.21907843 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16298331 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.118568218 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305349579 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16679565 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186054272 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.124774303 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172639504 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086464352 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117484029 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166941455 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112303886 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116582012 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160740529 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124392904 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101634236 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954394334 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11084645 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228064224 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107582842 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169960635 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093560978 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119842774 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293932667 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110174959 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106903109 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182976779 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092361334 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126999687 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.84905436 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123669067 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121295373 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117782739 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217910637 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162809781 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096802984 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119151654 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12073891 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161048053 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206968229 seconds)
  done (took 43.835418801 seconds)
done (took 58.701123843 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270715644 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210337793 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.255982528 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166499072 seconds)
  done (took 1.841195223 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.167895824 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14605846 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118764655 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10598066 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.14754787 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085038381 seconds)
  done (took 1.635120046 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.34707889 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266773249 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235481404 seconds)
  done (took 1.716517704 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283953545 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247481607 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.350209605 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.411009236 seconds)
  done (took 2.274112925 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.205822513 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130077413 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109126273 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102973215 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.192722785 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245316873 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138504362 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199091636 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121230038 seconds)
  done (took 2.355471794 seconds)
done (took 10.689566667 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.251424205 seconds)
    (2/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.143399999 seconds)
    (3/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.177795791 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.158547968 seconds)
    (5/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139113576 seconds)
    (6/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121746825 seconds)
    (7/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.225648609 seconds)
    (8/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093092482 seconds)
    (9/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124484421 seconds)
    (10/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122101972 seconds)
    (11/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.236620972 seconds)
    (12/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.127605191 seconds)
    (13/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116367272 seconds)
    (14/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115301784 seconds)
    (15/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.23983656 seconds)
    (16/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.248838223 seconds)
    (17/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.133234905 seconds)
    (18/286) benchmarking ("sort", Int64, true)...
    done (took 0.227158445 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.20980166 seconds)
    (20/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.133685676 seconds)
    (21/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094447776 seconds)
    (22/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.121562233 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092099569 seconds)
    (24/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.178919692 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137356285 seconds)
    (26/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.210357087 seconds)
    (27/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089373737 seconds)
    (28/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113392321 seconds)
    (29/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076990954 seconds)
    (30/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11550962 seconds)
    (31/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100004895 seconds)
    (32/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.123261935 seconds)
    (33/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114546413 seconds)
    (34/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.174200395 seconds)
    (35/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100209887 seconds)
    (36/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.204039496 seconds)
    (37/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116355196 seconds)
    (38/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092293367 seconds)
    (39/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120038386 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096049461 seconds)
    (41/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110763936 seconds)
    (42/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.220729162 seconds)
    (43/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.182311921 seconds)
    (44/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095872484 seconds)
    (45/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.235837424 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183955634 seconds)
    (47/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.244675715 seconds)
    (48/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.128990645 seconds)
    (49/286) benchmarking ("sort", BigInt, false)...
    done (took 0.239387608 seconds)
    (50/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104691629 seconds)
    (51/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.110720182 seconds)
    (52/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095864181 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.138943358 seconds)
    (54/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.208937472 seconds)
    (55/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.134929829 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097052719 seconds)
    (57/286) benchmarking ("sort", Int64, false)...
    done (took 0.108702152 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.133584926 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066026823 seconds)
    (60/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.087802928 seconds)
    (61/286) benchmarking ("sort", Int8, false)...
    done (took 0.1847779 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108470023 seconds)
    (63/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111269115 seconds)
    (64/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.201970102 seconds)
    (65/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120215122 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.193057584 seconds)
    (67/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.23327866 seconds)
    (68/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.148876625 seconds)
    (69/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096468457 seconds)
    (70/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065966737 seconds)
    (71/286) benchmarking ("sort", BigInt, true)...
    done (took 0.231190805 seconds)
    (72/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170634141 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.169914325 seconds)
    (74/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090974824 seconds)
    (75/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.141051731 seconds)
    (76/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093959317 seconds)
    (77/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.172270773 seconds)
    (78/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119668662 seconds)
    (79/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.172279035 seconds)
    (80/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.141645732 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137140726 seconds)
    (82/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119100794 seconds)
    (83/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066360971 seconds)
    (84/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230156807 seconds)
    (85/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065234641 seconds)
    (86/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.110507348 seconds)
    (87/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09291744 seconds)
    (88/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131861138 seconds)
    (89/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11827658 seconds)
    (90/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06635073 seconds)
    (91/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150427299 seconds)
    (92/286) benchmarking ("sort", Float64, false)...
    done (took 0.147023461 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.134513847 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10797437 seconds)
    (95/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.119103001 seconds)
    (96/286) benchmarking ("sort", Float32, true)...
    done (took 0.229926571 seconds)
    (97/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110054978 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.184087824 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.159668452 seconds)
    (100/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123591514 seconds)
    (101/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120123072 seconds)
    (102/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.130495791 seconds)
    (103/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.170527517 seconds)
    (104/286) benchmarking ("sort", Bool, false)...
    done (took 0.179944544 seconds)
    (105/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096177077 seconds)
    (106/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108356891 seconds)
    (107/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.115756864 seconds)
    (108/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162532512 seconds)
    (109/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113155308 seconds)
    (110/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.13048527 seconds)
    (111/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.112585619 seconds)
    (112/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117308182 seconds)
    (113/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.181791041 seconds)
    (114/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067710113 seconds)
    (115/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090986977 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.137187604 seconds)
    (117/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121258919 seconds)
    (118/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093676463 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115648161 seconds)
    (120/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066595109 seconds)
    (121/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.172716596 seconds)
    (122/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.07692185 seconds)
    (123/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115789901 seconds)
    (124/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.134305033 seconds)
    (125/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.089282178 seconds)
    (126/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.09626559 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.089411928 seconds)
    (128/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094390898 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.135880685 seconds)
    (130/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.1146146 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086128141 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115410696 seconds)
    (133/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087435161 seconds)
    (134/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.114576347 seconds)
    (135/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096431268 seconds)
    (136/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.184264238 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.069537406 seconds)
    (138/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.089576426 seconds)
    (139/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092998743 seconds)
    (140/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108824095 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095887931 seconds)
    (142/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.097982887 seconds)
    (143/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092949238 seconds)
    (144/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.108858576 seconds)
    (145/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.133660625 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108627051 seconds)
    (147/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066004441 seconds)
    (148/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.179070964 seconds)
    (149/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.139798572 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086531263 seconds)
    (151/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109587367 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096124041 seconds)
    (153/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.108560758 seconds)
    (154/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.108624426 seconds)
    (155/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111562471 seconds)
    (156/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.152473203 seconds)
    (157/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065453948 seconds)
    (158/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.154870213 seconds)
    (159/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065707519 seconds)
    (160/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091503342 seconds)
    (161/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109840415 seconds)
    (162/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115827605 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095902974 seconds)
    (164/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.074658995 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.134222437 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114948367 seconds)
    (167/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067264574 seconds)
    (168/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135338351 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067026858 seconds)
    (170/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.137299364 seconds)
    (171/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100248232 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118056519 seconds)
    (173/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135355499 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112747388 seconds)
    (175/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180636882 seconds)
    (176/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066980834 seconds)
    (177/286) benchmarking ("sort", Int8, true)...
    done (took 0.220413595 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 0.221663292 seconds)
    (179/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.089381478 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085177403 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107754326 seconds)
    (182/286) benchmarking ("sort", Float64, true)...
    done (took 0.230611618 seconds)
    (183/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094980722 seconds)
    (184/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172555676 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086342587 seconds)
    (186/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173171208 seconds)
    (187/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.139031397 seconds)
    (188/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.1107895 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.089077578 seconds)
    (190/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.165056028 seconds)
    (191/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107751276 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085342639 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118882871 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.116616734 seconds)
    (195/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065835948 seconds)
    (196/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.128130698 seconds)
    (197/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.089145934 seconds)
    (198/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097908996 seconds)
    (199/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093433515 seconds)
    (200/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086051894 seconds)
    (201/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.110249256 seconds)
    (202/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067702501 seconds)
    (203/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.103937221 seconds)
    (204/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089930132 seconds)
    (205/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082104597 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109520243 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092394914 seconds)
    (208/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089397835 seconds)
    (209/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095350927 seconds)
    (210/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08810792 seconds)
    (211/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.130127492 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.106466417 seconds)
    (213/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.365837231 seconds)
    (214/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092297283 seconds)
    (215/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.0672563 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.1103326 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087083965 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122900864 seconds)
    (219/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158923418 seconds)
    (220/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111393726 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107406354 seconds)
    (222/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.161281689 seconds)
    (223/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.088391793 seconds)
    (224/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089408015 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092465933 seconds)
    (226/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06597478 seconds)
    (227/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077312525 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.183269396 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114160966 seconds)
    (230/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065993627 seconds)
    (231/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091669351 seconds)
    (232/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120877989 seconds)
    (233/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.106647605 seconds)
    (234/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075804609 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085668896 seconds)
    (236/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.089211116 seconds)
    (237/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066782713 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108158131 seconds)
    (239/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087176296 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114829173 seconds)
    (241/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066867116 seconds)
    (242/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.089222142 seconds)
    (243/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.0684328 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094042437 seconds)
    (245/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08897394 seconds)
    (246/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085342473 seconds)
    (247/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107954085 seconds)
    (248/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06816085 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109802064 seconds)
    (250/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067945347 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126550253 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086394674 seconds)
    (253/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.161211525 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122313086 seconds)
    (255/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067168798 seconds)
    (256/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066074874 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116440352 seconds)
    (258/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091882142 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107736725 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076513856 seconds)
    (261/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089505628 seconds)
    (262/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066679595 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.106671697 seconds)
    (264/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087646789 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.11590989 seconds)
    (266/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06643311 seconds)
    (267/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085255167 seconds)
    (268/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.089459499 seconds)
    (269/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087483501 seconds)
    (270/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.088546482 seconds)
    (271/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066008861 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092437309 seconds)
    (273/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089160926 seconds)
    (274/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067508785 seconds)
    (275/286) benchmarking ("sort", Float32, false)...
    done (took 0.171758921 seconds)
    (276/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.07778732 seconds)
    (277/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.089652919 seconds)
    (278/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066642373 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115370371 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092820608 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108861803 seconds)
    (282/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.074963637 seconds)
    (283/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085100909 seconds)
    (284/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109127972 seconds)
    (285/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067485614 seconds)
    (286/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.155943807 seconds)
  done (took 35.64322691 seconds)
done (took 36.511356312 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099800537 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145485011 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094973483 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134635361 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121825504 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090029634 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116938956 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096436223 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121275361 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122947828 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097073629 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.091802571 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096851821 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118061114 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095595788 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136683162 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121626682 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092837118 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117662271 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084635762 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.116760009 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085760107 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110549101 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069178659 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.11934438 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093357787 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114563266 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118275664 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086709142 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108743528 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091585562 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114908369 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086641691 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121638617 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092570564 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.116395745 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095863998 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118336628 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.109705732 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086422151 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116560645 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085925037 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.1153526 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093398886 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113833782 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091859223 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.116053634 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098771313 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137668694 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114078013 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094274912 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120618629 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094639699 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116162983 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089731472 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117902641 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090939544 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137371076 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118056057 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090658355 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116826942 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094189486 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114464557 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094309268 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.116734461 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11912866 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096992709 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11369919 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096201818 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114318482 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085283963 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.116527518 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089484693 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.108031252 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09469443 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119859529 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108289757 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092366772 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115391114 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091598549 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108297994 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088330493 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110111111 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09162423 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111275981 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068667084 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.112293904 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092262567 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108224751 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095355775 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114476819 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092780019 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111071065 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097770516 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109258453 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092060105 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109630437 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086062907 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11151964 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.08998059 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109648167 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088628915 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118483214 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111378139 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092969794 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121992423 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086745112 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115146129 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085915903 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109017378 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100571119 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119914169 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085939589 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114450997 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085585631 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116521216 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085347025 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10868585 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.108367811 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086256987 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115254581 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086078346 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111807556 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.092675 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123359521 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086577272 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113029876 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088560542 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.108852203 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091875549 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109950171 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086996625 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.1108181 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077248655 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111869247 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086847415 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11702353 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089234804 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.1175902 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087884253 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118641291 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09105791 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11499004 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114230499 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085606361 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07370738 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114883593 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088793308 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112368522 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086565039 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111841455 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08594038 seconds)
done (took 16.69086969 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086360649 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181241452 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.14807099 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140533429 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106234145 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111044054 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121065782 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117033784 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113177736 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140159227 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109150511 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.129998533 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145676234 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085747234 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11067519 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090626764 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111545842 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.1015401 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143662519 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131205537 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161042933 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08584382 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.143580334 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133429611 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118836785 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113350969 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110691219 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090791162 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114299088 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101987784 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130603249 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113480694 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.086495372 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131711558 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103366757 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117513134 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087008938 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11696632 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086505691 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110664997 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139222038 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132143443 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092274503 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116343158 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090740031 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112771194 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088789028 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118758186 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096827019 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114833267 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124281236 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.153228745 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090550692 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.119480648 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085395175 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120626623 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119097355 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089837323 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111515199 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089987463 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109800395 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090688736 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124838638 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139500984 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092014719 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12017633 seconds)
  done (took 8.483787755 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104460134 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137321755 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105165251 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129643936 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110217187 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087393172 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11122968 seconds)
  done (took 1.713161922 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087406767 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132974388 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111074141 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134242929 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130569899 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111548896 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121725507 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0880028 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13102903 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088221657 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132645783 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148950472 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089032188 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119552758 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135859184 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087876817 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135517232 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087563498 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11500746 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110842692 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115001022 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133021275 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091179591 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112014284 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101637386 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112874913 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160432243 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093475207 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113379186 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091299304 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110358952 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150047748 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102019343 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123499195 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087582584 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128208128 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126486198 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086728525 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.124492782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092827309 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126915278 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088964956 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114112372 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086504673 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116718002 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098786757 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116854541 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106008378 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114859137 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131147702 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088636302 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125878198 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088251364 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115918601 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09021874 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118005483 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097445025 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.112566749 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132746989 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089620995 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12875417 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104579184 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125393469 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128147171 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09058531 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125996616 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102315608 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115321259 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089667852 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.115950652 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10347249 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.110496938 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089871403 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.122767392 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114253089 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111392811 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136150009 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089747752 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123515672 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113002373 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088608475 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113150617 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110706196 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117299877 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088690031 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116154747 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091467961 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.110516231 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087425432 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116111935 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086694805 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114107442 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090928951 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.112760886 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090972594 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129634298 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113817225 seconds)
  done (took 11.668315964 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088967841 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113981118 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092050722 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113204797 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089850415 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113452504 seconds)
  done (took 1.552015492 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114724696 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115912747 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102750324 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119166132 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154468605 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.1023078 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128884782 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122852232 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107514503 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12517038 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128133305 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104605208 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.133935962 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120621752 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103506738 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118802563 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103633644 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123720563 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125989401 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095359866 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135859578 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119455573 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096166453 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.129977333 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11729521 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095210636 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124781279 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102785498 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125424896 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121808121 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095216353 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116962959 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094411695 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121939187 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128424644 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09467132 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119794967 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117240916 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098856418 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116689742 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104186089 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11977862 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125413927 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093661006 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121833328 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120168724 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093326341 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123900457 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.101667506 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118296088 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117296023 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094884704 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118787195 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093221875 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121284089 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124897588 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093071887 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128527853 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120391733 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096192265 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116683347 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092164867 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122079525 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116729311 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102758059 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.116972564 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119662072 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095849794 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120433109 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095839062 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118419853 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091809687 seconds)
  done (took 9.110098248 seconds)
done (took 33.454074807 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.683480788 seconds)
  done (took 1.624936793 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.805581623 seconds)
  done (took 1.758231154 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.627753561 seconds)
  done (took 17.599666204 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.484247919 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.567598562 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.970793022 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175889995 seconds)
  done (took 3.150597226 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.936744937 seconds)
  done (took 1.898545875 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.279698599 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232994823 seconds)
  done (took 1.457922147 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.758344864 seconds)
  done (took 1.717779224 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.405652104 seconds)
  done (took 2.351804535 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320515134 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181340744 seconds)
  done (took 1.472721883 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545349528 seconds)
  done (took 1.500453745 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.537413813 seconds)
  done (took 11.49806491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262986699 seconds)
  done (took 1.230128045 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298944388 seconds)
  done (took 1.258209482 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.411036622 seconds)
  done (took 4.373284147 seconds)
done (took 53.845685618 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099493299 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125413724 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101187962 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122434276 seconds)
  done (took 1.411742687 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100403976 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119069683 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099509698 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118951713 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124064573 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096284525 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121246877 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099459398 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118912822 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095825218 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119830677 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118532297 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098836977 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120912211 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092828719 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12184071 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122659562 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096004652 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123521844 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095350556 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118403781 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097180081 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122972901 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093235443 seconds)
  done (took 3.600275855 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101265408 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117733145 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095961037 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116560502 seconds)
  done (took 1.406037145 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100700523 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129723643 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104110016 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124024774 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130143726 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105432355 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115278046 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091180867 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118190133 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098272338 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114056248 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.137804135 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105149409 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123583521 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100925419 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112130407 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.089934481 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129503565 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123337997 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100688511 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116936343 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099468848 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.113480872 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108252462 seconds)
  done (took 3.661903834 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170204694 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12544525 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136384558 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09432719 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157571581 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138593591 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087141231 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.138385236 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087539692 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130050224 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.115987518 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132564905 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127033609 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087269523 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112129197 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086328462 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126987056 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126830753 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.089811446 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126287372 seconds)
  done (took 3.373363787 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098198394 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115764887 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087134367 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115034234 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098916368 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119449372 seconds)
  done (took 1.610101149 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092667487 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112721198 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089253296 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112956637 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094294485 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11362845 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088725116 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113185997 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089516508 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114855665 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089064534 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112256063 seconds)
  done (took 2.200378731 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.497869757 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118977061 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118982593 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088129045 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12023516 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088404938 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127341537 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091434131 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139424067 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08712861 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114717346 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093266244 seconds)
  done (took 2.660499063 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233795754 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124192386 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279059976 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36092108 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154111064 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163348487 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275963219 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159300415 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195384966 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147513514 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226569595 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194553011 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150668624 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214440217 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110531179 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143429564 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187100167 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247546862 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150737146 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208363357 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203182408 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16548466 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178625475 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150721669 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110443461 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191489892 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094340673 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128410521 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229404103 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178436382 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185910398 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159273173 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144144659 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234015837 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244774865 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191803666 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275237106 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132862781 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.164601515 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165874068 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234465365 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138033311 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231410187 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154113956 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104141351 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218798887 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163251799 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174209519 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14373522 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13665412 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195425636 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238880447 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190756206 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137030295 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295775247 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146863562 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.155441544 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186576311 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246285032 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225741738 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186138105 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119860745 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18528145 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188395225 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208741895 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150705934 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179855374 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144827856 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180901548 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186776732 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163527257 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20220722 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178784651 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13719612 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169286424 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171552736 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170158544 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256601275 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183680786 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120551645 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168872203 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146797074 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129516197 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166368263 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123577913 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237912402 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11602958 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161650676 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231724569 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131067749 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159892632 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217856024 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18192289 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147811573 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083208624 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151574199 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153313859 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174386045 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138324075 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156791961 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155211779 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127800999 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16903738 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097156358 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208499326 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091433855 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171243148 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207585772 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.09937334 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159669588 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151664372 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149283079 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175826368 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19539844 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139223185 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132732885 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207458099 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177372962 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139285498 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174647603 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227150236 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11526307 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147178627 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224422202 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239718002 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112006067 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22631404 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151464329 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10819765 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132223624 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177306782 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154242863 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159687526 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130840832 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18115474 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229216693 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097736525 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136833354 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192033351 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131981941 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131165801 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152620813 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145713385 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111303197 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.141520464 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.142903218 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174560907 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176337499 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153342006 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164497837 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147662628 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244979504 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138503581 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148855911 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120736022 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119843894 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190027307 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224225706 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102481128 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229537354 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167976823 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220975958 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167908419 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106673931 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174039585 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12893966 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118833382 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191355107 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166035366 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159210069 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19207668 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218568651 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175468986 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.205673508 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164142933 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172036858 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164531912 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155005108 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.109269973 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158678443 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155836503 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12220216 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138208945 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10637205 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14694937 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140646103 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131379836 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194737038 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166868663 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212717482 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156820032 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14719179 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179252436 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100618664 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200730176 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178038544 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143142505 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196214499 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190477659 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211314482 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115759146 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225170508 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119536127 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097973235 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140833468 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168465986 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133310443 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107521415 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160083753 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205813772 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179629573 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170719583 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227813439 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17432057 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189332327 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09392863 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.165825585 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18197938 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19965464 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.152637837 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137051401 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.1497429 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176207305 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152726389 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251833077 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166819546 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17457424 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23043214 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122122844 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130611241 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147751053 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176449214 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150757807 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17252109 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145227616 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138143452 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158632429 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.101661105 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184619029 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183088054 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161028174 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184318624 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147700912 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209266206 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10025944 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159198295 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15893909 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163595324 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107754151 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172513231 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198561378 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144773727 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165155445 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213679639 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10349656 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304633096 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232112209 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191186396 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13614593 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153969394 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160013218 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160386762 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167365199 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177059745 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155881958 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185919358 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157324867 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134490861 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136337033 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147076168 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123665085 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131541617 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146998274 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175603237 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136866231 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184963975 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152720791 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157210297 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169900462 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148305903 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.141961048 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147642765 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215023989 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180722902 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235898335 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148963636 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175574758 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20332586 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125271773 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129669786 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104435994 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174587345 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134292923 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214162419 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.185727751 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196881141 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204121852 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17642261 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137110266 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09199105 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155685238 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167856112 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224851583 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146546472 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.119291766 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228089545 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108756949 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132767237 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164127233 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284341767 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142715494 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217990953 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080707034 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277595162 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124009519 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104261326 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161209636 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230978856 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133330813 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.150635675 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164499216 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159113225 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16120983 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1470051 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214066639 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208545331 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223844784 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181581578 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.103440225 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154893825 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199954985 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190299372 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154074274 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.136840988 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204426061 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192619236 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220914786 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1137065 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193629595 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165624333 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155533334 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184749512 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132497566 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203993703 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13330391 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188899516 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150714673 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136503087 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173520371 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.210657879 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112714315 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211854805 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180890147 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133600018 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104339366 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189855894 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177280958 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152661501 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099002487 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205803292 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097071194 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215876365 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232321737 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131914019 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153910353 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144654842 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107181317 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151024919 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155643836 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137228284 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.1611362 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198865943 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133401814 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187471398 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225756354 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169159728 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170929615 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144505935 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691024114 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128861339 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192716387 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145444834 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2030232 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149855746 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170316772 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157392047 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165901098 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219828881 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159166972 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228361247 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190148913 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.174813973 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131128475 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155302333 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15271784 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142067061 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150979732 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165835139 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158996327 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142775018 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176598792 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162390523 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.132824835 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11273834 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223284127 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119641527 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210931065 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178191517 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10921057 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1974613 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183606654 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132026419 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178566041 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231692489 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113083915 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147009077 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132918092 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149304783 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256295593 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096141228 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213881001 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182164745 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157660849 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166778283 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144896225 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190380949 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155267236 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209352845 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114551073 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156751602 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155648371 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137046771 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128686294 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15495511 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166861232 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120510074 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184335482 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.136502403 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192415957 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123142133 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1427565 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280167225 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176208249 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241101951 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105987818 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134975187 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16208444 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148313555 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174768091 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1755521 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134322895 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132744495 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.133225725 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.127557199 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110554174 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153740038 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187436159 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187758307 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205151178 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134310006 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276662738 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111803145 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155215339 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113531689 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104321899 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147365622 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144404153 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153399453 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189505128 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258217067 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146271953 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131630746 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146612054 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098175476 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134336184 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160591683 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163236158 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177764237 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14237513 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080801755 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155392688 seconds)
  done (took 81.304766934 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15989678 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129940263 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145384349 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200183458 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174195209 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267448768 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211007146 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250822805 seconds)
  done (took 2.601149613 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092631335 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144040795 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155902111 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.130330966 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090862585 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117800013 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.337253074 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130755449 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114525728 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119914841 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.169948966 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093075117 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.538694927 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089912914 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11783338 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106144443 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091014191 seconds)
  done (took 3.692377265 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.067175788 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485053184 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.779601243 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.190669587 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.156968779 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.115900597 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.684292078 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094708091 seconds)
  done (took 11.636414063 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114347868 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134642664 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122128772 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15065754 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.138093884 seconds)
  done (took 1.731418069 seconds)
done (took 121.851989492 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097538926 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124815868 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096128532 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128081699 seconds)
  done (took 1.496817031 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093953706 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069614031 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099222703 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073998084 seconds)
  done (took 1.400427674 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187336805 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.165793756 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377453159 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071180579 seconds)
  done (took 1.541837451 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112556896 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129956553 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102401978 seconds)
  done (took 1.412583128 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105535684 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127187431 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101721335 seconds)
  done (took 1.399867498 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10586167 seconds)
  done (took 1.172157744 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106267569 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135224742 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107756576 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133930095 seconds)
  done (took 1.547999974 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097821627 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124354011 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108090897 seconds)
  done (took 1.398657747 seconds)
done (took 12.783050596 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102724124 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421786238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410563418 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108472443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719427374 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378843044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.052089898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143326847 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16176107 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09221519 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13670091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672428951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043126931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371382687 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002451288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369700363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675531471 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11950892 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090004369 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119407817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.034807245 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091727308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118983136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09129443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700492182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.395958054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120446863 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.368598918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092269533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124027239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.380721849 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120561603 seconds)
  done (took 16.884896775 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093512692 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170131897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097263343 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12155013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120400006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093348047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12219928 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092774538 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177005828 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120476908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109711513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118514934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122718926 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095202951 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140687725 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091533847 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122790566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092136611 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120134614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092525108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137110164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117987881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093922424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119645943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092874176 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132977451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093273436 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11965541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118172004 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097916247 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125192308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093929219 seconds)
  done (took 4.722341547 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139268422 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17883673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12502191 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125308272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.165798743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121227957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19583908 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116608935 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179115265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120885105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137032737 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092189203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154155684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119672901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11257201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118316335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095489097 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119980247 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091248268 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120641095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136787897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09125404 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120376193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093117382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121090482 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106986992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121547507 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118903025 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092260313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1245217 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097755513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121770977 seconds)
  done (took 5.050665769 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097049735 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12345457 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108562171 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135739593 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093316384 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123099108 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096055165 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12170806 seconds)
  done (took 1.970417592 seconds)
done (took 29.693608694 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111334442 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124401636 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105848516 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131910772 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101286874 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.128933979 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090779223 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.130831872 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130749069 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101554947 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134519489 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091122097 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120963386 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090971882 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13324546 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096673289 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130515781 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101360349 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13143994 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.129030669 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09360745 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131080421 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101632139 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130510892 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102733527 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13134057 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134150717 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099320011 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119850074 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093875651 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12207562 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103224532 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12196892 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104548218 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124565188 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096466951 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121732747 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094055866 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131315156 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13034578 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098982453 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131393009 seconds)
  done (took 5.902807674 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106104952 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.136958829 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104344996 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080200568 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.114376554 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079384167 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.134658704 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077660951 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.107592667 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.105994902 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073382038 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.104174981 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078077171 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099051324 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076731804 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074695812 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.105510436 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074811397 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075010655 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.103843253 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078884654 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072030039 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106216699 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078211478 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074001039 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108142493 seconds)
  done (took 3.504246544 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099542689 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131579626 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111571117 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181219095 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.156648465 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098456641 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129612438 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137280927 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107604762 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117977816 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095509047 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147437389 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108398705 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127214258 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091077196 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135109096 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133034052 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094228957 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12583578 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111255136 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136636062 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101024252 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139029517 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13024927 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090887837 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120495307 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095772784 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132419509 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096316888 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128190681 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095480137 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122509573 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120779527 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103300269 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12269259 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.092672223 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138836686 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101193634 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128500446 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.11895382 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099692845 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119339403 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.111989487 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158770901 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090299177 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126489605 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121107655 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10244412 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118948969 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110201178 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128414054 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09070042 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122940873 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090172408 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119744224 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10515712 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.121868395 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094100961 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129470392 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124701222 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104855198 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12280141 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107868941 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119495881 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099010737 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119576138 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091656747 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118595709 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141988931 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09324438 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158943528 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092584767 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121733279 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101127652 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12781731 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126453802 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092608626 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134646853 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100872387 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122768243 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101165586 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.123945566 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094989914 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.137464289 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.120975378 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094236259 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121399782 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098227729 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121539619 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.092560707 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13375881 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092027901 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123221367 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108993057 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119668724 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120271848 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098515784 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12363437 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091271543 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132776023 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097868256 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12141914 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129524803 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092293459 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121973484 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.101731481 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123607675 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091609552 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125583418 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.097499048 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121401741 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092947157 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124468984 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09327305 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131168019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127320881 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097621834 seconds)
  done (took 14.568002918 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225511522 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212046068 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.23091717 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260571637 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133335772 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113040322 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208678163 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153687463 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122070443 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157904916 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.168342298 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178543253 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.137384882 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.207558883 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168196383 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092009604 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140309972 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134126576 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.24013492 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.253892577 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141304375 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102520943 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158880408 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15824848 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135301277 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.129420915 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109185589 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131911656 seconds)
  done (took 5.69724051 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108297906 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153480102 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09719643 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143251452 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145678692 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090914444 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125959072 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092469937 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133414634 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133929716 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091655509 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126866822 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099195252 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129361261 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120474104 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102326426 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130142429 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093446045 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124898769 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096820544 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132167734 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100862351 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125528731 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119709947 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102775866 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120364606 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085009333 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139956631 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119979619 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114991182 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119250654 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100378307 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135256245 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093037883 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121726704 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094343012 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123932617 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094022057 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123247382 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090767769 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120895809 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076814498 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119454556 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133476248 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098885806 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078951203 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128045532 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126047027 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093513081 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.117638819 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095467975 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123704144 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095309295 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128020003 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09455534 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122540019 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095595562 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.113617341 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098195478 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12268633 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084000938 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119245482 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097368442 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.115247269 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099800722 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125462242 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09117605 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123469367 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096741403 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127703055 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093973688 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127337964 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090043786 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123327769 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094302594 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127177136 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123330195 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091342536 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119433834 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.092964287 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074383957 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121354138 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073180836 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124204346 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091240383 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120776277 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094069544 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128356038 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135165781 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094717705 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129337566 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093096411 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121168194 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095380294 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111231729 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095760567 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137742022 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138906694 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093275251 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119978918 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106673932 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124159562 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091759946 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104459402 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100935265 seconds)
  done (took 12.760777748 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130173289 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15194738 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122450548 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111287768 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155488362 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155108058 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099650835 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128618655 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095048217 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139739864 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092694375 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13008923 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093046359 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135448634 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153788547 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103230791 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123492088 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107020841 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126794172 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167306968 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111937901 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141415237 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108927672 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121790555 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126619376 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109870293 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158182326 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106153469 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135293966 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140147646 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106728985 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158192109 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.1410814 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097600331 seconds)
  done (took 5.393137138 seconds)
done (took 48.899087706 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.180573483 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.382020015 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.16446009 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.03107301 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.225557344 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.169603637 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.195857542 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.175513129 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.661762455 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.164490125 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.426813917 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.73275897 seconds)
done (took 59.605189485 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.191033946 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.327416457 seconds)
    (2/2) benchmarking "String"...
    done (took 1.473716429 seconds)
  done (took 3.894654864 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.729153046 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.078132553 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.425456192 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.16402776 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.180650887 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.47474182 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.788545588 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.46729655 seconds)
  done (took 27.671297431 seconds)
done (took 41.585620748 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.152263885 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.195777568 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.198029656 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.144677799 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.27227469 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.190497154 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.545422513 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.170580437 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.18340148 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.151301762 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.185292732 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.164219328 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.192420409 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.533492877 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.166211388 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.163738108 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.198963505 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.714716402 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.540464033 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.184779769 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.183664697 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.227208276 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.174542804 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.168247049 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.202948732 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.170271067 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.168221222 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.163953433 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.281848692 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.163794185 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.265610623 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.689186432 seconds)
  done (took 189.199706666 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.161043819 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.254275338 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.328604272 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.209908566 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.777251718 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.358078285 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.305620435 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.839142259 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.175256558 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.16373533 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.480470816 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.159707672 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.537833397 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.128257149 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.189339432 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.224903804 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.465568212 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.510610166 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.192069984 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.30029065 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.164832263 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.519541974 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.456033778 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.408213746 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.204981817 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.236869658 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.175490408 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.158121037 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.349522475 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.404308146 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.169070754 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.205480825 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.70145565 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.0104785 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.158943998 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.163736763 seconds)
  done (took 149.338904437 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.157797066 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.159330849 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.158252091 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.186079501 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.15853967 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.641453618 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.644046414 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.665528934 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.720856938 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.256746747 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.358283699 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.159647086 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248840714 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.173356028 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.159350387 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.158251348 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.174424772 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.198575797 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.16123524 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.158739395 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.641720762 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.174111855 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.325050685 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337717441 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.17278279 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.186805221 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.159754366 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.544291926 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.159947082 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.186582292 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.475151337 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.200551163 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.160390276 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.459021641 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.191019475 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268490615 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.161034627 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.18948234 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.161050376 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.431166929 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.158999808 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.161331082 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.1635577 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.751131491 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.162511462 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.642223679 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.163285812 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.025226039 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.161691708 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.160659554 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.278272472 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.639083825 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.176985477 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.159950353 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.163157556 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.161390822 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.160709412 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.188766623 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.260469218 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.251557901 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.176284167 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.164667525 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.189095234 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.161001595 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.377670671 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.161392341 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.720064693 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.233822886 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.278830766 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.646526097 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.164683439 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256419705 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.278607092 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.16225355 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.160651568 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.161065861 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.161811145 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.161256876 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.269639041 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.162876939 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.513862391 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.324893844 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.176009512 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.23424112 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.257269245 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.161814838 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.474090989 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.165761984 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.162011746 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.832745896 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254716293 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.162773802 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.163791842 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.162807362 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.522013354 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.648057151 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.322048134 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.163661406 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.252194385 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.164354816 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.532126345 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.638680296 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.752321442 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.165190599 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.271144073 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.324605284 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.176312323 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.16555677 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.163747556 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.237945964 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.165158447 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.218029683 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.166753702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.556393563 seconds)
  done (took 358.073990092 seconds)
done (took 697.704296273 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.742357775 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.739183877 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.833825305 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.728003021 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.699156218 seconds)
  done (took 9.834200871 seconds)
done (took 10.926349752 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.333329769 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.331328695 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.216708313 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.336505337 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.19401815 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.349424979 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.312123596 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.184250155 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.257724475 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.237271898 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.259825858 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.212690744 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196658841 seconds)
  done (took 17.516042674 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459584003 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.456017972 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.229072161 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.459980525 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.206270925 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.460089406 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357742266 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.381690036 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.36886865 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.197394626 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.178724268 seconds)
  done (took 15.851354381 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.482420072 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.465054478 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.233821721 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.470226768 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.208084445 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.469608456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.366470811 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.370590975 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.377216944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.196870139 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.17968005 seconds)
  done (took 15.918873656 seconds)
done (took 50.380136124 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.175351581 seconds)
  done (took 2.269554466 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.209268077 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.365946048 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.195695898 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.183686428 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.175939909 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.178041875 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.183849 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.176602423 seconds)
  done (took 10.764020938 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.174384516 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.175304352 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.173805416 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.173620702 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.173474507 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.175048695 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.172120317 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.176622508 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.172499076 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.17579718 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.172571337 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.172838363 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.177073068 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.172656189 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.173154341 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.170565189 seconds)
  done (took 19.876693719 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.172085855 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.170497631 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.170311968 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.172024214 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.166552604 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.163038245 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.163692185 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.162998658 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.162870781 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.162502566 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.163719025 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.162521132 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.164260607 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.155110054 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.155880054 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.157564337 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.156100891 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.155777785 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.160605678 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.156243578 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.157016944 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.151563148 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.150022274 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.149523294 seconds)
  done (took 28.9576174 seconds)
done (took 62.963604161 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.715119483 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.593409856 seconds)
  done (took 6.381874364 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.151648946 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.151104779 seconds)
  done (took 3.37727987 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.151283481 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.150380451 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.150939927 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.151717824 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.150080695 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.148469767 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.149113525 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.148711669 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.149878392 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.148736599 seconds)
  done (took 12.573284377 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.14876109 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.148363722 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.147400152 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.147671131 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.148441736 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.14621236 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.148027657 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.148029137 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.147304601 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.145979881 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.148703277 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.144161051 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.14615529 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.144327337 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.14545772 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.143361926 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.143649027 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.143735283 seconds)
  done (took 21.705673794 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.146250696 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.145473121 seconds)
  done (took 3.358608306 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.143501762 seconds)
    (2/7) benchmarking "second"...
    done (took 1.143467744 seconds)
    (3/7) benchmarking "month"...
    done (took 1.143049211 seconds)
    (4/7) benchmarking "year"...
    done (took 1.14393183 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.143185524 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.143158116 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.143658977 seconds)
  done (took 9.070458467 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.14651673 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.321767013 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.419229884 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.71585587 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.147407899 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.149942839 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.012958908 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.149833291 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.151659323 seconds)
  done (took 13.281571356 seconds)
done (took 70.820535377 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.115599068 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.154058407 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.289039997 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.156706922 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.155088986 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.435168417 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.168819926 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.263549928 seconds)
done (took 36.80472108 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.13559576 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.124994216 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.7539061 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.12016677 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.12594759 seconds)
  done (took 18.188734346 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.06065927 seconds)
    (2/2) benchmarking "read"...
    done (took 1.468001247 seconds)
  done (took 4.58756114 seconds)
done (took 29.974690064 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139070964 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.136098917 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.139423595 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.136565571 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.139017966 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.136433485 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.135896712 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.136367837 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.136615971 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.136906484 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.13658989 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.136733757 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.137145962 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.134454978 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.133288119 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.134875034 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.133069439 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.133979297 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.132759483 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1323145 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.135544924 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.135741789 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.132629938 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.134005515 seconds)
  done (took 28.314925465 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.135400658 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.13396704 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.13581191 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.135317242 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.13286055 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.136292127 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.136097968 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.134415318 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.136267427 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.136282113 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.13411597 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.134279647 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.136908118 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.13462449 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.137346807 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.134982659 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.137136247 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.135187376 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.136631347 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.133964833 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.136377041 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.134041526 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.134323631 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.136612731 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.134147833 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.134201461 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.137207289 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.135579875 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.137669813 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.134809677 seconds)
  done (took 35.119461147 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.141608501 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.142879539 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.137445553 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.138003297 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.137568814 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.13784623 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.138432948 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.138062012 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.137549727 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.13821155 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.137882217 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.137949455 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.138096072 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.137997273 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.140133971 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.137753682 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.139240494 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.138545715 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.138537022 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.138854554 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.139769474 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.138923052 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.138764159 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.138233809 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.138446874 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.13878955 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.139585789 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.138575709 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.139355204 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.139673833 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.139879778 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.139069433 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.139337829 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.139404881 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.139334843 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.139355284 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.143021183 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.145100098 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.140293097 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.138846667 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.139585445 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.139884239 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.139780145 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.13938728 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.139285998 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.139454457 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.139349108 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.140936252 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.140262709 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.140422289 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.140276366 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.140401733 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.139614986 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.141346258 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.140826635 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.140928024 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.140435546 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.140513764 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.14106794 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.140432061 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.141245301 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.141490217 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.14143002 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.141007526 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.141319141 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.140854952 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.14208186 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.141521487 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.14195065 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.142226752 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.141536172 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.141427198 seconds)
  done (took 83.129128339 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.142485192 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.139360679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.139825386 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.139592741 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.139295218 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.141261783 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.139954822 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.142799359 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.140274378 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.142191351 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.142286554 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.13979255 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.140078148 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.141852002 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.141676677 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.139279019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.142909537 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.139802094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.143182046 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.142936884 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.142176275 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.141073085 seconds)
  done (took 26.166698957 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.143477671 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.144679675 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.140895231 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.144334642 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.140988185 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.142616054 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.143483672 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.145432714 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.143059714 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.141261456 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142693285 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144218959 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.141344228 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141783407 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141603952 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.142669485 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.144348059 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.143482913 seconds)
  done (took 21.636945768 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.142283279 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.142345177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.144658385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.142205496 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.142838545 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.144716155 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.142096732 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.144477432 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.144694332 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.142186924 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.145562047 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.144724321 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.144854357 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142664184 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144466273 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.142353985 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.145207301 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14217719 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145339786 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.142100283 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.142616686 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.145581794 seconds)
  done (took 26.224804603 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.145104541 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.145155173 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.142579986 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.143554195 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.142494521 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.145323475 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.145224818 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.143143099 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.146427067 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.147488014 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143842817 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.146026561 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.14493385 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.144613994 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.143456554 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1432925 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.146748194 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.143602814 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146198668 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.143194113 seconds)
  done (took 23.958048236 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.146372195 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.147776078 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.147432876 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.146561382 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.14688356 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.14560712 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.146742978 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.147029047 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.147259163 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.147533642 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.148608532 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.147027294 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.14660019 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.146129689 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.146233289 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.146363432 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.146844162 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.146961048 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.146746108 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.148082691 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.147493792 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.147665186 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.147185751 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.147395978 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.147892317 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.14805873 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.147735535 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.149072002 seconds)
  done (took 33.188150394 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.147057931 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.147652885 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.144450987 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.144522736 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.144866604 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.143977046 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.143985013 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.145101276 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.146711828 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.143954243 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.14801497 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.14665967 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.147459325 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.147930777 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.146890945 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.148208473 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147242123 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.145961022 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.145316385 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14498354 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.147582294 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146937241 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.147644441 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.145785403 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146935291 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.148252027 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.145702694 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.146447522 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.147484824 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.146041007 seconds)
  done (took 35.457436419 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.167557537 seconds)
    (2/2) benchmarking "in"...
    done (took 1.166939273 seconds)
  done (took 3.402165831 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.146317422 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.148731753 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.148141944 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.14691039 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.145732629 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.148887516 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.149570092 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.146324457 seconds)
  done (took 10.249227036 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.149336647 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.149033197 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.149799495 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.149964559 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.150133751 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.149694099 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.156941461 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.166905811 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.150972548 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.149871217 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.155729434 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.156464274 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.152919587 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.151588447 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.150169803 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.152555392 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.150391163 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.150454456 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.151829206 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.151080534 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.151572568 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.153387425 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.15325177 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.148799317 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.152231953 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.162427516 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.171806471 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.150506514 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.151491563 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.1549807 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.150911073 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.149448521 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.152646883 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.152938267 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.151718445 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.152152658 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.161161297 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168745641 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.157878097 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.169060499 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.153623187 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.149696228 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.152894652 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.153463753 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.153958082 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.152696501 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.15364223 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.150296564 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.152369782 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.155300609 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.156224417 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15190133 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.149912309 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.156060207 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.153887913 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.159518503 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.170175373 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.155521702 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.160564934 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.164534609 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.183110009 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.175820365 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.155657507 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.15417926 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.163492791 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.172559141 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.160285563 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.168335618 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.151057842 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.153946266 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.161843063 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.182353027 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.17588372 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.154880694 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.154565991 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.155000776 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.154558164 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.154809181 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.161337519 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.17355044 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.155673687 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.155524143 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.163705949 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.174995086 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.154193251 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.15467554 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.156461469 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.155848582 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.15676838 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165002735 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.173137833 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.155802632 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.154441444 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.155463434 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.155825254 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.1565718 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.155307707 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.156870325 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.152924298 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.156465538 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.155983606 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.158270855 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.162723609 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.155762831 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.156488052 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.163184687 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.172671324 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.156528498 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.162553355 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.155633213 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.157031454 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.157915842 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.162020792 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.154119133 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.159387731 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.163162805 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.157882579 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.157880014 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.157215788 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.15733835 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.165079423 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.17908475 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.158454181 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.157213202 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.160716857 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.167160472 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.158229307 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.160891888 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.158194567 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.155877636 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.156157869 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.159820239 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.157873807 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.159007375 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158423554 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160492908 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.155764661 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.158463959 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.159043041 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.160075169 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.158582369 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.159527533 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.160016157 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.161131747 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.159213085 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.160375773 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.165101061 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.175760443 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.160650362 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.160376029 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.156967204 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.159531366 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.159274449 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.159659377 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.159010577 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.159312245 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.15925918 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.159600453 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.160675619 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.160281882 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.160109185 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.159252536 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.1630873 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.160392141 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.16436705 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.159979412 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.15789716 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.159722441 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.160872994 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.159428782 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.161093029 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.159719714 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.162469609 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.166844603 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.16047399 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.160282794 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.163010071 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.16092624 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.161818159 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16068869 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.164412139 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.166706336 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.161501129 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.168241264 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.178130384 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.162020101 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.162391333 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.163078523 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.161217591 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162711552 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.16429647 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.168087596 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.172940285 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.183413912 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.162352569 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.165298097 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.162099474 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.165191668 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.164758465 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.162673291 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.162541976 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.163166468 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.162273537 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.162505733 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.163800491 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.163215457 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.162079498 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.163825666 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.162829127 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.163297305 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.163555002 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.163045733 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.163853611 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.160815417 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.163248416 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.163482893 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.163914144 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.160850166 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.161367862 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.162608535 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.16445614 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.164546559 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.169678095 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.161455455 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.164907162 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.165396368 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.163451155 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.162616765 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.164130127 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.165734756 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.163471634 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172609801 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.18059053 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.166034122 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.171904435 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.180619131 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.164138628 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.166808266 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.165284241 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.162146473 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.167115174 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.171567311 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.164879043 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.16550743 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.165584246 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.165614466 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165853961 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.171401464 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.17966737 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.165805605 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.166496838 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.166621584 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.163044022 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.16656174 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.165920788 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.165638504 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.166707754 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.165825067 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.166688986 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.166536515 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.166504986 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.167537695 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.16619486 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.167766072 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.173553626 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.171354413 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.165885351 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.167387616 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.166475801 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.170868002 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.166410377 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.167709648 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.167411313 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178307136 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.187943326 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.173007993 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.1854448 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.167577368 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173392403 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.186033373 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.170867892 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.167762844 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.168119335 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.167261216 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.168205203 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.164808824 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.167554736 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.167474463 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.169565328 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.169263926 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.170691641 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.168081052 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.167689325 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.168971638 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.168371715 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.168240291 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.168155725 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.169300561 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.170246678 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.169296283 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.168050537 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.169022558 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.176056713 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186227878 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.169259079 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.169292748 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.169438902 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.169015053 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.169641427 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.170256023 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.17194304 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.176503858 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.172264457 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.176712388 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.170817578 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.178489633 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.170093075 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.172798216 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.176446693 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.167660801 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.168818465 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.169614372 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.170507984 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.177440971 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.187306374 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.171042544 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.172776588 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.170314476 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.170738094 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.169898794 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.170298177 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.170729003 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.17092101 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.179461867 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.187201132 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.174246919 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.173381299 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.167853212 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.171590329 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.171881572 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.170335301 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.173575235 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.171173155 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.172517287 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.171853232 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.170928392 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.172179388 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.172089197 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.172444565 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.169848892 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.171493791 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.179653764 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.190298701 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.175534676 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.172857418 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.179124852 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.190501618 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179082445 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.189296558 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.172330451 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.172857307 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.173019723 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.173614242 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.171788206 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.173589053 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.17296978 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.173099099 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.175822943 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.173182907 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.174429652 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.173543197 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.174394263 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.172675842 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.183063373 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.192231028 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.173822445 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.176797948 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.17151405 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.175254362 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.17703686 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.1748159 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.171973144 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.176803592 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18275629 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181233511 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.174536609 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.174158545 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.17451011 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.175132277 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.1735733 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.175900291 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.174274191 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.17501345 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.174258712 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.175416117 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.176681643 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.175077191 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.17507491 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.175618627 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.17662034 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.184135441 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.193542845 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.176132389 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.17553296 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.176202994 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.176002701 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.175257147 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.176402078 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176450506 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175514287 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.176400895 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.180998443 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.180750168 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.177778178 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.176325787 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.175687316 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.175432337 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.176400605 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.176826046 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.175404419 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.177022339 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.17704804 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.177092436 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.176884279 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.175765108 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.17631506 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.17696393 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.177271088 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.178421569 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.182916366 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.177158147 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.174521082 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.177905369 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.176971106 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.176464537 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.177191599 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.184209143 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198165889 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.185471223 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.184131851 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.180428317 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.177292801 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.178931178 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.184177912 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.176744239 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.178575195 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.178611046 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.17942435 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.177817884 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.179770851 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178681154 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.185228227 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.197116337 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.177785161 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186791699 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.195666126 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.178533303 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.179452715 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.181874115 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.178314531 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.176467795 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.179447061 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.178397318 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.187336889 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.197263196 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.17984875 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.180595737 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.177994866 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.180594318 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.182389393 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.180146144 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.179421987 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.176908511 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.179953889 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179137643 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180219532 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.176802234 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.178560775 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.178830262 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.182742217 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.184752944 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.177672253 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181393906 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.179851002 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.180212577 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.18031533 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.179846476 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.178217702 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.177952187 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.179898156 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180853501 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.180062501 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.18284295 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.179760795 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.18122758 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.181269469 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.1808761 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183376087 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.188006097 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.186996717 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.178104886 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.180098022 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.181379958 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.183199282 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.181146458 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.180818445 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.181677467 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.182153742 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.180973795 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.181797909 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.181896976 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.183745615 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196496695 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.199509525 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182500471 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.182293794 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.184433578 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.18272972 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.180251258 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.183189476 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.18489591 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.18444541 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.189166532 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.183425519 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.190107976 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.199323313 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.18264138 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.186680322 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.185150827 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.188602117 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.185074911 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183111576 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.184053824 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.187100409 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.196795699 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184237524 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192427076 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208081985 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.200764173 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.184106361 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.1846872 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182746999 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.184597686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.184637595 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.184457921 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.185057775 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.184093557 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.185298956 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.183268681 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189827906 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.185451834 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.185184672 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.184411775 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.184273255 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.185705036 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.183585861 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.18522502 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.185459677 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.185133956 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.185876456 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.185318448 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.185491501 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.196649131 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.208055659 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.18587451 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.1862211 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.182928958 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.191070486 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.187475104 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.194048289 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.191747573 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.187268713 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.186359265 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.187328968 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186336541 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.184961804 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.186127984 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.184559121 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.185904763 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.183861357 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.196508188 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.208963093 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.191430948 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.185171656 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.187230792 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.185781559 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.187231958 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186528593 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187071548 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.187550492 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.188744056 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190105955 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.188413321 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.188336229 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.188644406 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.193381096 seconds)
  done (took 699.107430557 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.18433746 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185538076 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.185151611 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.184856736 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185414763 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185342004 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184855983 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.185045564 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.185275681 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.186092373 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.185022717 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185565104 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.185895706 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.185704135 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185649959 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.186012093 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185877436 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.18588949 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.185988695 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.18606817 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.186222582 seconds)
  done (took 25.999959704 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.188370422 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.186100821 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.186321978 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.189013324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.186537286 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.1884874 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.186760671 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188689757 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.189673388 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186726143 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.189163398 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189182373 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.186271584 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.186735882 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186837369 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188731004 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.190047939 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.187994415 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.189875869 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.187679013 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.190694998 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.188498962 seconds)
  done (took 27.243924859 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.18951589 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.190821031 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.189228837 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.188267237 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.190927855 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.18741514 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.191470289 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.190285903 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.190998531 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.191030798 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.191546062 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.191053586 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.195262536 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.193745093 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.191540138 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.190111782 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.334918895 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.191391458 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.191579382 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.190679887 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.188227996 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.19693072 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.207468917 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.188628665 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.189481596 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.192667466 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.191877601 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.191837787 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.1914878 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.192072988 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.196025103 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.19179638 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.191446359 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.193720973 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.190021366 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.192488195 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.195533115 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.192900824 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.189135932 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.192541565 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.201079227 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.207443158 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.19350221 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.198680745 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.210602535 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.192697564 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.194492936 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.198151171 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.189956477 seconds)
  done (took 59.712778978 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.192666765 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.193016851 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.190854805 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.193126807 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.193164709 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.193169685 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.193547033 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.194075462 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.190895333 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.191129103 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.194327033 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.191153656 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.190545544 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.193021183 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.19344606 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.191356333 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.190705085 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.191246512 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.19128577 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.191016145 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.190372149 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.194138068 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.193729988 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.191903731 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.193965991 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.191304301 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.191376491 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.194890479 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.191432028 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.192226744 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.194488281 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.194899381 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.194997209 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.192649686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.192916781 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.195256963 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.195157947 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.192901102 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.195673858 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.193974546 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.195463248 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.196152447 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.196031614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.19633764 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.193238268 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.192786406 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.193541156 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.193689899 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.194987284 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.1965576 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.196774638 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.194551156 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.196320883 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.193010529 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.196030261 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.196191151 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.193302584 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.193675962 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.197105995 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.197134061 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.197859674 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.200238647 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.197233522 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.199102171 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.197163449 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.194606498 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.194316705 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.196830075 seconds)
  done (took 82.303518386 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.196546984 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.196503392 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197135084 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196245424 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.197265219 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.196176254 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.1972278 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.196897041 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.197050531 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.196630888 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197004816 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.196979212 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.196862725 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.197964698 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.1973779 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.197508571 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.197181055 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.197096657 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.197801332 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.198466736 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.198677484 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.197130575 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.197626178 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.197513078 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.198813123 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.197968123 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.198369853 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.198317999 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.199313676 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.198473564 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.199090494 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.198816128 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.198624402 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.198225327 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.199394227 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.198919235 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.199126565 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198624107 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.199432206 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.198601007 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.198485737 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.19880524 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.200402392 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.199603781 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.199781844 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.200254856 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.200639969 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.200060208 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.200436581 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.19970769 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.200689351 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.199624112 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199960682 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.200459912 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.20043044 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.200326976 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200656829 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200135887 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20094731 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.200162389 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.19977792 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.200713987 seconds)
  done (took 75.429559759 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201399163 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.200981671 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.198732134 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.198878018 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201615825 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198607118 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201372497 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.20241606 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.202081928 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.201687902 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201821705 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199170907 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198909952 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201161716 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.200012393 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19898046 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199140644 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19944152 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202032175 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.198269264 seconds)
  done (took 25.122941575 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.199206804 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.201851289 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.199842247 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.19919406 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.203203129 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.199969417 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.202378316 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202693511 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200027397 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202059701 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.203035521 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.203316946 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199878543 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200434687 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.202875876 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.200829922 seconds)
  done (took 20.338474223 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.199623629 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.203347659 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.202459445 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.202721643 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.200304448 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.201046314 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.203703786 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.200912251 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.200944702 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.203562179 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.204245791 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.204038451 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.204022018 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.202914407 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.201319878 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.204702229 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.200853271 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.201991038 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.204935049 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.203552338 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.201993103 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.201756586 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.203371265 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.204488132 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.202050907 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.202579074 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.202320881 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.20220316 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.20273205 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.204664714 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.202872849 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.202680374 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.202929665 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.202783508 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.204471937 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.201766402 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.205836483 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.20518901 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.205470131 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.204832488 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.205438835 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.202232436 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.205710262 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.205288964 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.203011932 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.205746912 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.202392452 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.204176429 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.203340075 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.203052323 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.206480892 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.206060471 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.205799465 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.207871839 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.206456805 seconds)
  done (took 67.311173478 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206159424 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205745089 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.204175946 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.206482822 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.206203101 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.203694778 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.206603339 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.20538276 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20373366 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.206908897 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.205168861 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.208306276 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205249612 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20717176 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.205004943 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207276352 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.2052982 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.205047393 seconds)
  done (took 22.825360707 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.205542373 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.205286752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.20735149 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.205302044 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.204830483 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20830801 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204991115 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.207664536 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208077075 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205600679 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205678986 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.208918492 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208354244 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.207727071 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206111638 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205993501 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.208405293 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20865313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.206284569 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206193769 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.209823797 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209077367 seconds)
  done (took 27.677356991 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.20735544 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.207382367 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.207246095 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.222412887 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.223960681 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.228676778 seconds)
  done (took 8.420230924 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214330346 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208870157 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.206677564 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210157077 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208707182 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207536447 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206227535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206743487 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209966316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207144061 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208016668 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209810837 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208921538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207803282 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20951139 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210565169 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206831148 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207672836 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207724028 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209440714 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207271021 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210083977 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20784137 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207771225 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208910977 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20808364 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211052991 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209008022 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207766343 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210577071 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211011585 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208929415 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211608647 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209498041 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212255432 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210760179 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209097096 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211625621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211654975 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208896047 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211027609 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212449305 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21189178 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208895722 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211908136 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209063422 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209466948 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209400815 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209488107 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212482035 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212416915 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209177026 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212636995 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212415998 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212726662 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212043394 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21042285 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210218782 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211844334 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210823342 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210222131 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21215021 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210346501 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210724154 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212638102 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21047342 seconds)
  done (took 80.999864261 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210620393 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.210358923 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210799902 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211096822 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210235526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211339388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211028084 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211601185 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211247368 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211525399 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213438364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211061599 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211883172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21094498 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211443515 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212912597 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211361428 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211376297 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211522797 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213919853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211859919 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212737664 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212675524 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214329482 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214440645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215271656 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212845737 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213412547 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212453582 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213024899 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212967829 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213507807 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213274412 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.212227856 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212014822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212374491 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212029968 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212613049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212495476 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215498072 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213523617 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21640089 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213042219 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213221464 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212779876 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21396981 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214486572 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216180275 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213735188 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214187453 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214489618 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214743513 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214590882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21362597 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214219439 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214521966 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213289727 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213906046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214358215 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21786284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213764108 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214371719 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217022154 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214197091 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215074038 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21400055 seconds)
  done (took 81.197490901 seconds)
done (took 1631.595917571 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.381638587 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.331831016 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.215324165 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.21594562 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.215323926 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.229318164 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.209795348 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.215628891 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.217723398 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.215360388 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.216021635 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.402846905 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.218512012 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.215803636 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.215835283 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.311973057 seconds)
  done (took 41.161041624 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.23910933 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.22359984 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.324452721 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.239999353 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.244879098 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.393967493 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.273866467 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.224442302 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.379302601 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.261852147 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.653279838 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.244789593 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.222725596 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.242295876 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.239852865 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.395150762 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.449922577 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.658465309 seconds)
  done (took 28.045011104 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.632887702 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.221659984 seconds)
  done (took 8.989886405 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.241535965 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.22361285 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.22444491 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.222657488 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.224094445 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.215017028 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.223559721 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.218681242 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.592645575 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.338258077 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.225685883 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.234457447 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.242419643 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.22506702 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.222255236 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.259883244 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.375436742 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.222313741 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.221642818 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.231096216 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.224676526 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.309747778 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.261960181 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.221914232 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.339395843 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.598303773 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.22632015 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.230982985 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.357377165 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.2245603 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.224015354 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.224034826 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.225601856 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.097990089 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.744063819 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.235321132 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.24872734 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.23419947 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.222796442 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.359083273 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.227135055 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.232303605 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.218177232 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.731340342 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.351662067 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.334094518 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.362270622 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.243198668 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.227541106 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.286748523 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.227320687 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.227286212 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.267796855 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.972914563 seconds)
  done (took 105.045847307 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.256294548 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.605588331 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.388237704 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.239982779 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.981458125 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.858219935 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.237165607 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.482135765 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.297216914 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.220618623 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.509983052 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.708597874 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.243834008 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.288369469 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.735146986 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.285341403 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.221800799 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.08259449 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.235306782 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.222667422 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.693722314 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222419117 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.22088153 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.385022499 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.257342122 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.649980767 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.512061497 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.653071671 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.2434177 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.221146364 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.667517104 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.242990773 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.229279907 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.222739183 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.472283813 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.554733926 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.543545916 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.237798858 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.26124277 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.225573804 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.246984166 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.649764964 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.557714947 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.235904623 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.218968941 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.646739373 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.230462964 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.217301195 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.21637705 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.418387118 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.996631842 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.215113717 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.489647589 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.214237229 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.574629338 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314643222 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.281730648 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.672685179 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.230463692 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.381874548 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.277832813 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.214219506 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.219279794 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.216337824 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.218802303 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.536211689 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.55751012 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.220431021 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.534165834 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.668938899 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.231719257 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.726419532 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.126145865 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.240303196 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.328559819 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.216109735 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.898694503 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.683480236 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.250666655 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.218405917 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.524662381 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.237324264 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.483314474 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.231863546 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.233961274 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717646993 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.225107698 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.272084114 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.223461233 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.217608688 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.986295349 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.21923919 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.489366007 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.242525474 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.21918872 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.219268128 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.225926135 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.217845748 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.23432698 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.224668881 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.726496865 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.240146651 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.174730357 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.237310722 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.21993935 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.219445467 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.218864623 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.22014334 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.440761015 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.635405428 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.235143555 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.21853878 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.219451206 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.227719455 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.382892714 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.219277862 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.506055383 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.239143021 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.22016151 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.223225811 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.876258608 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.26854723 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222101653 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.235420325 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.110548259 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.423951724 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.236510653 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.220757558 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.221357694 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.238317035 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.380308086 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.238830579 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.302738217 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.226283321 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.899214562 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275184269 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.241484809 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.552691132 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.229024681 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.00974545 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.239366521 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.22152119 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.499622211 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.475380222 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.484999126 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.238542298 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.222952207 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884127055 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.265254193 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.369778047 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.239932851 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.217771291 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.418858273 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.656168495 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.224511039 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.885957825 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.224138722 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439655498 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.224785014 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.514047205 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.691266107 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.241495443 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.22238803 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907812629 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.910159427 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.056721429 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.223374885 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.487061822 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.168562101 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.704612284 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.224522842 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.233838612 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.784468791 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.225844612 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.230815316 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.224567611 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.223757897 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.285238034 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.395219537 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.419533916 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.225255324 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.651502741 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275275709 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224001267 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.22682641 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.22442489 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.570527522 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.264662194 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.229542453 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.232457154 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.224500799 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.225599028 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.678339459 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.163564321 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.228089866 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.374786115 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.834354821 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.24241754 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.226843747 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.782800701 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.436281965 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.753532905 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.301715316 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.51174033 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.25121153 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.261887124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.972885984 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.260617108 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.718379017 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.246081901 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.225703986 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.80792275 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.24418929 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.585902159 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.226182129 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.235236997 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.74445466 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.245056715 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.227174912 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.388849743 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.243205658 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494634842 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.22678105 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.233087426 seconds)
  done (took 1085.396275632 seconds)
done (took 1269.76945527 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.227386347 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.228720917 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.211675899 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.228378369 seconds)
  done (took 26.043575822 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.242403459 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.231462316 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.233271029 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.231486566 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.235122929 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.232658834 seconds)
  done (took 8.551913106 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.261699238 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.230099044 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.228597367 seconds)
  done (took 18.86729135 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.424060914 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.433761472 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.540111769 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.248553974 seconds)
  done (took 9.793684815 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.234026398 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.233558908 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.233902439 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.235948541 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.242740626 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.244112965 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.235902239 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.237024176 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.244786319 seconds)
  done (took 12.288037823 seconds)
done (took 76.692183715 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.221208655 seconds)
    (2/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.248700618 seconds)
    (3/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.565595308 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.499522994 seconds)
    (5/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.242308286 seconds)
    (6/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.269737745 seconds)
    (7/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.577466864 seconds)
    (8/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.274709806 seconds)
    (9/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.313611326 seconds)
    (10/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.253575295 seconds)
    (11/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.217330693 seconds)
    (12/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.054963612 seconds)
    (13/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.255552345 seconds)
    (14/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.334311874 seconds)
    (15/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.56431519 seconds)
    (16/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.709451856 seconds)
    (17/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.210876512 seconds)
    (18/286) benchmarking ("sort", Int64, true)...
    done (took 6.248769313 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.210549504 seconds)
    (20/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.25367403 seconds)
    (21/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.332457107 seconds)
    (22/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.353115261 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.255189733 seconds)
    (24/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.143455702 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.658915034 seconds)
    (26/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.600011106 seconds)
    (27/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.296192387 seconds)
    (28/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.25580828 seconds)
    (29/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.018310933 seconds)
    (30/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.242035144 seconds)
    (31/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.521579585 seconds)
    (32/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.682682576 seconds)
    (33/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.343900489 seconds)
    (34/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.510164274 seconds)
    (35/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.232177056 seconds)
    (36/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.203917172 seconds)
    (37/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.243348626 seconds)
    (38/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.251589331 seconds)
    (39/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.240382314 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.572068871 seconds)
    (41/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.304260585 seconds)
    (42/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.463000758 seconds)
    (43/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.227090331 seconds)
    (44/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.233591125 seconds)
    (45/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.727113788 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.346444889 seconds)
    (47/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.668318389 seconds)
    (48/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.436548852 seconds)
    (49/286) benchmarking ("sort", BigInt, false)...
    done (took 6.230891955 seconds)
    (50/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.952537762 seconds)
    (51/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.378310315 seconds)
    (52/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.316280925 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.242687722 seconds)
    (54/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.21678258 seconds)
    (55/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.447099292 seconds)
    (56/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.233295049 seconds)
    (57/286) benchmarking ("sort", Int64, false)...
    done (took 5.374556477 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.057001992 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.044425039 seconds)
    (60/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.463171634 seconds)
    (61/286) benchmarking ("sort", Int8, false)...
    done (took 4.295688183 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.116558001 seconds)
    (63/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.298008051 seconds)
    (64/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.864440632 seconds)
    (65/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.249441052 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.291608493 seconds)
    (67/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.314745217 seconds)
    (68/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.584856413 seconds)
    (69/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.233308615 seconds)
    (70/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.741139058 seconds)
    (71/286) benchmarking ("sort", BigInt, true)...
    done (took 6.235730439 seconds)
    (72/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.216684093 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.214268557 seconds)
    (74/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.251057543 seconds)
    (75/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.582119379 seconds)
    (76/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.278116655 seconds)
    (77/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.253439229 seconds)
    (78/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.319524128 seconds)
    (79/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.213979135 seconds)
    (80/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.228556791 seconds)
    (81/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.241478866 seconds)
    (82/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.321880034 seconds)
    (83/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.663838235 seconds)
    (84/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.236859102 seconds)
    (85/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.001327399 seconds)
    (86/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.357667892 seconds)
    (87/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.314918885 seconds)
    (88/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.432079718 seconds)
    (89/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.318824925 seconds)
    (90/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.222632702 seconds)
    (91/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.602338002 seconds)
    (92/286) benchmarking ("sort", Float64, false)...
    done (took 5.514923411 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.117554503 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.639340769 seconds)
    (95/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.426487773 seconds)
    (96/286) benchmarking ("sort", Float32, true)...
    done (took 6.251287189 seconds)
    (97/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.278277636 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.218588015 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.253005506 seconds)
    (100/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.927571236 seconds)
    (101/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.336665357 seconds)
    (102/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.256761248 seconds)
    (103/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.404916362 seconds)
    (104/286) benchmarking ("sort", Bool, false)...
    done (took 1.75229356 seconds)
    (105/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.274289256 seconds)
    (106/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.234950448 seconds)
    (107/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.533058207 seconds)
    (108/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.21658943 seconds)
    (109/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.96629554 seconds)
    (110/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.520287742 seconds)
    (111/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.469394626 seconds)
    (112/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.264557152 seconds)
    (113/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.227002697 seconds)
    (114/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.225893819 seconds)
    (115/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.326282333 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.824608708 seconds)
    (117/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.35914053 seconds)
    (118/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.337419446 seconds)
    (119/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.939429068 seconds)
    (120/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.219859913 seconds)
    (121/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.217409833 seconds)
    (122/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.949179147 seconds)
    (123/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.344362751 seconds)
    (124/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.295093653 seconds)
    (125/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.846529432 seconds)
    (126/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.299081761 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.222061875 seconds)
    (128/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.268527464 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.236463749 seconds)
    (130/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.326377204 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.959119881 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.265645317 seconds)
    (133/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.236726031 seconds)
    (134/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.304570972 seconds)
    (135/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.286396753 seconds)
    (136/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.218637156 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.218329943 seconds)
    (138/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.692774803 seconds)
    (139/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.027111158 seconds)
    (140/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.24149841 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.263194434 seconds)
    (142/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.949292361 seconds)
    (143/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.2642073 seconds)
    (144/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.362488994 seconds)
    (145/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.217778831 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.835881218 seconds)
    (147/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.988622215 seconds)
    (148/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.341212139 seconds)
    (149/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.440188596 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.253679321 seconds)
    (151/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.253832864 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.654828759 seconds)
    (153/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.255130391 seconds)
    (154/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.598991477 seconds)
    (155/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.303069883 seconds)
    (156/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.438179915 seconds)
    (157/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.396193315 seconds)
    (158/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.419856491 seconds)
    (159/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.996039086 seconds)
    (160/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.442240109 seconds)
    (161/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.252485124 seconds)
    (162/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.390427584 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.79425904 seconds)
    (164/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.59686511 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.069555769 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.281777154 seconds)
    (167/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.697642161 seconds)
    (168/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.267156529 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.884652631 seconds)
    (170/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.094019546 seconds)
    (171/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.949792319 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.29756006 seconds)
    (173/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.245906322 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.326170693 seconds)
    (175/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.220842967 seconds)
    (176/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.251863356 seconds)
    (177/286) benchmarking ("sort", Int8, true)...
    done (took 6.238752762 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 5.336407345 seconds)
    (179/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.825188189 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.301782176 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.580977216 seconds)
    (182/286) benchmarking ("sort", Float64, true)...
    done (took 6.253656461 seconds)
    (183/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.268451868 seconds)
    (184/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.600855806 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.638777784 seconds)
    (186/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.235218166 seconds)
    (187/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.420207413 seconds)
    (188/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.273142964 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.248665483 seconds)
    (190/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.222452117 seconds)
    (191/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.38665622 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.854223375 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.896138051 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.454847198 seconds)
    (195/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.439023524 seconds)
    (196/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.44347954 seconds)
    (197/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.606545989 seconds)
    (198/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.261245498 seconds)
    (199/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.843004406 seconds)
    (200/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.495366937 seconds)
    (201/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.355070344 seconds)
    (202/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.223990514 seconds)
    (203/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.727523338 seconds)
    (204/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.367608345 seconds)
    (205/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.246790151 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.999516731 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.268512883 seconds)
    (208/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.228737703 seconds)
    (209/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.251851931 seconds)
    (210/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.180841169 seconds)
    (211/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.488774368 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.288151177 seconds)
    (213/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.226827856 seconds)
    (214/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.259155637 seconds)
    (215/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.23660856 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.121168822 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.757177324 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.530976842 seconds)
    (219/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.23033354 seconds)
    (220/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.308007742 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.642284144 seconds)
    (222/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.354835969 seconds)
    (223/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.892441237 seconds)
    (224/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.313670674 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.227709578 seconds)
    (226/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.589409104 seconds)
    (227/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.543997878 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.23959987 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.989657727 seconds)
    (230/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.41922365 seconds)
    (231/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.585328869 seconds)
    (232/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.247023111 seconds)
    (233/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.347570499 seconds)
    (234/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.584541613 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.445270907 seconds)
    (236/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.830126268 seconds)
    (237/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.229096115 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.070609636 seconds)
    (239/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.247081577 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.27493374 seconds)
    (241/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.22691005 seconds)
    (242/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.234819044 seconds)
    (243/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.229922938 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.640939579 seconds)
    (245/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.059384 seconds)
    (246/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.980868737 seconds)
    (247/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.670152658 seconds)
    (248/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.286938636 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.269064483 seconds)
    (250/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.230432095 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.536978933 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.136987401 seconds)
    (253/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.236566143 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.375371353 seconds)
    (255/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.024559215 seconds)
    (256/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.223690965 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.34468181 seconds)
    (258/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.272568806 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.328180396 seconds)
    (260/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.968148368 seconds)
    (261/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.739266746 seconds)
    (262/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.814333504 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.3665772 seconds)
    (264/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.353967713 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.100235068 seconds)
    (266/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.016195694 seconds)
    (267/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.568607265 seconds)
    (268/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.425916091 seconds)
    (269/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.364047144 seconds)
    (270/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.442266332 seconds)
    (271/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.061162861 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.306492449 seconds)
    (273/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.227884923 seconds)
    (274/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.227505933 seconds)
    (275/286) benchmarking ("sort", Float32, false)...
    done (took 5.2635289 seconds)
    (276/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.240605434 seconds)
    (277/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.231422936 seconds)
    (278/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.22788329 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.269779646 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.273840962 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.865971681 seconds)
    (282/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.581342729 seconds)
    (283/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.025797694 seconds)
    (284/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.2808878 seconds)
    (285/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.23113585 seconds)
    (286/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.383877366 seconds)
  done (took 905.246083547 seconds)
done (took 906.393640359 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.27991177 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.284209751 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.258199541 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.279731736 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.377493109 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.281404113 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.268021317 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.260420861 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.305141067 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.307918214 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.265816975 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.280040138 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.267906455 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.266699646 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.257850739 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281238413 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.238758014 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.267233627 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.282902416 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.268443664 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.282413262 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.264031426 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.30789358 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.281045625 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.262947833 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.262688877 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.268940043 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.285365478 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.378678492 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.269127097 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.262825277 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.279140114 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.239095752 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.258066578 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.255238946 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.286409009 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.278261373 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.269869381 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.263320397 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.299539836 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.608792431 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.281173116 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.267318267 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.260120122 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.26104356 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.264574442 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.26964922 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.267857382 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281419738 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.283624979 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.595120072 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.297659412 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.27092896 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.260954301 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.27188934 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.269150562 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.264475693 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286819163 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.28853154 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285873011 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.22400906 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.267900825 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.264297642 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.285413644 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.276538248 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.633607004 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.27226247 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.267331065 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.605142147 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.281219381 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.633448416 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.292891986 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.263531175 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.284197047 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.301180785 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.240834286 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.257559636 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.262316493 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.277688008 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.269468624 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.272399353 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.284724055 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.267641785 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.263537699 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.286134636 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.286782451 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.274419689 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.271786632 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.273439308 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.289832002 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.2784966 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.281870144 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.267677271 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.259444711 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.273188835 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.266387348 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.275107516 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.273387741 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.268255804 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.274546892 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.607107678 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305283518 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.26153919 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.260326518 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.263722347 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.284631616 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.608129742 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.287424738 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.286559187 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.312220623 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.26598463 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.230159108 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.27461386 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290265917 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.274083827 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.268117452 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.260469281 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.231275119 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.602336372 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.302875942 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.266973701 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.270684515 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290344078 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.267555885 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.263280111 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.246253432 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.267277697 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288149112 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.393542204 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.275825074 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.304972782 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.272282561 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.269246006 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.292311436 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.291019748 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.304495269 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.268184516 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289933637 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.289850596 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.263060021 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.284604741 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.27766126 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.267423938 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.271730101 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.260883781 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.289858496 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.28817166 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288138294 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.287722737 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.394839745 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.264925157 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.233570377 seconds)
done (took 213.956111993 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.325992873 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.26065207 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.357042994 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.263746556 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.36462232 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.364326478 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.261613907 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.261467373 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.261556997 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.64355011 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.261717291 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.263084011 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.256754031 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.26258746 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.348777418 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.264974686 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.262004047 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.606736104 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.264477669 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.337307907 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.263437848 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.263024851 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.263799011 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.673901723 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.262606162 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.260445477 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.337673975 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.265054174 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.611504044 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.258859768 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.260991212 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.61145294 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.355540302 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.28373912 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.275272479 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.272387838 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.36647585 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.282110992 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.346354384 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.347962123 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.359337915 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.304687288 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.263082095 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.26416078 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.265813704 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.267210327 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.264114043 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.293497087 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.265373231 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.264514839 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.60862326 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.276166563 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.265052925 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.264722493 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.263743928 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.295006767 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.26390871 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.267102021 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.35788909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.268999773 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.33152624 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.680226109 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.647138878 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.267578507 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.267883601 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.265192137 seconds)
  done (took 143.935126854 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.334125965 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.34292999 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.374250488 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.28366319 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.317459817 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.37893938 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.283958223 seconds)
  done (took 10.493754905 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.272885864 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.268728778 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.31642778 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.316885016 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.268309467 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.445784568 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.269487718 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.27968153 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.265636476 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.321321386 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.271339231 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.26925993 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.275181387 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.267893948 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.316955333 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.28002357 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.383806951 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.268610378 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.269795419 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.429178411 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.266707213 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.276234413 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.321082061 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.280752455 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.271133613 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.274540917 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.090416034 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.270121954 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.267312791 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.269936096 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.268062832 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.348809088 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.271325244 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.265926515 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.264790461 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384749559 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.268508266 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265963694 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.268379135 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.267378202 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.266209142 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.266258335 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.266455829 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.264892407 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.266503998 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.29019788 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.265440618 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.264556731 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.264817838 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.266129328 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.314835985 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.265705276 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.263417341 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.262437866 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.320613192 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.272238039 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.266336478 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.262190045 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.266482452 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.263586121 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.425172477 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.312453905 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.264897718 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.312434168 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.266104794 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.266286109 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.265320526 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.265568637 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.319603347 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.265351012 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.314240225 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.264555838 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.452168927 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.288459747 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.267255718 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.267789077 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.268811057 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.266412386 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.26010151 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.272280929 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.264012196 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.267316956 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.271779724 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.264144801 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.263847936 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.440195629 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375626739 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.264768711 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.279536219 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.272892627 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.263815415 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.319670674 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.267580159 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.264152547 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.318593829 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381597406 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.321129163 seconds)
  done (took 147.126661325 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.271316142 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.275895436 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.270997563 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.289883153 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.286416576 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.269487564 seconds)
  done (took 8.842384435 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.271547236 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.270999536 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.269339527 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.270579174 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.270118212 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.271674734 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.270790553 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.271603444 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.274649255 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.270441921 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.27118039 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.274613922 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.272005451 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.270521932 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.270979044 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.269866819 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.27050469 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.268665179 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.27078001 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.271385831 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.37423244 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.271202925 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.270544917 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.270741072 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.275863429 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.271362452 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.279990378 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.272195073 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.270790233 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.278081507 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.288910125 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.272081646 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.271978777 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.276575038 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.274805004 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.271859925 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275040419 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.275978552 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.268897594 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.273661834 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.275626361 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.272568838 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.272638206 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.277348337 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.273665116 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.275283251 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.279937034 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.280827035 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.272603633 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.275785523 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.276911605 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.273113019 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.274073805 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.27739095 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.274628514 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292419644 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.280934379 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.27415969 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.273911714 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.273830569 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.274536084 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.27489135 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.275527885 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.277507753 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.270960049 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.277802123 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.275362236 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.278676305 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.274288825 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.27495319 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.279788802 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.271801376 seconds)
  done (took 94.02336272 seconds)
done (took 405.596071144 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.537099225 seconds)
  done (took 7.722299038 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.459040708 seconds)
  done (took 7.648024369 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.936289388 seconds)
  done (took 21.124883885 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.314263347 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.275263296 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.278407716 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.274511311 seconds)
  done (took 26.330439563 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.439415553 seconds)
  done (took 7.626591164 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.274477404 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.270381192 seconds)
  done (took 13.734647127 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.560676136 seconds)
  done (took 7.749018206 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.508953135 seconds)
  done (took 7.697884914 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.273189746 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.296514977 seconds)
  done (took 14.009993019 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.269023693 seconds)
  done (took 7.45849497 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.1112936 seconds)
  done (took 11.302577435 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.278701346 seconds)
  done (took 7.470385716 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.352711602 seconds)
  done (took 7.542205415 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.897137267 seconds)
  done (took 9.085984217 seconds)
done (took 157.68908681 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.271235366 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.275854239 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.275521435 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.274116329 seconds)
  done (took 26.285650571 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.312789533 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.31354597 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.313683414 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.326753113 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.31549245 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.312578045 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.305800609 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.305024246 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.324253393 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.319262159 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.315704795 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.316977909 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.313720324 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.306879241 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.316308964 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.31599406 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.325062596 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.315450576 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.306369838 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.317520782 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.281382801 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.324248777 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.317114181 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.281565369 seconds)
  done (took 32.693773993 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.802434747 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.351641391 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.434012472 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.332544324 seconds)
  done (took 7.111954468 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.33265777 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.33474342 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.346235887 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.38450079 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.411241679 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.344119884 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.307492357 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.302537507 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.289306734 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.334899458 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.410272898 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.350628081 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.420166856 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.281931319 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.483875295 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.282535712 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.28184492 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.333585475 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.3853467 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.399271198 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.282857673 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.333408925 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.337570676 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.350621675 seconds)
  done (took 33.513889134 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.282339151 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.300452229 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.281580647 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.280608279 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.289835929 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.28217919 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.282459336 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.282603997 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.281912114 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.288431283 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.281760346 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.295429313 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.281863438 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.28204662 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.289383799 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.283855398 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.288055505 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.281620123 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.283158924 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.29009309 seconds)
  done (took 26.902842947 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.275587592 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.130098172 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.628045141 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.532726459 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.276998589 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.279937637 seconds)
  done (took 27.317422806 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.348384801 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.493665794 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.283943663 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.617608356 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.706640804 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.2996657 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.283933475 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.511386916 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.810941315 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.803047386 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.339707773 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.346811952 seconds)
  done (took 19.040020195 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.286016695 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.280065184 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.287774004 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.296438489 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.334536669 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.302753144 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.290533344 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.276686751 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.33819264 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.354705473 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.303910983 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.336522814 seconds)
  done (took 36.88397611 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367265228 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32497723 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.177341799 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320299159 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.974104698 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.490876668 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.347515539 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981675869 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.304542665 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554657188 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294396865 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37205695 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.535354544 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280558571 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.284601763 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.214295895 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525719369 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739193922 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282083823 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133220727 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308168256 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.291368804 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.212380015 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.502893205 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.514668201 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.259657274 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.542050023 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.056723687 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555211174 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298182744 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292425995 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281681261 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556115351 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91762341 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397215817 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483885485 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308719932 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.828385778 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.263364486 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.129638424 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286254662 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.287811479 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292575117 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283090653 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.215962154 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290603078 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008784251 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.309401136 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.993454844 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283118948 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528363672 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381850588 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.28639677 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.890042761 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293493768 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.288519204 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.287648986 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375163744 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873507674 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373364831 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301087926 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.221291365 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.292819945 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150570328 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879196729 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.305969294 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.288071363 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.287364651 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218671059 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.136803089 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300824374 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431910726 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.309815764 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934956118 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95520842 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.304904567 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.216814196 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807220253 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289716991 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.221435148 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.512877419 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05995735 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219693812 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.229312611 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.218878699 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947005887 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293634386 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.644007843 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306307321 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.015590036 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.50911175 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32372209 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30872285 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.508643719 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.167033809 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285999753 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.285153505 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417216638 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307252873 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.997190951 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242892672 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.290733324 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54205997 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.497521056 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294375874 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.232489472 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768282497 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314530473 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.303842669 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.301074452 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493742312 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.860545348 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318430488 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385658575 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306236428 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.062784186 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987865281 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300414142 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.293686626 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.290836697 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553595511 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.008648008 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.170960953 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355668157 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295429618 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28793806 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.171905334 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139140849 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.170038863 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.477174518 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318300417 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.302195604 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.28987435 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237467598 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.289549126 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302170571 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.069047238 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.511709149 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288508504 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567204473 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223110949 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437172134 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298751435 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.511037106 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.465910922 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.312939839 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548849541 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302893932 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305475659 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30283817 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307155723 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389303785 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311735775 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.291875254 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.562722764 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.293432608 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.293545523 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.163192158 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.067523675 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292132821 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.295297267 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293800346 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84773753 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284030357 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.29544392 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179531764 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.304208883 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358826444 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.297047027 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493379975 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.470739281 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307107184 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.31226783 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.297379581 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513627698 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.300597321 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.164593816 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373136459 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.75461614 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.868428516 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321163214 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.225382551 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.002539638 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.984733111 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293047206 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.480726326 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.290890502 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493576613 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326030883 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291888906 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.852063777 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31209268 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.162704145 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.29809997 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304784562 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.297857474 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293361486 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.426568942 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423276115 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307695626 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.307262642 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436283611 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.306542227 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.227200373 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.8096611 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.297956662 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293872551 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.073475474 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328592089 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.174853548 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0751916 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570315467 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296560943 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540764724 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.254304381 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.324918933 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.292507823 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294193352 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305200209 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.311028229 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306578728 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.304922871 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.201187013 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.732451875 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864503824 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986496464 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817748311 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.587499423 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.324545504 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.179712921 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.012165815 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249906263 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.950441835 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.522752427 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028630053 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261303074 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763484481 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.489538115 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053852217 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543773597 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528261247 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.568617275 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.332303269 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55048395 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511626922 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330509162 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.298484258 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.241101649 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.814184407 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846950674 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327737133 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378040127 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015491685 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317436378 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.077701002 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.364051569 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.947836838 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683180145 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.863392177 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.685210068 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309560682 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.301230929 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086433531 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321295325 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.82171197 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896193374 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327448909 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.763404792 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254205689 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.501512067 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.328188596 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.295403034 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.774607406 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.303941092 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.551120266 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54536011 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237628768 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.306004322 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811914499 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.168840798 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.304020157 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298423024 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002448045 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301254517 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576175907 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.316924685 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.466115046 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317080877 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.232943236 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23271487 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.992308262 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.303952047 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275493721 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7605138 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.300629871 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319083933 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316281456 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144190273 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.554635294 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.313209384 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.857481186 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541606597 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302930566 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323230996 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.30324074 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312988179 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.286817612 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.182173324 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.535426759 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342502676 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542371382 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.214324619 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.201820004 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.719909842 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511723049 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.200948559 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306853679 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538734194 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.031089748 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.306133395 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987218529 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341883626 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301464192 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314809073 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309738385 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321919872 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389147743 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.506728318 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.33333808 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.312191332 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688953374 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322473934 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307383146 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.315875827 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39570217 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.439051975 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.479029332 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.075292375 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865034172 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024533261 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.889315481 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568884999 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.308677241 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306678969 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236503596 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451902997 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.82850452 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576427384 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432147195 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.319178521 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325661521 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31333232 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309213724 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517905047 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577324142 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.17338079 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310583595 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.964821987 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.462820056 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314297877 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.514466161 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771947559 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834229724 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422937502 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313821587 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028408182 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599778048 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.39471511 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303513149 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897172082 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.321082982 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.982776836 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.310137561 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304254184 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455330409 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550883778 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95954258 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.336375581 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.466265786 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.078591146 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.213125481 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.559413375 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.73696594 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.512162573 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891479451 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.998996594 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568166487 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375920479 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.511232483 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.42657252 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45204576 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.310134346 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.220785275 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306628357 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149258114 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.015816495 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.315267952 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870870189 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587887945 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.31042267 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.310642156 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329293583 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.315826117 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.528928684 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983265966 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531740829 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316248158 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311229106 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.876389105 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876459898 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575296402 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24576833 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.310676804 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540094229 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563688841 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332494128 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.761585596 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.018458057 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837384763 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.279492957 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330033354 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311059852 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.994316628 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873875356 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.50112606 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791029015 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967290647 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308220755 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600797058 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.312772804 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.308653431 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588985308 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.312094312 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.311486207 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520500042 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.890041867 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072636252 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.326457303 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.249063843 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.246821879 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.560255661 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380758414 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245519828 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309601183 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.709705685 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331030973 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441144849 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320147162 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.318179291 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309381127 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.046162911 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593723584 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.314544903 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.307318187 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.303804802 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.327144597 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402757777 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872037358 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334641854 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.985194238 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.664066505 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.565792781 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.312867157 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.294267893 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.313730207 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31122027 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.026567943 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279568495 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313675479 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841949803 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.315872298 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.324501804 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.315204304 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.527135384 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522356264 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318795657 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523075855 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33527424 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328445768 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.212230898 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.077903178 seconds)
  done (took 1634.316237788 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.322721449 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.326093019 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.326931363 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.313618371 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.311347321 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.334753795 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.334669211 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.318906061 seconds)
  done (took 51.815508131 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.311231184 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.465485668 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.34616442 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.324261767 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.320745013 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.319836468 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.755029778 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.33133372 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.322086306 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.321643537 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.313982439 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.328708918 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.945600695 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.325136122 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.325490465 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.308129288 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.321368561 seconds)
  done (took 64.913542924 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.257924864 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.596655261 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.834254172 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.319259675 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.315505288 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.312051854 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.731673346 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.327977334 seconds)
  done (took 57.924113282 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.331268051 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.330374729 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.328931304 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.32939332 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.331376961 seconds)
  done (took 7.880768144 seconds)
done (took 2027.791336006 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.317368202 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.31906203 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.317836366 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.320109689 seconds)
  done (took 6.501864717 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.294841792 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.03018729 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.295961841 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.309454111 seconds)
  done (took 18.15793656 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.33265742 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.346937253 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.96677426 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.894636342 seconds)
  done (took 5.092953888 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.06258294 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.07522075 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.058857619 seconds)
  done (took 7.422627736 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.309264379 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.314148317 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.310632133 seconds)
  done (took 20.157771251 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.591198779 seconds)
  done (took 2.813833325 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.458382732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.507093986 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.627893474 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.634237989 seconds)
  done (took 7.454284487 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.698939746 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.695136136 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.502797934 seconds)
  done (took 6.121802052 seconds)
done (took 87.631449088 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.988741552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.553291415 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.510893457 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.958498087 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.535564041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.51324265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.526482824 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.929487569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.471461909 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.464670537 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.968355461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.533177057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.469643413 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.558438881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.468803885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.558278814 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.534585714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.024431771 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.647229145 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.846532693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.522174778 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.604047208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.793006603 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.620039678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.535763222 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.46900481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.197397327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.550135853 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.821091054 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.208714194 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.468938348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.018783293 seconds)
  done (took 191.098223521 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.325395567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.314449506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.311946606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.32723451 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.313667918 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.312249295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.329316145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.327902238 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.329366516 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.328106893 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.312495583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.312603724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.312101159 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.327249011 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.315560612 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.335848068 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.312955096 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.318362996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.311998836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.317109913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.314225868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.333796689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.311919309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.313171687 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.314159315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.312771677 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.313687385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.327759006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.327750801 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.31292933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.313657769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.312273374 seconds)
  done (took 203.431320677 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.323940673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.313203476 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.31362162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.31294743 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.313353162 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.329478207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.312500181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.325590614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.314593461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.31675302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.330018782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.32650081 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.316105368 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.31451651 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.332457576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.313695456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.313913872 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.324117485 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.313685647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.331625401 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.313709234 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.322478644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.314720024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.31501532 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.323022244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.316746442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.32786346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.314073462 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.31382407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.329202612 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.316728325 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.315141325 seconds)
  done (took 203.444164816 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.510812051 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.321993866 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.321925241 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.254553711 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.322316054 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.323779788 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.316474206 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.519475428 seconds)
  done (took 14.121065675 seconds)
done (took 613.320711291 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.559825737 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.279740495 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.522867522 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.345874891 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.055995101 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.360585459 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.342921745 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.507390105 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.224738046 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.515706788 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.519015777 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.356047531 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.655961079 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.341799098 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.599405424 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.443577611 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.186798997 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.309812492 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.655842446 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.833843769 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.604701202 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.777168016 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.524907554 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.225134085 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.668293384 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.771550089 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.008517917 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.190096111 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.361607185 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.662283465 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.890419604 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.26296954 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.400218167 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.401662334 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.457668024 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.439472762 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.229838926 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.396507173 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.539598675 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.564742768 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.827022114 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.048451616 seconds)
  done (took 90.101770244 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.308771397 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.309419517 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.307814631 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.308512507 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.31017019 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.308681218 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.3088999 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.308194942 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.30946487 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.307996162 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.308518402 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.311131123 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.309139061 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.309778083 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.308512447 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.308367352 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.309631712 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.311830074 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.309430438 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.309711436 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.310085295 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.30906601 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.310173384 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.309466239 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.309489231 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.310335418 seconds)
  done (took 35.276367706 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.327374755 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.567646729 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.728873514 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.333659865 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.326624149 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.331839687 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.40464412 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.33141984 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.33068761 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.331987396 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.478392802 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.330781799 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.361041783 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.753985049 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.33251888 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.330317112 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.329798125 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.329386945 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.577761313 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.33973591 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.425780937 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.331503745 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.40442885 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.34021012 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.353153776 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.330724028 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.334234076 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.904833207 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.348207092 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.479983002 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.0830249 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.404738384 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.86666369 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.767111863 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.082090121 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.335663194 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.332225965 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.485115881 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.333040066 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.331035457 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.405117075 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.33484907 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.735209122 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.996712848 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.347808526 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.331401109 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.914121775 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.502759109 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.562922474 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.342388832 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.761841485 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.336263072 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.334435599 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.333246318 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.564101023 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.342399894 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.3321157 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.927685888 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.35782931 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.406659338 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.337059195 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.332803065 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.586645996 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.337109111 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.57492939 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.338730317 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.340972714 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.351764925 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.739710718 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.337079592 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.015159434 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.350306382 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.332903281 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.481146981 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.57518121 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.962607475 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.355790602 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.59292506 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.896571408 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.425218873 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.341051506 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.887665618 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.429900496 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.340858495 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.335688726 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.335538346 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.334839483 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.386654234 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.406044032 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.961969667 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.029938558 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.947229333 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.428426711 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.349073209 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.335457368 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.92513431 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.352550725 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.334903807 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.732913405 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.032554332 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.353748564 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.343172127 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.019868324 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.353914843 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.411636373 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.340193142 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.746389578 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.336154142 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.386573945 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.335736697 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.342939364 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.356671555 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.411770351 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.340975899 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.336463027 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.988455538 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.506753079 seconds)
  done (took 176.265374682 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.329895483 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.33004167 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.330161031 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.346994739 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.329208315 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.338412723 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.328798846 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.329820551 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.334768525 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.33031562 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.330404031 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.331393992 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.332143548 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.334031818 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.341940603 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.337912576 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.946478089 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.332284082 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.330563286 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.330195885 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.120040545 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.335805556 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.331931188 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.330658541 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.332205642 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.332373135 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.331541583 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.334098065 seconds)
  done (took 151.967793946 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.337367003 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.870792115 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.355793424 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.463793836 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.359250399 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.335342531 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.460667013 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.392294486 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.355376223 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.335286471 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.335686604 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.623720512 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.339475009 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.825827476 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.519787945 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.482748681 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.827810275 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.358610177 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.336034065 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.337243119 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.464581096 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.345607831 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.627532944 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.880744971 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.360461923 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.877368144 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.327601171 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.340017825 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.338182132 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.877688676 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.353397518 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.626625567 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.412166173 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.398787271 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.89230586 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.844162258 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.844471652 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.480686067 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.342699101 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.337786739 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.337449957 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.324351879 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.877734104 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.358408234 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.339437407 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.868199291 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.358230645 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.341047139 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.346210788 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.338298947 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.396880782 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.414353143 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.646875267 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.884756724 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.430760885 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.35667811 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.466029276 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.726206508 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.346916963 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.831255782 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.324898427 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.886899908 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.363888472 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.326008266 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.342552445 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.346419368 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.484900602 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.470863958 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.837243192 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.360958043 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.837052695 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.505456888 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.343999727 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.342126256 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.343636647 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.887658535 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.856394028 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.50440665 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.472366173 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.530365536 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.327707194 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.341495817 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.327138053 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.417179743 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.345934131 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.888754141 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.858710202 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.362612751 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.344501523 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.344976716 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.344722033 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.51148171 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.904765925 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.435406541 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.832609597 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.655181377 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.638280308 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.34758266 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.399746434 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.358638228 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.637030264 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.348382013 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.398668699 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.793408633 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.641331982 seconds)
  done (took 159.638510806 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.570469486 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.4928796 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.431292728 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.490513008 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.933947628 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.906142741 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.555193327 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.481825603 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.449742914 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.593778849 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.440412125 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.433331294 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.553172851 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.421169708 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.058083178 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.430453907 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.448677648 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.487536451 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.496661865 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.318747565 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.994803769 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.621247129 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.52396072 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.134291005 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.43447311 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.075851006 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.89377141 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.894764871 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.518201158 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.589582163 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.870799329 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.436078187 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.283440248 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.01625291 seconds)
  done (took 64.532399231 seconds)
done (took 679.01273274 seconds)
SAVING RESULT...
DONE!
