cset: moving following pidspec: 31323
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.286899818 seconds)
loading group "string"... done (took 0.587826694 seconds)
loading group "linalg"... done (took 7.053520065 seconds)
loading group "parallel"... done (took 0.154034325 seconds)
loading group "find"... done (took 1.072334268 seconds)
loading group "tuple"... done (took 1.79843024 seconds)
loading group "dates"... done (took 1.207763653 seconds)
loading group "micro"... done (took 0.222472929 seconds)
loading group "io"... done (took 0.995942132 seconds)
loading group "scalar"... done (took 36.05537183 seconds)
loading group "sparse"... done (took 10.766487894 seconds)
loading group "broadcast"... done (took 0.957941582 seconds)
loading group "union"... done (took 11.739788481 seconds)
loading group "simd"... done (took 4.17616071 seconds)
loading group "random"... done (took 8.417556872 seconds)
loading group "problem"... done (took 1.723389889 seconds)
loading group "array"... done (took 19.767724952 seconds)
loading group "misc"... done (took 1.656769315 seconds)
loading group "sort"... done (took 3.107209761 seconds)
loading group "collection"... done (took 16.425848742 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.477886553 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120670852 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112789983 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116387704 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138066952 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11273235 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121272082 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082776399 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.793006209 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.142690291 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117742999 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407029599 seconds)
done (took 4.853321407 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172619345 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0812535 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080712488 seconds)
  done (took 1.23404714 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064291402 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119470881 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065469714 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066234 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065812351 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06515882 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065002674 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064880717 seconds)
  done (took 1.585005345 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072368212 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067378063 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067410416 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066968267 seconds)
  done (took 1.348070628 seconds)
done (took 5.487652357 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.755407994 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200631245 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181218649 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396655 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125920213 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152400381 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.629203061 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313958349 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181051025 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080308789 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102151915 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.312697767 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106672118 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634215941 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075903879 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089260839 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135329883 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.404161075 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066528995 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081544916 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088467772 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127655028 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084632387 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073898103 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141708982 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066978574 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129816486 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079550194 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065974893 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205544912 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171893118 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676036597 seconds)
  done (took 10.048075888 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094892413 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095697651 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067484378 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135709919 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094891769 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068750588 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069929281 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066520395 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085566987 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12664976 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087734697 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100273162 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064548871 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068454381 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083758364 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203248296 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078770968 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080732346 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069417345 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074917595 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115166844 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077312592 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077209042 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076531392 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127442759 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178209496 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095294482 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096271599 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065876714 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079233599 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114811644 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124661001 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064848548 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065921673 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122610916 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093697621 seconds)
  done (took 4.500978588 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.933428543 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138243338 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08987796 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16507112 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066971582 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105312496 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064444566 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083258074 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197825403 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.352959017 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108797985 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.563901798 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110499618 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09981607 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066860085 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06741052 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066031268 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.333866413 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.117956019 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109887762 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081063968 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071395548 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.066964938 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.338610982 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06654532 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064929078 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066510075 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05713106 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.109832338 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066370309 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.905420875 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123468462 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065926609 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09929444 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167541316 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.217465479 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133083812 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065829642 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065191015 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.146980894 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072822448 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065109142 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082064414 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102644849 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111296974 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068103069 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066369239 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159867086 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065232705 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082179669 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.997994756 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151773722 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075001159 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065506961 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.242991819 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084712519 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066613266 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064318661 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.171137463 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066414284 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131448228 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066205245 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065890385 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064779275 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06842565 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363157202 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068044904 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.70164315 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069598332 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07671576 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068241961 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065708786 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071799431 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071512154 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083996638 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065331999 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074032029 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064875031 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064774983 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063326675 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066524743 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08302083 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.355063467 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06490865 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067038765 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06394784 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08434851 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095209607 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067352303 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068231066 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099004074 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.170127443 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067852109 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100955315 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067466943 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083319118 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068270773 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112324981 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065701407 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.084483512 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064205651 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06362673 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096080792 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068760509 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098536292 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079984698 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067363971 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.394544311 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065454322 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064937381 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067540464 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066938259 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066938132 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068391983 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079040312 seconds)
  done (took 20.714963862 seconds)
done (took 37.27167306 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274883598 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074510349 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074141233 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073845179 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074493598 seconds)
  done (took 1.736728578 seconds)
done (took 2.884577272 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118825233 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098405941 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063793689 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094432418 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063404138 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098908059 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097647377 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.07972502 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098296782 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063685217 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095212825 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063578541 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06329036 seconds)
  done (took 2.263761556 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082006716 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082658463 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068711832 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081140865 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062740453 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080785237 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079474853 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086661477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080300522 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070924456 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063053357 seconds)
  done (took 1.978725047 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080978951 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082590274 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068128641 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080680971 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062777041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080092007 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07957614 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084003728 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080172543 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0736 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064474432 seconds)
  done (took 1.976461046 seconds)
done (took 7.355427946 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076263518 seconds)
  done (took 1.207917968 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583293963 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.033640075 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079907921 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.10998915 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180890015 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116439788 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.2661899 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083781781 seconds)
  done (took 8.767817533 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100103971 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068871046 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071316691 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067349774 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070814377 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06717436 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068363282 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07013177 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070231646 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068456737 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07057677 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068794976 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070973711 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074078496 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067203663 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067591865 seconds)
  done (took 2.353655 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090633144 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.088605924 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073201792 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073683621 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071037814 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071074375 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07361647 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072711225 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069927775 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070849847 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073645804 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072773407 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070836025 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06426002 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073087894 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07460895 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069652375 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073338599 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073958083 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074520121 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073571178 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063608637 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07062532 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072974185 seconds)
  done (took 2.995787993 seconds)
done (took 16.46759531 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11066174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071365197 seconds)
  done (took 1.323244209 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080217975 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081544671 seconds)
  done (took 1.308447717 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081351464 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06500464 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088296675 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077067333 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065300813 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06483201 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085825607 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065695293 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065192234 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065561018 seconds)
  done (took 1.871823117 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068286914 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077009504 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070597746 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080096241 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07280329 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063512151 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071712484 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066827876 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076401608 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06221251 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069695095 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081008953 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070190359 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08267967 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071319258 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067449703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069716216 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066071518 seconds)
  done (took 2.437352502 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064818832 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066567722 seconds)
  done (took 1.285881648 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066085593 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062912875 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065485079 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066079801 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062674994 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061817765 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062661462 seconds)
  done (took 1.598469358 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381372103 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109109247 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290623521 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069549326 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080884251 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247286819 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064287949 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069895348 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069964539 seconds)
  done (took 2.576899454 seconds)
done (took 13.559335434 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077561598 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084554269 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093855757 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.340286086 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090706855 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065044454 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113108386 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185809268 seconds)
done (took 2.215057474 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211085587 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608066886 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.377639086 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193417502 seconds)
  done (took 2.335732254 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322418262 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085588686 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058149795 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065564473 seconds)
  done (took 1.69665652 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065119595 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067758551 seconds)
  done (took 1.292371317 seconds)
done (took 6.700255377 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065434771 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065432601 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083429292 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062666965 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066113674 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062620157 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062700555 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065239607 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065017953 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06499795 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0675239 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064511235 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062793561 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.06476794 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064927754 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062518433 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062579234 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067149681 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062691128 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062665173 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062666154 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065037589 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062864262 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063212025 seconds)
  done (took 2.753991063 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082142681 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065543646 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070718894 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070367152 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069164639 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070376236 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070333399 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065594594 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070077379 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067297022 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068856481 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069084998 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067156955 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069284757 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067564853 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068917251 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070517167 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066737613 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06733919 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069310665 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070349344 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065528682 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068908173 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070197126 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068901066 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068558115 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067428049 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065686115 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070444194 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068893667 seconds)
  done (took 3.240767386 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068783206 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0626814 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06423266 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069832363 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063744559 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064228519 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062684966 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06340128 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063711255 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062735833 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064190724 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062470347 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062766527 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063434465 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06358388 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066362293 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077978778 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063371807 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062929157 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063544787 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065971879 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062897585 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063407472 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06305418 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062916814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062384717 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063364308 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062698093 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063445425 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062554279 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065573316 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06625436 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062917164 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069365666 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066112493 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062292211 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066718251 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062337271 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063383726 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062172431 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062533618 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062603704 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063059644 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068900828 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06281561 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064240273 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062832326 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.170859467 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.0632137 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06508126 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062317893 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062794966 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064277885 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06380614 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066284823 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06201426 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063054287 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061954711 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06339716 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062092374 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061981946 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061856293 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064700899 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062803837 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076656115 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068953383 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062540569 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064239835 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063554617 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065317969 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064354269 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075138771 seconds)
  done (took 5.920672084 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089192594 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08766917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064605039 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064316739 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061270053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063308516 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06674472 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063423251 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064543491 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068608588 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063297954 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064209222 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064319053 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076212123 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063778966 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064571152 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068709795 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061353639 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063367475 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066198169 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063502572 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066861832 seconds)
  done (took 2.66417014 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152709229 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069729185 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104190123 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072198749 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066826031 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071540766 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068893618 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069054026 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069026941 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067434054 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067541662 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069031487 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066948494 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067352474 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067217805 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067392142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069174587 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067206837 seconds)
  done (took 2.531786633 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075964418 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065513803 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085372442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065603373 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065267084 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067760414 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069576802 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073405018 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067561243 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065175518 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072981691 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067438496 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067654271 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065088267 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067231706 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065005479 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067440036 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065255895 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073064345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069366863 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069457693 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073071164 seconds)
  done (took 2.703255244 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078944648 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0670604 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081927095 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068314512 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061025556 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063759129 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068811117 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06481095 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069167897 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066586423 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065056955 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064139134 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068676159 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064911685 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068141256 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065285716 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066480542 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065099501 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066666885 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06105272 seconds)
  done (took 2.526167793 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085975268 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066967534 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066806658 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074692943 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066464231 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066093314 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074419947 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066692102 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066631243 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086532629 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066565698 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066276108 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073995154 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071013364 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066083424 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074270881 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073765542 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0740966 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066303507 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06642594 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0858678 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066004623 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073954892 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066111577 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06612546 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066422967 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066299695 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071451282 seconds)
  done (took 3.165624254 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065608166 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065443652 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063101781 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062594975 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062253089 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062469991 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062698599 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062539 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065097992 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062651045 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064970863 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065266561 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065051578 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064758846 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064974759 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06534555 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064870858 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062990427 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062377015 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062388885 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064865474 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065334919 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065032099 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062671524 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062548008 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065254634 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062644912 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062718794 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064837509 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062564019 seconds)
  done (took 3.100521034 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073902687 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071946523 seconds)
  done (took 1.332140256 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062502298 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079135428 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062376441 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068702249 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068520006 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06573585 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072383479 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068501854 seconds)
  done (took 1.729580617 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080782742 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07703202 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067566144 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078873673 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077615809 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081787431 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131122246 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066296249 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071621423 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063178119 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07856891 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064710717 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071416069 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065697026 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070945514 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071279567 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063184029 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071510636 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067769436 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06421686 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06651384 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073865273 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067907778 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061037783 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066156146 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086694715 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076561103 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065264228 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068347946 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072558383 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071296883 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059658499 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065206311 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065756677 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064073314 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075002263 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080403249 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068638473 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073913948 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066520203 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076105513 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060741964 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070054296 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072187281 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075770961 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065895221 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066374755 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060360212 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063754877 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067816393 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061150044 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065939504 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060453759 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074615012 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069614106 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076792485 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064398062 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067474401 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068450869 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068899551 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072367005 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06771226 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068495202 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065141883 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072485005 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069893135 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074025117 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060819723 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060016527 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063469101 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074743291 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086953147 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071390123 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066400118 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066298678 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063151409 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068578857 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066331433 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070516981 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07098973 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064985464 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07014751 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072013701 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065299251 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067650219 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072729694 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063116801 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067177835 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062892537 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080366915 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063305837 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06251418 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062399361 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074007114 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067050045 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063644992 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062175768 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070915303 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058341535 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064936272 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065301011 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064783255 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074014175 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068346999 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068539491 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072975943 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071487439 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064405445 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066798707 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06115912 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064841568 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063154389 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070827712 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058213331 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067028053 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064819794 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064820746 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197229697 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065293598 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066487046 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074361354 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072133869 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064583972 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063228361 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068733185 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066546753 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069154067 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073845641 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064669826 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061214177 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060930695 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069957489 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065884188 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069988989 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070890518 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069016055 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060816312 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06461116 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071491829 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074788854 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066886602 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066967453 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072562021 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067266853 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065636728 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072413907 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068491254 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065146114 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071750042 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066801494 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061710459 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068772582 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068394985 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064412994 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069859689 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069910117 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067946757 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066303077 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065362521 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073437897 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066898367 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065393165 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06620437 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064907202 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076199294 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067848168 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061051274 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062846724 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074692479 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06389816 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065685929 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065530699 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068802044 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066424865 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064249879 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065145486 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068270952 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076362187 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070084938 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066823512 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070990751 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077055034 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065755979 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068100201 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065137075 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067289392 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065517875 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074943107 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071069532 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070637413 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067820373 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062468809 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070737679 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072908537 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064647142 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06337823 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064737919 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069559111 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070805129 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06943679 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065969648 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063286333 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065769727 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067822312 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068184811 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064314368 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064355299 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071415261 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063934406 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072142996 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065524645 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074372034 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068112737 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059801583 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067092742 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062618431 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070319521 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059724853 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062184633 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063528679 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064631053 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063055833 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066426456 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058819862 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070527003 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071422606 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065053648 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063783096 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063661414 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07060381 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065641135 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067910224 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067836543 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070174439 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074284331 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063539237 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06727154 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073630262 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064331003 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.186671673 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07201327 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065648225 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065913496 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06450154 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064577548 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069326065 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07539229 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073077609 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060401498 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068889364 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06491502 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065067008 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061662053 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071127394 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069196088 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066683723 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073008436 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067085188 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065904814 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069689526 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066071622 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06711872 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067173892 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069386401 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066985688 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067919071 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065885501 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068952577 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064992921 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063858612 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067941077 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065962107 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066172962 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071327649 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065510127 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066341852 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068791804 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067118425 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067149237 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066653638 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0657177 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069444304 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067325135 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066686029 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068614536 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060925357 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073458538 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065950496 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074064831 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066219188 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063051578 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072944216 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069051519 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071999305 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06745844 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067310721 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067551378 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065895164 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06833409 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07305481 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063927126 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076980956 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073888644 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066101924 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068639909 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06683655 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067879119 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064711951 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06634017 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066268732 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065587463 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065366242 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070146938 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0682197 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066296096 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066849354 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065989466 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065687514 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066539367 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059969668 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065103593 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064970992 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065493493 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074737411 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066346977 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06502079 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064571962 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066144215 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064242167 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062325382 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072999398 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074418912 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066470699 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072690958 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06488676 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066937473 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075724713 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059957197 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063385523 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062993964 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062780469 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071714066 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064917974 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073895361 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064409981 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063559771 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061942766 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064863952 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063655682 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059127761 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061747516 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06796242 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063384457 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063505606 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064460397 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066773299 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06514383 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072893586 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063435969 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065081001 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063858709 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061161565 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063376292 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063168516 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.201178944 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067761595 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065447034 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063764328 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066105176 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066749666 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068159727 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06606896 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067686293 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075463245 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066309761 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068952667 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069052499 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061231873 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06933284 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065917915 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065553447 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065259369 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070240089 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068753035 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067586514 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075651217 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065974281 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066760106 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066229686 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064441998 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066312795 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065838645 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065598754 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06493629 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067351393 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073711259 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063997197 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068491955 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065989987 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066294201 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07218748 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066239081 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068832479 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072766133 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066328688 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068143591 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073635532 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069959748 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069639835 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068041836 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067979598 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071775107 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065155512 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072175252 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066582525 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067280493 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067985086 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063736205 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065767219 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065856801 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065352381 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072520351 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067415297 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06523376 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065130085 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063902852 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067193834 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069308221 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073529955 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067995322 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069040925 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061386559 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063383226 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066923498 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063990144 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067606611 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068426972 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071105352 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067796802 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065532256 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064660182 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075267269 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071150814 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069386154 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063947772 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069230327 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066575337 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067706314 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067015776 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065608753 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066758716 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06957516 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067265375 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065031833 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071865907 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068517397 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065812203 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066601888 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066328587 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065596026 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060585829 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065705138 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067293555 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070276941 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067770275 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065150191 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075275813 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062844176 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065533859 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067574189 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06368611 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.068531808 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059571092 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065921533 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065065597 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065474119 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059585904 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064073159 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062344353 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066581438 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064073198 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059344396 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073951739 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073086131 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066778927 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063294203 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063139809 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059881822 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060173102 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.196281779 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067719256 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068264675 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076199931 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065785108 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065238703 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061652731 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066632678 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069674487 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069707709 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063341346 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06091527 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06519981 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068881697 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071909434 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064526288 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065155038 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068947564 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068634727 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064934832 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069708795 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062700166 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070142218 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078756745 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066864298 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067121767 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07240405 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07360329 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066619705 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06184797 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066547329 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069000364 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066643317 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066888335 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066472234 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080212483 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069343375 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065307991 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065248023 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068754207 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065227814 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074136011 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067690257 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066740035 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071061065 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068114756 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074936371 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068666536 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073699802 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068737785 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068831367 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066124847 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065978845 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063965979 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065351154 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067102673 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066859117 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071654369 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073959771 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06520333 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076243309 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074746451 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066944942 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062319409 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064808054 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065102394 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061321227 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066403985 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064612165 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063805895 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064276916 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064473719 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067311163 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07097616 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066174308 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066680883 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065297627 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059705758 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068120995 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067607624 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066456029 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062422383 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065393792 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066297748 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069747445 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068413859 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063171025 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067139497 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066979563 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066122816 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060523148 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071644054 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06446542 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066911443 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064951015 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065276959 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066554371 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068908744 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070201684 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067960669 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068017619 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069497267 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068042075 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062917047 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062481456 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070325727 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062745258 seconds)
  done (took 41.989840274 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100779782 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063119992 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061512977 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06163856 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072791812 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062487698 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061316259 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062635584 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062713347 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065126595 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062056407 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061634222 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070305457 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077467045 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07341956 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066392966 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061760832 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062844052 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062181387 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062841844 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070548429 seconds)
  done (took 2.710310753 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073620841 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069562612 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072918473 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075381271 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066870877 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069964454 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071999496 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069836258 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075189669 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066798804 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07624626 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070449958 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066758561 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066790783 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075048274 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0707366 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075868112 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066889924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069907671 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072312081 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070317627 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072061921 seconds)
  done (took 2.834616802 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066352504 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065763487 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067825639 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061499955 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065695978 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061063219 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069387379 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063991598 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069273457 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065130649 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065030832 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065090947 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067385624 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061653903 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065941829 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063667216 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107739771 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068620518 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065347637 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066479427 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061169915 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067816528 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061295327 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06157252 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064857893 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068927275 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066216259 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063938249 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065363887 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064713928 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065262622 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063269651 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067181205 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066435959 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064659451 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064590258 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064901374 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065093388 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061175312 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063136695 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06624833 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063586478 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065787012 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066761814 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063693402 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063362868 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066788797 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064756902 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060213428 seconds)
  done (took 4.496628933 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078314309 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108127109 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06753436 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087706498 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079490526 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074437934 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069003773 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088713494 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062863707 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06421437 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080946044 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079410995 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065493447 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069925789 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068944949 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065401768 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066097309 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064301579 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068902935 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065138174 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06917735 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07176157 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079245735 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077796361 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068788079 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064109404 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065007303 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06946108 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077438007 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069280284 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069686087 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070336891 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079707338 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067311146 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064227045 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067769792 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080798205 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065224756 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06723703 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062824695 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067170794 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068975293 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071066808 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08077512 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06533164 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069971652 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064758295 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061994678 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077076867 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067146466 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072559759 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07867259 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068637978 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065223751 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068965273 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079441116 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06457618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063004565 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067515717 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076553352 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062235048 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068420599 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078668485 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066983999 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071668645 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078816234 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070160269 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068696695 seconds)
  done (took 6.250542403 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075427937 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071914381 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079983445 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07958843 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071492497 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071587223 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071522371 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071566341 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071277608 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075838812 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072011067 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092303316 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066974027 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074447978 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071623515 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071631548 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071878028 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071691939 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071743471 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071802137 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071640932 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078855785 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071857817 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079607412 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098098765 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067350815 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073634596 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071668296 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079327242 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071772741 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078857787 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071475456 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071642344 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079504062 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079334365 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071593467 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06519394 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071405265 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071627732 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071297087 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066934947 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079092618 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07087861 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066736276 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071597866 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071847268 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078734422 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078386254 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073596805 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075727919 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071829266 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078871905 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070726953 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071209406 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078603831 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103605332 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078639449 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079036814 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071448289 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078844146 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078618547 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08493828 seconds)
  done (took 5.942501175 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082830333 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074683746 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075061469 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061270544 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063551421 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068836922 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063632207 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063811801 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073491979 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073577959 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075914622 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068907648 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071827032 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076207364 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06896636 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071871329 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068731001 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069040375 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073581661 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069101316 seconds)
  done (took 2.705285364 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073745038 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082520572 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066384042 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071430449 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06837613 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071290538 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068075308 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068436894 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065998125 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068398027 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075509661 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075113311 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066121382 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071223938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074892161 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071039326 seconds)
  done (took 2.420798171 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074073381 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07213369 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079615833 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065400503 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063591314 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062043249 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06516904 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06081517 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061764062 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07684908 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065053243 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067875396 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065136655 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06614219 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062592651 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067736955 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062201835 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062661657 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065446249 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077356258 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076039627 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063989172 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066114589 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065512612 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065152368 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070054487 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064643599 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062991635 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062391971 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065575057 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065821953 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068518851 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062431509 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063296177 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063675267 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062423079 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064541649 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065409805 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067386708 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065223597 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063333103 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064847014 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06511614 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066179771 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061570638 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066106745 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061711237 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067166668 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063145837 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065417125 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065221439 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067457758 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065533633 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071579476 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068179986 seconds)
  done (took 4.920779913 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078375062 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069031561 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061346186 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063227301 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068149999 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066931929 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068427249 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06698858 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066832962 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063549701 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067040288 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06775546 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067213071 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069047336 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066986256 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068646623 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061310332 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066900687 seconds)
  done (took 2.501857284 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070511529 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065393651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072200446 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0648708 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064847791 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067586607 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061612498 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063604281 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063841198 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064953383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06484109 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067529326 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063696504 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067457402 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065251262 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065135404 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06745201 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06410899 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065047792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061273163 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067245526 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06417544 seconds)
  done (took 2.731041289 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071806985 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091673104 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136628612 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082571011 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080667506 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07838454 seconds)
  done (took 1.832938027 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089661704 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078228718 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066011448 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087079005 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072384258 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066593369 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06666696 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066816661 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075098744 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075042545 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066769757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074920301 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075362233 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074240579 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072437917 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072208523 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066416039 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06653701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065667085 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082942232 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066967964 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074941011 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066698037 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066943792 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066559809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07457341 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075147997 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075067985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066085609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074670984 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07198129 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067133053 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075110001 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075369727 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068697161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075377929 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067104843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083381641 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072548157 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074643097 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068429601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073055464 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07540265 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071551359 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0753802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06698752 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071058747 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066897569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066993103 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085105077 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072179958 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074356496 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072701056 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075358993 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075057366 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084941728 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075443008 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074927654 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073137188 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077130827 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074316755 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072238994 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074389033 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075203942 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07286562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074397787 seconds)
  done (took 6.115646312 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081272277 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085650915 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067405325 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075475191 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074565406 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067006749 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0672518 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067094638 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066862805 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066881495 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106146333 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067075206 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074790017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075102176 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067029452 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066991585 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066672822 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07435556 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066744939 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085531156 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066980153 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0746175 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074397977 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074578128 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075450542 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073066036 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067175811 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066512256 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067080941 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066558993 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071637374 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067041783 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074579163 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066770486 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074625965 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067309213 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067260385 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071240652 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068559817 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072488076 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074629354 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083094612 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066969819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066797245 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075669444 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067310215 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067128307 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06687314 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067249434 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06707658 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075450806 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075701118 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075700972 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074497642 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067152175 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067027046 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066927659 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066801068 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066861166 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072542465 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074524776 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066831992 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08524057 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0666719 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067064547 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07436173 seconds)
  done (took 6.035152849 seconds)
done (took 126.314667577 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182621697 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168209989 seconds)
  done (took 1.639879854 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067855174 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095252499 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076715212 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127063243 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066540757 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098966138 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097856017 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077397279 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065758392 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065970161 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065572161 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067339041 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129972182 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065735631 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06591189 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067336818 seconds)
  done (took 2.603248038 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095642394 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157300194 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098455406 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064025217 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096197414 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072496795 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064351272 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074188003 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070453361 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064739881 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072203973 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070505546 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064741792 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070651833 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071101646 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07259525 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064675332 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072478849 seconds)
  done (took 2.721059803 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098555733 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090151295 seconds)
  done (took 1.495402614 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159260743 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105071976 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151710519 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342743926 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165991447 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230039527 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129615204 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.131275729 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11884051 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124942463 seconds)
  done (took 2.962988956 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097879853 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149678148 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252780919 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114141944 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071703812 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093784305 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11584991 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076742644 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080420893 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080116566 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079930101 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075840623 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098508533 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07356882 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072993109 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075725515 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101956372 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072454222 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073789415 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076635938 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099302721 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065939335 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07304642 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071947034 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077166727 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076867865 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065666597 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065516126 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076431171 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073095014 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07645387 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092140519 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076591177 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105463975 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069534639 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106665211 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075907215 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073357579 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072983723 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073743003 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078013607 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078593692 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071162762 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075458593 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064951513 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075571041 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.0666707 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065041792 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077422605 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066484087 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077688689 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076817813 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106228885 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066249463 seconds)
  done (took 5.878948835 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099441234 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102955963 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071862749 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108075141 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096550853 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071059578 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099883501 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089805135 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101003412 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092099002 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087904273 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070481556 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08085175 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082465149 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107701332 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101015373 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0944058 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070683181 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100419651 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101060354 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068258868 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09415315 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090008527 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100175508 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067448692 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070048933 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067941379 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070393819 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075902644 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077658183 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069865317 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.100561421 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083519406 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077348033 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066858501 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067659231 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067812361 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078480306 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096474474 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077776136 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076721901 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06713309 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06783949 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070813433 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089943883 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067305953 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078134176 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079633791 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078224625 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06947869 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070542136 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068354119 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069305119 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079070632 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076855468 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079636965 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078912681 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067824256 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068589497 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07171859 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079748018 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078237748 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078250748 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091445217 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077879679 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068131481 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079274269 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083179879 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068588686 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069639867 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068146541 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069546717 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06970092 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076675822 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077093014 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069606144 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06944004 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067820152 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078730388 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077115828 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067853239 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075897806 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066572423 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067660014 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069364717 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068918349 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075688044 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077118059 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068571248 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066838383 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068120827 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067011758 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065073937 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074141158 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07717426 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076593512 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076422497 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068541013 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076268064 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07599546 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068481048 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076214948 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066784021 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068633724 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069464117 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075116545 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07466287 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076018956 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068172844 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06650501 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075195839 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077153269 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072600911 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075139301 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077338425 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07633024 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065975399 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077757726 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066652925 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076239777 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067945758 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076251458 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066578938 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075394882 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066518173 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065503562 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066483001 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076140757 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068271102 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066660958 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067887586 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068474134 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076153146 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079525696 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069321464 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077614225 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073611056 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066926824 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073650853 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065687344 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07390527 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067125284 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066861076 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064897101 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077639007 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066659015 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06615332 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067550241 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076134975 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065811467 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075309858 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073645905 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064813937 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077214236 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075713484 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073304806 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076312845 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068229148 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066080019 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065753605 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067693061 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073621798 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075280754 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068223517 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066590828 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07385806 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075753556 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065351269 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073158773 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074353674 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074455297 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06634331 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067297755 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075404798 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076791259 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073975224 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074533043 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073140258 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065909399 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072232284 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073805645 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065294903 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080118392 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065134569 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077886156 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074758124 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07242895 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074946082 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076449924 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07605878 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07493235 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078088856 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065456132 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065283684 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074957793 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065441483 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066335814 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074198471 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067460382 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067016764 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078794742 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065753613 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074840205 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064933877 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074168482 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064544124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067761787 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078712885 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065236891 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.305386869 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080193341 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071969432 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079579584 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083013108 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080545892 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070976667 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072527675 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082022462 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080374483 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070086396 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070032599 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072565499 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079092977 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078699468 seconds)
  done (took 18.293638315 seconds)
done (took 36.90911134 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20894063 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151357485 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.204198628 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119015276 seconds)
  done (took 2.119622944 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12168729 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10125689 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095313879 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065865061 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10193394 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065956626 seconds)
  done (took 1.929764646 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314668976 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218499255 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182353125 seconds)
  done (took 2.088286232 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197433571 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186687378 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.396125117 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252656091 seconds)
  done (took 2.515508902 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142783505 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088397431 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066504084 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08285953 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133616249 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159458617 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100679076 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125191423 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077692482 seconds)
  done (took 2.404118858 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144262602 seconds)
done (took 12.575143937 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.173878436 seconds)
    (2/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.215749228 seconds)
    (3/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101668326 seconds)
    (4/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.241008497 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.1428091 seconds)
    (6/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076077921 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079710295 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08135035 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107880364 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190271507 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077192508 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073995302 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073179704 seconds)
    (14/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075714151 seconds)
    (15/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072572608 seconds)
    (16/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052027194 seconds)
    (17/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.18087608 seconds)
    (18/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071849878 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.154876324 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105798682 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097335002 seconds)
    (22/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179902332 seconds)
    (23/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069657964 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068562997 seconds)
    (25/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.219782778 seconds)
    (26/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07682609 seconds)
    (27/309) benchmarking ("sort", Float32, false)...
    done (took 0.126720714 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109462703 seconds)
    (29/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.18846173 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.188783647 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.1088316 seconds)
    (32/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150309117 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071795876 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09602152 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07198412 seconds)
    (36/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181064003 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145195961 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075545972 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.198887954 seconds)
    (40/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067879183 seconds)
    (41/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.170529005 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172195684 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147548198 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132780047 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.137012457 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091673241 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139549519 seconds)
    (48/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.062165227 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.191673202 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095716009 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072511305 seconds)
    (52/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098335045 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065342318 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090910102 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.215734269 seconds)
    (56/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.150286203 seconds)
    (57/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096910066 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065854305 seconds)
    (59/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.072608579 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065333156 seconds)
    (61/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.15007272 seconds)
    (62/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111342938 seconds)
    (63/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.15479914 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130898694 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066328894 seconds)
    (66/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050888147 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107624777 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088795519 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088821537 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051587544 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075292575 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086137518 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136954176 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13197085 seconds)
    (75/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181296275 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148234324 seconds)
    (77/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062448246 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098794634 seconds)
    (79/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05070493 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092636974 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.209961343 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090271404 seconds)
    (83/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101005519 seconds)
    (84/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051403138 seconds)
    (85/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097349791 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.135471451 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072898279 seconds)
    (88/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05154554 seconds)
    (89/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.186441826 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 0.126101187 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052126224 seconds)
    (92/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098964464 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116300608 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072232564 seconds)
    (95/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082314281 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077629116 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 0.066817413 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.146217993 seconds)
    (99/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098638854 seconds)
    (100/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064827002 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087986194 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187630251 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072662475 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089202538 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086519532 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066798912 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086395979 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.176099288 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07238096 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.197426321 seconds)
    (111/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.364011076 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072613025 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.186178985 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089605228 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108765643 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070131797 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.175242026 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067715014 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051658622 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050867016 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135984972 seconds)
    (122/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.161304473 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06812641 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138868377 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051056421 seconds)
    (126/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060953962 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076073721 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071038628 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066118594 seconds)
    (130/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060754458 seconds)
    (131/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069182687 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.133473276 seconds)
    (133/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075202207 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072687249 seconds)
    (135/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061418626 seconds)
    (136/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051986025 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050517019 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071765543 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100674458 seconds)
    (140/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075193192 seconds)
    (141/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050462956 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094146284 seconds)
    (143/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073361968 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07494781 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070076052 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070984604 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079592995 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.174849717 seconds)
    (149/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.105796305 seconds)
    (150/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185671762 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087980439 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064848806 seconds)
    (153/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073061528 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071317169 seconds)
    (155/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052811293 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066295637 seconds)
    (157/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065630328 seconds)
    (158/309) benchmarking ("sort", Int8, false)...
    done (took 0.138970586 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052175881 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064779241 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.151428018 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072170157 seconds)
    (163/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118225193 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068232423 seconds)
    (165/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050978762 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071422735 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149616224 seconds)
    (168/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050997191 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07271372 seconds)
    (170/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073712873 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089792016 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168634342 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065019098 seconds)
    (174/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080241042 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050825655 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05080331 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064370883 seconds)
    (178/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066095503 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065731706 seconds)
    (180/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.097881727 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050501988 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091700527 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05068971 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086884383 seconds)
    (185/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070994136 seconds)
    (186/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060660045 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053111783 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087415208 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064661757 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07098729 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.220386933 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173721829 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075300857 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08947677 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074614454 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051834818 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.152954486 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066873664 seconds)
    (199/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06563994 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065608994 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051443047 seconds)
    (202/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073701351 seconds)
    (203/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106877133 seconds)
    (204/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069894306 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05159312 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050996974 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064134774 seconds)
    (208/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081187304 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066102974 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051509699 seconds)
    (211/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073650364 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073618196 seconds)
    (213/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06170002 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078481007 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095469346 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071752082 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164364568 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065654304 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051878712 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076586505 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.070055747 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079252921 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074112283 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072552375 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074964454 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17366475 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052372587 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070720356 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066275883 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05291429 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07531255 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087234445 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066566045 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071139699 seconds)
    (235/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.149576808 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091159414 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137711152 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064663947 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072404985 seconds)
    (240/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095834011 seconds)
    (241/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052224388 seconds)
    (242/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072569687 seconds)
    (243/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06573456 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070795596 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064603229 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131616518 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065873989 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064973736 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05218711 seconds)
    (250/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074685871 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165266888 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064601881 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173948854 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053357259 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071853837 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064390303 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052066129 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052374429 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051287134 seconds)
    (260/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070798808 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052343974 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066467113 seconds)
    (263/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071882059 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065157328 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071847091 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072675751 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064471026 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086625511 seconds)
    (269/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065878883 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091784003 seconds)
    (271/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052435356 seconds)
    (272/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051694798 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06542917 seconds)
    (274/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051027297 seconds)
    (275/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087215518 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051718112 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064978678 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093067846 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05185287 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072328881 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175534223 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064010598 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051236052 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106480786 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084870558 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063723221 seconds)
    (287/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080137524 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052155476 seconds)
    (289/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067681947 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071745533 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064378598 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065485476 seconds)
    (293/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067038667 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069964417 seconds)
    (295/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052682873 seconds)
    (296/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.107895881 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085040486 seconds)
    (298/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052010366 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053629076 seconds)
    (300/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05175272 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064361603 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.06995282 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071224731 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067662557 seconds)
    (305/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.05981664 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08774985 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050985329 seconds)
    (308/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060303 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051216001 seconds)
  done (took 30.36541573 seconds)
done (took 31.752903665 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08686308 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092944047 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07527999 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093376096 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080683413 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077517783 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072610775 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078312104 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080238242 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081697328 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078744875 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055179891 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073982884 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073855902 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074062922 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09065496 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077630949 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072516869 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072717968 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064510146 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072486512 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065357236 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06709157 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054569309 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076932883 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071098966 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071882576 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073223308 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065249757 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065191112 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068312104 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072280177 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065061666 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07736461 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071749614 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072294515 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074450871 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075520927 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066900236 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065493622 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073304183 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065615968 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072439807 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072602196 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07118863 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.0703267 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072935718 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076960699 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090781121 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067572817 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073581318 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075329281 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075973264 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071916477 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068729699 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072454265 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070319456 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090846757 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072991517 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068157854 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073634945 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073313635 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070304144 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072285741 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072237627 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074720129 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075015727 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07121538 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074110512 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070609785 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065118914 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073479231 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068039653 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065289888 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074981267 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076217734 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064043445 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07101508 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072371261 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070916743 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064373712 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066984565 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067271834 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071023135 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067190322 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054337557 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068478536 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071195627 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064124764 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072526836 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071134739 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071348769 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066595047 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074233063 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06408123 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069576534 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06540273 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065056396 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066326781 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068484294 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064650113 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066898026 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073485276 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066356961 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070328543 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078048137 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064391363 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07061992 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063374889 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063831935 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078073118 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073834198 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064721668 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06669868 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06323957 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07129848 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063595282 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064414623 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064422914 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065244108 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070357067 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064765174 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066976504 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071484149 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076387741 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063974425 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067567422 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066010368 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063718177 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069088725 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063838067 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063771456 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201756839 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062835296 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068483201 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066343683 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073048552 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068004568 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073016153 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066811459 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072886519 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070145302 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072140828 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070372136 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06475208 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058944467 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06734169 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067605834 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066606021 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065607634 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066694004 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065828881 seconds)
done (took 12.379085736 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065861336 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140918085 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098354497 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094350384 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085354291 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066301959 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07521425 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100748927 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067473048 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102105171 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086566129 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084718321 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111370763 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064612063 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065603945 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068951364 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06652857 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082475655 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099800333 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085881275 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108606151 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065370572 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094069969 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08936744 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086650526 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101045887 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0664089 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070248847 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069342077 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090405408 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085867755 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070061843 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066998114 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099251129 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091424496 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082842803 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065867195 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081553485 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066902558 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066080182 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080503363 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097253939 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079316449 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07969056 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069385901 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068607573 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066701939 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082525128 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087948608 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078448421 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085961467 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102579541 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068377007 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065342662 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064274637 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084741444 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064999086 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06815941 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06591543 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067760324 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065553981 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06906788 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080609339 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085558568 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068878387 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079748808 seconds)
  done (took 6.76147622 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082909957 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089068574 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082083879 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082742566 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065460168 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066170271 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066013253 seconds)
  done (took 2.014113827 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066427557 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087546194 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088528138 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088291315 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084172656 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08616836 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075469072 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066406345 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079681883 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067272758 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086596387 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101247888 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06677372 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072227326 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089978652 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066152278 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089624383 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066039233 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0690567 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089293738 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067809908 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081641624 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069761305 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066428647 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080114637 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06620386 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112230378 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070123171 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067752812 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069423019 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064083237 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105527246 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079707751 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075141806 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066842059 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080286081 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081961125 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06616215 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083878223 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070872082 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07910414 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066614951 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066614284 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063881748 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069775053 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076297881 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066538422 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066275683 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068174084 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084805745 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066698954 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079099736 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070106608 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06846117 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067551714 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069804155 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07566503 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066812751 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085410275 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067428204 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082354754 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08168393 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079441983 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081492537 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068134478 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079279213 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079380004 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068612584 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067737819 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069818107 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082203467 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064408704 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067868834 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076444684 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067631911 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088141898 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088316236 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067137102 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07489421 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067334072 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066046764 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06602566 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088554811 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068298219 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065657248 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070336423 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068762245 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064394782 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065320693 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069435142 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063705529 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067629712 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068513643 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069299941 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068202455 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082031615 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068011962 seconds)
  done (took 8.691059948 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068956312 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067285045 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069071923 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067092477 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068197893 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067778204 seconds)
  done (took 1.910143955 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09291091 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069326644 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079795722 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071818179 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103290947 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086431836 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085884607 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078136645 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082928195 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078138517 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08568683 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087400042 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09187017 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072155239 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085748693 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071624828 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086399529 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075049549 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077854222 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072514899 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086054589 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072244314 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072630055 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081005392 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075623253 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07160972 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068350229 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078333364 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077732609 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078079301 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07209872 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075257258 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07002434 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078070511 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086317972 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069999116 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071157879 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076939126 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071913167 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075187084 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087221076 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072262057 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074353582 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076570707 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077827453 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069935362 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076756997 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075264735 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085343539 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076851844 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076402788 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070958915 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074852628 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076335305 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069516076 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077641634 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076238943 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085901808 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071670332 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069823436 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068434242 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074837719 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077171988 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074883467 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07790255 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076283361 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069537846 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072090098 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072192886 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071866157 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076338704 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068810936 seconds)
  done (took 7.025089147 seconds)
done (took 27.873754967 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543488239 seconds)
  done (took 2.012561454 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609942874 seconds)
  done (took 2.102320099 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.627641489 seconds)
  done (took 8.120872817 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.380400498 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476280309 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.71823019 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129840905 seconds)
  done (took 3.246496753 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.674686055 seconds)
  done (took 2.177663862 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207691885 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195529989 seconds)
  done (took 1.917667659 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376490903 seconds)
  done (took 1.870449371 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.107290409 seconds)
  done (took 2.604660818 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258823994 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162085292 seconds)
  done (took 1.919879742 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457276556 seconds)
  done (took 1.951948458 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.855456497 seconds)
  done (took 6.350804818 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204504806 seconds)
  done (took 1.757627212 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239517424 seconds)
  done (took 1.737567424 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70609189 seconds)
  done (took 3.201446036 seconds)
done (took 42.469817833 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079928091 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080957648 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081217017 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07762328 seconds)
  done (took 1.803671256 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076191504 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071958136 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076376285 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072299776 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076482555 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071789516 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073388764 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076038752 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071694857 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072486966 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072113983 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071629199 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074093484 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073449241 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0706114 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074300019 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075041954 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071784432 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075198665 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072764664 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070509111 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074322558 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074259414 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071487409 seconds)
  done (took 3.259562901 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077340479 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072512585 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074569812 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071277996 seconds)
  done (took 1.799717281 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077157707 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090734158 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088661204 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076854013 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091076407 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08555113 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068571384 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06843267 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071948122 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076674555 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067393032 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095343932 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087277435 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076811457 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078291921 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065449617 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06802784 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086993444 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076662326 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076866118 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069663717 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07623389 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067582541 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087702294 seconds)
  done (took 3.37814485 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077264455 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102633803 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077559696 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087110231 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089046228 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064934436 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07416545 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088796376 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12279901 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066742618 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06953086 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065416948 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071788008 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064662426 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07559323 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104122576 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107812805 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068191021 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094767999 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064928398 seconds)
  done (took 3.147008951 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072246051 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068969483 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065456853 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.0684035 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077321141 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072179697 seconds)
  done (took 1.936377417 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067500221 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066567479 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066854048 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066720111 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070779849 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066949973 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065335299 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066652592 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066201623 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06654141 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066177905 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065408391 seconds)
  done (took 2.310744984 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.412226683 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06807036 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068512359 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065474083 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070541623 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065926512 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079946733 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067635787 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090422624 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06612388 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066397009 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068238693 seconds)
  done (took 2.69965375 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204941431 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07555902 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234419031 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135887902 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111303541 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114369011 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103175561 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1118907 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141748538 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100563699 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167088448 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164789992 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10650829 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135960034 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08858726 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097109994 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154179516 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160416833 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102626724 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164008334 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142436449 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123127662 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146746762 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100660412 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105525816 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121409141 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070925188 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080002299 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168921882 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130514877 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145057611 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110601036 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092993049 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174227737 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168817557 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141055325 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133112747 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083578336 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100875698 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132663533 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197225945 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087371652 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160019955 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246399144 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081932175 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132808818 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120718095 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119442565 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107280154 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089325113 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145186761 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181533399 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137834432 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086538802 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112302423 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114487124 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115873598 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102560677 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180990894 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159540201 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1267929 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070854666 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098763516 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153682142 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131258407 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109302296 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126107761 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093178708 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133924604 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154229796 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117422895 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142412063 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127739263 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08804416 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118743856 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138744506 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127270162 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16862649 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123291975 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072309239 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123371044 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102296439 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080500853 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143606088 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074775188 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173480186 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097654391 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104861684 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112180482 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107837454 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107651231 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158861639 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142057164 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244162823 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066884311 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103839217 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120326837 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147018869 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087051687 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108572503 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116287979 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077097731 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136703512 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075326996 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122067236 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075091093 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124699041 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130864589 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074804819 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121774633 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101558498 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100482752 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133086739 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15989962 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08812993 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082026309 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166211278 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121053597 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103762935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143483674 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155122532 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098762386 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10159345 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148639507 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178691919 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088788178 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161742479 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106763919 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083828158 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086924128 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123033933 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111656124 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12107318 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081278085 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117434722 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166064705 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074256679 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093908713 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131834288 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078045677 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079534246 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101937729 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099183837 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093997051 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099286565 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102916597 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135431381 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121884558 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103587205 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27086091 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098584324 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170248 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088767374 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101422299 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10385143 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070058179 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136758759 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156591351 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079022882 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162540728 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122055962 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104132666 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119374758 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082393854 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139670023 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078013939 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069903106 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143437606 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111271609 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111581363 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148423193 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105034736 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125491639 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11959817 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133380515 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131987834 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128472854 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104950529 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087873091 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111738853 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12448716 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072718836 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090817836 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079516064 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103298854 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095128065 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082782438 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141112345 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12406771 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09967649 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11092883 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095830705 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14564449 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075769615 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126697941 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117788442 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092626681 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150239728 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150781101 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130267468 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098577147 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142990628 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069598509 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072808067 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088116967 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268541688 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084012014 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084105685 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117448792 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146786127 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128516842 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137665044 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110604118 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121387137 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154263607 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069075274 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115167153 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147927727 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121088276 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104295162 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090400207 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099471485 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141460354 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10781179 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181544917 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113419937 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124785807 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153921874 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098820336 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081752971 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102225063 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134283264 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104253325 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142905934 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099196262 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08772611 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109162015 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074055289 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099106558 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125981881 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119094923 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134800318 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114447175 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131426386 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076290329 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114964607 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118994698 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120413973 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.0636186 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118120876 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159176337 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092873961 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117178837 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151863477 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078655682 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12237068 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321898152 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145347608 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084573003 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109133737 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119439893 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127412748 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120509338 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13981884 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107735603 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134512667 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108072779 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085728749 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086738486 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097300654 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103973344 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09415015 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106910588 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113196579 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095193152 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130388135 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102722209 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109251868 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117713804 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096208375 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088024987 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09675015 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173711289 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118947449 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171671136 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098205167 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144468811 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162620902 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07419054 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078665771 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077580957 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138834802 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083375034 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129449457 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09712435 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104809819 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123357778 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140807057 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094737788 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067903006 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107745289 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132395199 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110765684 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096767437 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102808422 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16081687 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09956033 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078904719 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112267098 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10374819 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101862483 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169636771 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060846489 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241629915 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076362033 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081622138 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127594829 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153182371 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081228455 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102323551 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119032039 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110228679 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127312257 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101160027 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099588804 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114363872 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147996447 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128086495 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089542703 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111871367 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129172169 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154968222 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10504483 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110673969 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171457273 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151519674 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159333913 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088037634 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114321952 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116421307 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107401476 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139072794 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082747993 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162392567 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081722395 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135140862 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103363906 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089120944 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128443309 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098171499 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087666883 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146321681 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115652487 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081655486 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076563319 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115893967 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118380716 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10478276 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074323208 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136723564 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071769502 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130504469 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166226613 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080321444 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102796133 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241121465 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081083122 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10808744 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102891849 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089512984 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098796754 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171624212 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087930738 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149360356 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140525486 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112640594 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135503847 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09956979 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63563553 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077800955 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151255488 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115785104 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171966014 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096962852 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117926534 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108779793 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122693992 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143701273 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104193874 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180390101 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131122686 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116281773 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079168301 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101664494 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102054628 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08895007 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104250439 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112644488 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115191838 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092969241 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114958269 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122573039 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081510678 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094391054 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154827564 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11636779 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141890991 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137567752 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083745579 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11613134 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136359724 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07887226 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119841089 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150196487 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104996487 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096665721 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079447244 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246429937 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170574917 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07360277 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161022424 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119640382 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111142561 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113392533 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113764161 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131034974 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106456645 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121314331 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0937666 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110014749 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112250998 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081946283 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077019714 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103655528 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112612702 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097189291 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099192093 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09763415 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151079607 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071095437 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094640867 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103132075 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143729296 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172330298 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087881126 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082147273 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118005992 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112573104 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112387759 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119448188 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078995615 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081614529 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081373098 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07685368 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108314765 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111777722 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103999975 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11052448 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162591447 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082065441 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225401757 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094381676 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104194139 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069020243 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077442318 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094371606 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095592559 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106309222 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099014885 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167557407 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093802507 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088472786 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091076191 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072135101 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081566166 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125575271 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256182364 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119203424 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097572389 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062518682 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108876999 seconds)
  done (took 58.503938023 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10766128 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082666799 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096562457 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149535408 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122671201 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212431384 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156895108 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198744512 seconds)
  done (took 2.746922216 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067602035 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093929961 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099255342 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083425129 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067000573 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068431502 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223932538 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080267466 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067590848 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088292086 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079730648 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068822821 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42055594 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066165142 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067556892 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062797623 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066977323 seconds)
  done (took 3.384441599 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373077022 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363370317 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371788874 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073229846 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.881227773 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088698628 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.064166259 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095934964 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07119524 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.265212328 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.70700507 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091677954 seconds)
  done (took 14.06775759 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075308627 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069859148 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083535785 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083336684 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071445977 seconds)
  done (took 1.999958505 seconds)
done (took 102.600605107 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079888457 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389050545 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05326193 seconds)
  done (took 2.088462384 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08240642 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08425703 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084057162 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082942601 seconds)
  done (took 1.965215475 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074856278 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076325376 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.08375769 seconds)
  done (took 1.85886837 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222432962 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138029681 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086403675 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082137224 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078132769 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078068336 seconds)
  done (took 1.866720805 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072181285 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074585887 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072426413 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076342458 seconds)
  done (took 1.919747937 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075817852 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052558486 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055585907 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055522559 seconds)
  done (took 1.863037475 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085253871 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078426516 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077506151 seconds)
  done (took 1.861348854 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106687057 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083948424 seconds)
  done (took 1.809627208 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080947997 seconds)
  done (took 1.701607341 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097769705 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112682965 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126420672 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108322494 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13568001 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107890639 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085115001 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08789699 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076550127 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086727957 seconds)
  done (took 2.644741632 seconds)
done (took 21.723563145 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078534302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359536523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359975844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09079832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669201183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356573926 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967257069 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091636824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113011028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067283387 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083939752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64841725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958931194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.316159806 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945402347 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323603401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65363032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068074259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067620178 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067713627 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952728328 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067533127 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067658496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067761193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653922603 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371112939 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067683764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316101455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067620787 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069383983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354440884 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067896447 seconds)
  done (took 16.01814688 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071048481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117602603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072633613 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083262385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070106688 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069301704 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07291116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06900305 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118929954 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067423949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084296089 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067687633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071577427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068566719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087185441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068073196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06850046 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068186086 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06831389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068423042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085746387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067836457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068132093 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068394513 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06763834 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078751929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067785901 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067690356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068234887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069577255 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07049323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06872297 seconds)
  done (took 4.014751704 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114827424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124254572 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074213475 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102694136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111861156 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069898349 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143091075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092371512 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127036909 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067712248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08457237 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068253485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100724071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068534652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087572869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068225114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06935498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068831751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068336518 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06874597 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086907872 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067774937 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068307048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068795444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068727076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080920445 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068515393 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0688473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068618528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070517295 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071601938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069006035 seconds)
  done (took 4.274589724 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072781064 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075224441 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081728422 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083071735 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069113087 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071409556 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072399961 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069643434 seconds)
  done (took 2.232636703 seconds)
done (took 28.165745408 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078277662 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069033429 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072374853 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080465245 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073141534 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078088774 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067177626 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074559366 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071816058 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072422671 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074860673 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067312513 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070832611 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067386409 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073342282 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068073586 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078704355 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071393497 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079283858 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07870571 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069502463 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073045988 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073929187 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078351994 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078497728 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079195894 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076921098 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072401163 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068885971 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070219751 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07640916 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083611314 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068539229 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078758191 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068005301 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067360201 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071051895 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067583246 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079095837 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076345423 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069185309 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075621294 seconds)
  done (took 4.70659002 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086981533 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090198599 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084346615 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061416793 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066604416 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065505389 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087909603 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059375348 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059280512 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087165819 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055771198 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059012949 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062184247 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053842111 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059182013 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056549524 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061437769 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055569385 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059185782 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059252947 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057946126 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054164963 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059885781 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064204891 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056271709 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061446671 seconds)
  done (took 3.333265265 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074343063 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083732041 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088018171 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126516762 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114687019 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076440569 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077617987 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091344135 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085142048 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066740386 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071154688 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093726409 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087524642 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073162826 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067091957 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084098977 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081404817 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068421679 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073070013 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090173275 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083798714 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083015354 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092809829 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08031167 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066750893 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069917441 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071086262 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081125518 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072501623 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076319294 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071279272 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070870904 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069344079 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078599683 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071081199 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06898045 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090130039 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076537072 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.0779051 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06789896 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070343036 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068182365 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089238815 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121947067 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066872642 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07406311 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074482785 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076394389 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067222484 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086374018 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078168215 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066746097 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07045496 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06662158 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067477945 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080252182 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069094557 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069210583 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075816225 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070149027 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085565058 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071015084 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082920001 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066933877 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074802442 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06716496 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068089164 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066455865 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091960851 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068807117 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107601727 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068719185 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068000836 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075746762 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074320345 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072883165 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067635295 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082219514 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076999715 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070298975 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075359817 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07009963 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069828848 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087279183 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069390319 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068467109 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067876261 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073027473 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069909324 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068296146 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079734605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067230421 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06976577 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083239718 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066927338 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068236343 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07310149 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072071265 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066513322 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077591092 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071592374 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06761984 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075662919 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066926794 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070130884 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076919162 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072892741 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065884159 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070888748 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07290664 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067802904 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068086285 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069771768 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068568708 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076163452 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073385648 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07133509 seconds)
  done (took 10.513727149 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159883006 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153340019 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071010617 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144341808 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076043453 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078945065 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146430517 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094493839 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068047419 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068186609 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068647373 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114957886 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104788339 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121728072 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07841561 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067380364 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082713213 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116489734 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148466722 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142470026 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083382119 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076120101 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069654012 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068851584 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073944374 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082256072 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091096332 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076164699 seconds)
  done (took 4.41227427 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080414777 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099861762 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073754761 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08889426 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089803662 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067722439 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069534262 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069394601 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080274298 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078315508 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067617243 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07356058 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074058688 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073574035 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068807868 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074071058 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075082843 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069624791 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070657245 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072586021 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077600039 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079894375 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071069732 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066830389 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074074615 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066438264 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063682745 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084123082 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068061127 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089505536 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065560912 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074614947 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080949949 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068311431 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067135396 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067556111 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067364944 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067309234 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068761117 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0662593 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065600884 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057451835 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066774354 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079410738 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073361902 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056374649 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07208301 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072699676 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072446672 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064854401 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070005129 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070129973 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070874582 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07449286 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072378297 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072536688 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068605383 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065226899 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075321219 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067210403 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064329761 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065974996 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071751201 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065512062 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075024808 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071360506 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065727214 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066562175 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069220012 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073332099 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066992528 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070103085 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065003635 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06914934 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072495393 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068850772 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068260297 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065807167 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066909678 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06723033 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055212725 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067055178 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053300477 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070523162 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065740675 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06581821 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067339397 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071807974 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078985249 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068275293 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072850723 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067926258 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066371944 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070433589 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059799719 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069773473 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081779532 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081747303 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066923377 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065169453 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081473548 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071925621 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066101788 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05578886 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074232344 seconds)
  done (took 9.105325343 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093200516 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087337213 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069351638 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083066357 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.09030982 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085457268 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074452311 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076234207 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069102427 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081978444 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072889239 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076062849 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068300486 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076599798 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092947129 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07660073 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069320536 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076765249 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072100251 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100086634 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082189829 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081356465 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074793123 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067900073 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075291985 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079491287 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088690272 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079661767 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078336513 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075508601 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079723001 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089246188 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.07346422 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071703552 seconds)
  done (took 4.377236982 seconds)
done (took 38.081925346 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.71296986 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.89537365 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.720167478 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.097900856 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.874950177 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.745867189 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.916923649 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.716768162 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.882282945 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.757979937 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.972657554 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.777154897 seconds)
done (took 64.723847978 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.739832492 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.860788678 seconds)
    (2/2) benchmarking "String"...
    done (took 1.988110602 seconds)
  done (took 5.508375534 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.019845693 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.247736521 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.961607594 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.713356414 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.719218244 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.018891786 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.51516081 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.252206781 seconds)
  done (took 30.089839042 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.884875862 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.909958655 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.361225379 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.395017237 seconds)
  done (took 15.260115553 seconds)
done (took 62.354461382 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.729692228 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.753258373 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.721586821 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.698931228 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.769962927 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.728956402 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.795306906 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.905470423 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.716992593 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.705637066 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.714507108 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.132965967 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.714628622 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.815518355 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.715733536 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.72456945 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.781858769 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.143316386 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.870717406 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.73409051 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.714469023 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.730237362 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.717510271 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.719575431 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.731457946 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.712703087 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.131709361 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.71883693 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.329515897 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.717870595 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.744311731 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.987652148 seconds)
  done (took 202.488973518 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.714211746 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.619956202 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.641987137 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.716702798 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.10171191 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.910549573 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.850978994 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.138087725 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.714481171 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.741151859 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.905019251 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.713773211 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.930841285 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.663826659 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.722241167 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.823633749 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.879590601 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.931440205 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.718942909 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.982737467 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.717800819 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.76314743 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.699941505 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.883235143 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.726358076 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.804844828 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.878760007 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.73326631 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.910916154 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.854439564 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.738986363 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.733973641 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.942064206 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.588959782 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.73374123 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.722523248 seconds)
  done (took 167.514973684 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.124078672 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.717427443 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.717771015 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.71902249 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.730745473 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.718837204 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.854151216 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.855932953 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.180255661 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.320339448 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.721788732 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.768787387 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547461728 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.71763192 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784858316 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.73090866 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.718669034 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.732661116 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.743912646 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721946456 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.717963002 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.849965434 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.73012077 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.734477915 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.726780928 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.719066448 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.722889145 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.08811587 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71880408 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.723253719 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.977179328 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.718632276 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717729235 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.61629564 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.054859697 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.808349387 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.719790921 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.723960424 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.718196709 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.938258655 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.719714456 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.718301197 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.722377032 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.896808212 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.719411127 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.854924152 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.718844566 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.218112953 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.717519971 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.718463783 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.440181368 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.372161886 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.717918079 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.717505331 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.720767422 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.717529689 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.718136007 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.724529039 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.415469084 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.721360127 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.790933185 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.721120775 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.721616656 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.724695537 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.718473227 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.836189204 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719805372 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.070003634 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.782020728 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.944012897 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843670968 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.722247365 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.787898843 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813411084 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.72120589 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.718304099 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.719436391 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.719077689 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.80329335 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.722003335 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.719816716 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.838928362 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.728840373 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.720780941 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770604491 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.790053321 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.721694249 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.612155564 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.722229883 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.720523643 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027525705 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.787738485 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.720369831 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.719725289 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.720539091 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.840540697 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852354889 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.512705995 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.722022144 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.456961008 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.7219187 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.720270441 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.858536684 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.720917506 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.892601013 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.721018304 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.804279694 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.7268981 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.72382657 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.72135101 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753521767 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.722246389 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.77943388 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.721466877 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.091383966 seconds)
  done (took 396.66007331 seconds)
done (took 770.500017918 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.402300237 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.357929826 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.481344777 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.383089214 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.361553372 seconds)
  done (took 13.652301596 seconds)
done (took 15.31805383 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.806734772 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.812066331 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.746113759 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.810654365 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.741267231 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.810071541 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.792493993 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.745733787 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.778440242 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.746523194 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.778544981 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748630549 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.736516648 seconds)
  done (took 24.722316015 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.956331641 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.962494589 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.795057423 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.970708706 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.770968729 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.9636532 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887172705 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.877948887 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.876680103 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.740291066 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738462255 seconds)
  done (took 22.209887091 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.961767058 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.977577687 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.799725122 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.966259978 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.774940235 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.961640915 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.889533208 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.877761753 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.877847171 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741758661 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739155311 seconds)
  done (took 22.238391585 seconds)
done (took 70.834693601 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.735532547 seconds)
  done (took 3.405002801 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.756344629 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.891427297 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.73947804 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.737431533 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.737186394 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.736764773 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.738330899 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.73538822 seconds)
  done (took 15.743582983 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.733018299 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.731128117 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.733793095 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.732289431 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.73413191 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.731341372 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.731244534 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.7338047 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.734375525 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.731283642 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.734180409 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.732043568 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.734394808 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.735062641 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.730830028 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.732397455 seconds)
  done (took 29.397702681 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.733716403 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.731301581 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.730792205 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.73161844 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.730340719 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.731554729 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.73334487 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.7318614 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.731052233 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.73304677 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.732830661 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.731249377 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.731282876 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.731727462 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.732765824 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.732922159 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.73138937 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.732243339 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.735279441 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.732198857 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.734958263 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.73197011 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.732364138 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.732497422 seconds)
  done (took 43.249998539 seconds)
done (took 93.465100193 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.417893794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.18066675 seconds)
  done (took 8.270391185 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.737139085 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.737103826 seconds)
  done (took 5.18434537 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.736469423 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.734503257 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.736296839 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.735579544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.737099115 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.735253021 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.735645454 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.738122122 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.736106871 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.733668413 seconds)
  done (took 19.032457841 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.736318924 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.735540065 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.73290064 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.736250487 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.735701867 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.734739009 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.735923016 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.736392112 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.736236263 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.734486568 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.736786601 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.732379792 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.736575631 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.734161785 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.73724223 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.734642627 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.734794013 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.735590057 seconds)
  done (took 32.909538355 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.736406139 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.736694492 seconds)
  done (took 5.148445334 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.733657238 seconds)
    (2/7) benchmarking "second"...
    done (took 1.734808507 seconds)
    (3/7) benchmarking "month"...
    done (took 1.736152968 seconds)
    (4/7) benchmarking "year"...
    done (took 1.73473407 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.734085793 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.735916516 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.735239004 seconds)
  done (took 13.819934864 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.737304337 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.918178141 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.9896571 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.44085382 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.740019981 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.741132493 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.684332391 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.740912384 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.742952637 seconds)
  done (took 19.410441746 seconds)
done (took 105.446361509 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.541371131 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.733981632 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.097439046 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.784939436 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.752796261 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.031242765 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.748641406 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.962821484 seconds)
done (took 42.327853666 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.790363844 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.207416098 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.206973962 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.620547455 seconds)
  done (took 11.710800717 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.718109169 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.28346385 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.781020998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.40352303 seconds)
  done (took 20.064973666 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.103978175 seconds)
    (2/2) benchmarking "read"...
    done (took 2.095079962 seconds)
  done (took 5.880761944 seconds)
done (took 46.121637467 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.738792942 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.739814906 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.737154752 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.736160271 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.738509786 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.736904051 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.736095179 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.739000952 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.740929575 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.73886292 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.741956984 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.739694103 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.737778725 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.740331422 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74036521 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737755326 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737281672 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739894037 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.737448171 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738744602 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737892102 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742944817 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.739365375 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.738506978 seconds)
  done (took 43.408821868 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.741170724 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.738149426 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.74110919 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.739392282 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.739352797 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.741424774 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.741310071 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.738591602 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.741734124 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.740776992 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739650223 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.739514319 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.743612131 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.740204491 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742380267 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.739573847 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.741596582 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739431888 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743524311 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.741014403 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.743071056 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740665229 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.739214669 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742717567 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.739255062 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740132662 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.741740686 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.741197803 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.741395 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.739173636 seconds)
  done (took 53.90181946 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.746963392 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.749549971 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.742466947 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.74249114 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.743197569 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.742551764 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.7426809 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.743598106 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.742857599 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.742967701 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.744524698 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.74234265 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.744655412 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.744602322 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.743701053 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.744208069 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.743525107 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.742946195 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.743518005 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.74419885 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.74391748 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.744967694 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.745806566 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.744101844 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.744415254 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.745503114 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.744919615 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.745989759 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.744455942 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.744174779 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.745144805 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.74453729 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.743474058 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.744221273 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.743457079 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.743716641 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.749526008 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.751498504 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.745169268 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.743564348 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.746907002 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.745277612 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.74417663 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.744464947 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.747494399 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.74356842 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.745841627 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.746799726 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.744446421 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.744571892 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.746766 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.745345606 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.746379307 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.747068389 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.746590212 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.746361496 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.74596112 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.745876113 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.748617305 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.745864257 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.745707914 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.74572124 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.745867117 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.744760028 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.745812959 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.744958561 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.745385796 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.746188999 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.746227226 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.74594958 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.74575931 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.748345357 seconds)
  done (took 127.332007081 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.747260607 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.744126284 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.743556626 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.744735577 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742936047 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.746279992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.743247582 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7466692 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74306347 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747968894 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748256366 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.743910287 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744265386 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748428965 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74910218 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.745271091 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.74677743 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744883708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.748759631 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.747142826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.745933734 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.745855242 seconds)
  done (took 40.092434859 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74832668 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.747108465 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.744531016 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.748799379 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.744964204 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.748398777 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.747517035 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.748915215 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747010232 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744899828 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74391507 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747347816 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744929277 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74517629 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.744932531 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.747228601 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748206429 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745500053 seconds)
  done (took 33.123602882 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.744684989 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.745061048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.748028535 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.744596772 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.745713248 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.748020163 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747212727 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.750581029 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.748192241 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.745445919 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.7504875 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74958322 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.748880364 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746296502 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750174965 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.746315704 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.748658334 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74612753 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748133843 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.746651725 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.747037836 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748867202 seconds)
  done (took 40.132039106 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748274462 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.749666716 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.746674372 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.74673 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.747415622 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.750923057 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.748421035 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.746999594 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.748888474 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.748434474 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747584762 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.750551671 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.746085896 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.748246426 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.74929498 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747506671 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.749224119 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.748708352 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749682284 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.748087471 seconds)
  done (took 36.655534093 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750938322 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753197647 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.749968782 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752205898 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750985939 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.752031989 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752110674 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.753048528 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.752423276 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.751827583 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.751450054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.751781402 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753122231 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.750759407 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.752512731 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.753464405 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.751676054 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752362274 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.751881275 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753170963 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.752194533 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.753635424 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.751269243 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.752325846 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.751384606 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752492692 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752676385 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.752255881 seconds)
  done (took 50.748708065 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753627539 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.751910304 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.748097732 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.749313042 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.749929324 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.75111678 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.749317176 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.751204488 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.752942953 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.749499551 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.752982344 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.753070271 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.753673239 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.752787795 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.752697999 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.751488446 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752560519 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.750413002 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749057662 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749368514 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.754365158 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752519088 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.75285505 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.750428548 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749722825 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.75375233 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750781454 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.751084635 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75448866 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.751726347 seconds)
  done (took 54.237166889 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.770895529 seconds)
    (2/2) benchmarking "in"...
    done (took 1.77406669 seconds)
  done (took 5.236196053 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.751908468 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753249812 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.752961033 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.750989436 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.750209297 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.754515051 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.753752738 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750959527 seconds)
  done (took 15.710124623 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.75572857 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.75420454 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.756292184 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.754855002 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.754385829 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.755699612 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.763020601 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.754786722 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.758930627 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.756513114 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.762317644 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.764318852 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.760414473 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.756222386 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.757301723 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757792596 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.755770845 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.75528918 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.755922349 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.755920548 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.757645499 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.759301166 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.759371274 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.753473258 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.757828861 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.76794823 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.762254121 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.755426629 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757138941 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.762852579 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.757849829 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.753278555 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.75768046 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.756300037 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.756090926 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.757007953 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.766862098 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.758146512 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.764604245 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755531648 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.757473576 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.753512496 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.761062683 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.763818514 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759401958 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.75613742 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.757056802 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.755269936 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.758059292 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.761825259 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.760617974 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758645857 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.753367397 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.768116228 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.762289855 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.766751632 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.758852907 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.760899225 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.768341691 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.769168682 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.773126586 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.766118058 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.761452747 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.75744169 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768092808 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.784042796 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.766882798 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.756322766 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.757161642 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.757047531 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.768971099 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773738674 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.769050813 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.760449251 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759190289 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.757462571 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.761397385 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759511367 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.768008536 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.761948522 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.75898591 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76041178 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769687906 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780331496 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.76059911 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.759382397 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.759032469 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.760595194 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.761911618 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.771803996 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.76007907 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.759533897 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.760243369 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.761077173 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.765905483 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.76037532 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.760626609 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76269569 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.75594775 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.75915819 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.760339118 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763187207 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.769009641 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759363727 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760148294 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.769694875 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.759767675 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.761005151 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.770624934 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.759874273 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.761479338 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.76250018 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.771088642 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.757687466 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76430725 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.76935387 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.761757636 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.763071396 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.761132038 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.760689308 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772463031 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.786696626 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.759957765 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.762033607 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.767647442 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.772366456 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761595421 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.766921683 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.761405988 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.759603567 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.75863588 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.764529427 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.762132373 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.764950119 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.762709188 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.764973195 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.759004202 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.761067273 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.761471306 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.765798256 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.76688166 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.764748684 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.76526428 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.766202481 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.763383667 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.766085131 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.771471044 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.764537273 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.764593413 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.764195264 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.758937868 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.762649553 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.765575583 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.765109196 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.764236143 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.762809365 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.764203602 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.765556842 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763383611 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.762812629 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.763464629 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.765142678 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.769872804 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.765214436 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.771259432 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.763644917 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.760493778 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.763575846 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.763965719 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.765330213 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.762793859 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.765293107 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.767837065 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.771986853 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.763039114 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.763624151 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.768948309 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765288311 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.764736633 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.766080851 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.769836271 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.772988829 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.766285137 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.772544675 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.765541914 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765601666 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.764856949 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.767133182 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.765395393 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.764522012 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.769965296 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.773340445 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780675964 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.774626768 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.76832824 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.768838095 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.767555659 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.769628088 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.772188745 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.766961512 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.76702839 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.765362053 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767189085 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765682128 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.769803663 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.768143741 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.766192033 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.765894525 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.766270279 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.766672821 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.765632175 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.76847892 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.769864074 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.761925296 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.766090347 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767241919 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.766631668 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.763701254 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.766976607 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.767714419 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.766013296 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.767638387 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.776539366 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.76485712 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.769381149 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769229921 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.767684977 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.767084831 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.766742173 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770551328 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.768266599 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774595848 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.770139128 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.770123621 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.776139244 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.767497878 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.76830434 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.771856195 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.768061174 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.766113205 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.772098996 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.775788511 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.765568336 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.768265356 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.768023638 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770346025 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768069922 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.777041172 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.765354531 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.76964585 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.768916682 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.77251823 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.7655275 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.77060807 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.770054614 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.77006817 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.771413549 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.769438455 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.768626487 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.771896632 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.768605895 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.768124024 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.768868192 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77363781 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.776452005 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.77689269 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.770257889 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.773176888 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.771868741 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.773200571 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.770889767 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.769173977 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.769514506 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785194825 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.77757886 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.779278698 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.773462079 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.769374256 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.776287051 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.771756989 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.776888137 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772577809 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.772359432 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.771550703 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.770248066 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.765928395 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771713175 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.771441022 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.771729424 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.772901228 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.772863185 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.769530108 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.772211576 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.772783233 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.771650902 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.770638109 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.770417096 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.771341436 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.777110596 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774102528 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.773577711 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.7734623 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.780626485 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773222929 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.775372721 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.774472952 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.772384486 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.773101602 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.774513317 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.77393269 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.775667907 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.780484193 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.776593366 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.784808083 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.775993137 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784475261 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.772148585 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.77801168 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.780111455 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.768043232 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.773321928 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.774641975 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.77372912 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781370266 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.772200528 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.773945575 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.778825604 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.774937106 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.772787752 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.771578214 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.77331098 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.771708651 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.772683602 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782817278 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.773891418 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.777107643 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776376795 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.769890672 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.7738136 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.771020513 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.773799949 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.781622634 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.773896103 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.775825325 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.774256984 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.774361389 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.773641204 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.772918209 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.773213698 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.770938387 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.772866246 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783228653 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.775150553 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779253159 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.77560291 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.786598342 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.775159723 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.783788874 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.774874919 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.776108997 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.77482024 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.773690456 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.778129153 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.776122322 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.778491164 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.774876363 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.776391444 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.779346119 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.775172406 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.780382235 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.776228571 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.776854347 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.77626635 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.784541792 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797635238 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.777567512 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778766938 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.772618254 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.778798945 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.779434049 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.775447131 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.774297187 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.780196847 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.786909277 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781629908 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.776507215 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.77602078 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77775346 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776955952 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.775022295 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.775401739 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.776147117 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.775721101 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.778322397 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.776119169 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.783989192 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.77484872 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.777892308 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779471357 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.778854993 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.788143597 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.776628607 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.779469845 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776840373 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.776040089 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.777760144 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.778076814 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.77891258 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778891404 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775868157 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.779174595 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784446972 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.783971929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.781705703 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.778075096 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.777304374 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.779271562 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.780083032 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778138199 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.778380063 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77964299 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.780364378 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.778182239 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.781242893 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.776382792 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.777015895 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.77852018 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.77787342 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.781760074 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.784102141 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778341068 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.775352906 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.777874581 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.776956805 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.778932687 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.779817743 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.790078616 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783084819 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.789693349 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.787575085 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.782052082 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.780522454 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782497267 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.788104254 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.77894908 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.782964013 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.779149468 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.782573707 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.778584214 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.783377353 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778646819 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.789394244 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.78077715 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.781168408 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.789518146 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.781207968 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.779912997 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.781475034 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.784215048 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.78040745 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.776405089 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.779979789 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.778904131 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.787923138 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.783231586 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.780298204 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.78320849 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.779195038 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.782555325 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.785294025 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779396794 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.783511835 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.778017891 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.783180114 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782230214 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.779169709 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.776900136 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.78186859 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.781110329 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.784372214 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.787343975 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.776755471 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783374913 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.78227192 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.781655932 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.780807482 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780676081 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.776472415 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.778244212 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.782920634 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.780786287 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.78422395 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.783787706 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.780701615 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.781744494 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.782291462 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.781859997 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785575133 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.791442058 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.787975728 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.778885453 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.781925663 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.784175717 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.786133397 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781631659 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.784120694 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783968519 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.785694717 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.780431376 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782791921 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.781142102 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.785808849 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.799250486 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.780151009 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.78404298 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.78505164 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789253295 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.78215109 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.778888229 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.781886676 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.786344714 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.787184856 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.78931707 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.784336614 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.789977452 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784027356 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.78446337 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.786746896 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.788057517 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.792292446 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.786984765 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78429997 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.782762841 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.789265546 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.800163377 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.782210142 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794597341 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813461323 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.784943018 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.786592762 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.783652051 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.783434599 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.783752204 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.787154108 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.78381607 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.783444868 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782317717 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.784553262 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.786505854 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789814387 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.786183909 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.782906149 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.782713045 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.784912609 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.78845394 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.781775788 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.785007675 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.783159236 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.784711875 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.78649241 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.786334954 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.786800166 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801231722 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.796776125 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.783546594 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.784734242 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.780986561 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.791979886 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.788659086 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795647189 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.790495796 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.784839397 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.785606655 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.788494922 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.784579942 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.781930512 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.786881461 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.787019985 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785747782 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.783395347 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.801318289 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794585591 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.792894464 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.787530536 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78674081 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.784962965 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789029304 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.785752752 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786908309 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.790881911 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.788440677 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790929805 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.784436735 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.785600131 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.790148122 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.79340115 seconds)
  done (took 1058.685111234 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784191191 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782918168 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783237423 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783570565 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783537407 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783076277 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783392424 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782607533 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782596918 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.782931071 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.784358168 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783283693 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.783229629 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783518102 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783327359 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.785417055 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782956026 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.783473784 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78398352 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783649742 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783762028 seconds)
  done (took 39.175467328 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.786120679 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.784030072 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.783736747 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.786614107 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784493313 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786733114 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.783770732 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786153919 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.786701208 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785334927 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.786924917 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786150448 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.783602175 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.783819808 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785083841 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787688717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.788526947 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785010409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.787327046 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.783876478 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788075399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.78588108 seconds)
  done (took 41.009590182 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.78862634 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.787921465 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.788294076 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.784668325 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.788061734 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.785483034 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.789396793 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.787627337 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.787629857 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.792373625 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.791480563 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.791164521 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.79791234 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.793019657 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.794470074 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.790379925 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.931965795 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.789153513 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.788755528 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.791999796 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.785122164 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.797183087 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.786388682 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.785663971 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.790219444 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.789294609 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.788695201 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.788741985 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.790503275 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.7912317 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.793827934 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.790175308 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.791610906 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.791432238 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.790636311 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.791836879 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.793473834 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.790905719 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.786236755 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.790126892 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.80075855 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.807691881 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.791155387 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.800783852 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.789506265 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.789101239 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.794717101 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.797644945 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.787545003 seconds)
  done (took 89.628516935 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.789190415 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.791412558 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.787132413 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.790013688 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.791318879 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.791563462 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.790420443 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.789995543 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.787298187 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.788179641 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.791058367 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.788453516 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.787240375 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.790784846 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.791726129 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.78781157 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.788184573 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.788878975 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.789767467 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.788332312 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.788734611 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.790300317 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.792131345 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.788658478 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.791074432 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.788597801 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.788734771 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.792081024 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.789085222 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.789854028 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.791097553 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.791647904 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.792149325 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.79053047 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.790487685 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.790768777 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.792165521 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.789519495 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.791766366 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.788869582 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.792032168 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.792598312 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.792393597 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.792458354 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.789096201 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.789619156 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.790057432 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.789598755 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.790752329 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.792597103 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.79321401 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.790621819 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.793881997 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.790372229 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.792867784 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.792738126 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.790013323 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.791598217 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.794419176 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.792111404 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.792163525 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.793707291 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.790806023 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.792795742 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.793720943 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.791419792 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.792171539 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.794203878 seconds)
  done (took 123.500270804 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79464931 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.794305931 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79521414 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795184434 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.795764799 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.795191467 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.794673157 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.795888974 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.79515574 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.795048141 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795684488 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794393758 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.796635766 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.794818125 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.795986337 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795978556 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.795744265 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.795823411 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796343631 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796328895 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.796540217 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.797103646 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.796302514 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.796818429 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796231476 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.796822175 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796210703 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.797652518 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796541611 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.797204896 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.796781074 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.796779138 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.797673345 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.79799538 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.797049585 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.796333703 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.798499228 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796856829 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.79706895 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.796290159 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.797518471 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797821133 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796525215 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.796557671 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796894772 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.797310822 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.797539294 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.798098735 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.796672914 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.797254322 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.797042228 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.79765807 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797751216 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.797344457 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798042115 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.797393099 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798815269 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79924183 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799058216 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.798657535 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798191138 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.797671842 seconds)
  done (took 113.130844906 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796725827 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795902771 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.794924794 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.795165507 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.79722774 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.793728585 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.796889229 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.797203059 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798245862 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.797943117 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797704061 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795853146 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795107397 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7983157 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.795672081 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79593553 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795695208 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796047889 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799435039 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796408646 seconds)
  done (took 37.664734255 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.798006102 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.798731194 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.794799212 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796094495 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.798806877 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.795828416 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.798449434 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79986942 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794872235 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798619959 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800031858 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.798902027 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797698982 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797657733 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.799142025 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.796155254 seconds)
  done (took 30.498957672 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.797929888 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.799470188 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.800886114 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.802293855 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.7972051 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.79699476 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.800307139 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.796518907 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.797376345 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.800950595 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.801448992 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.801632679 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.798969803 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.801358126 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.798221919 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.801281635 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.798151297 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.79962094 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.801187905 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.801443375 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.79819751 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.798259367 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.801802327 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.800328125 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.798710281 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.798294164 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.798128462 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.799197571 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.798119341 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.80101842 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.798453916 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.798458948 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.797620598 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.798641306 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.802497713 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.799414473 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.801795706 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.801847141 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.801387342 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.801479517 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.802114699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.798597447 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.802646704 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.80087483 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.800147533 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.801447662 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.799436355 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.798508043 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.799804643 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.799911018 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.803919249 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.803003201 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.801683519 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.803064715 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.802721731 seconds)
  done (took 100.742326994 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803220844 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.801864289 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.800308836 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.803847246 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.803224308 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.799470992 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.802128604 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.799734246 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799167581 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.802914293 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.801431855 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.802645477 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800799438 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.802525316 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.801777891 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.802656322 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.800555154 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801229466 seconds)
  done (took 34.169176586 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.800804712 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.800730556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.803345242 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.799930139 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.800280424 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.80391543 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800610583 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.803092303 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802912086 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.801339258 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802673866 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.804030128 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803909263 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.804054238 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801249109 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801765812 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.8031937 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803054648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.800931092 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800664857 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.804913888 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804656268 seconds)
  done (took 41.392096207 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.803906746 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.804058739 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.822704524 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.848222659 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.83521055 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.804560628 seconds)
  done (took 12.658957822 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803639147 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805055573 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802675981 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805626009 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805808762 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801543518 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803243074 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802884093 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806880061 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80311031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802845622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806220276 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80677212 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803584111 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805323727 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806778294 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803106604 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803261992 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805605965 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807080061 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80297828 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806829511 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803497495 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80356386 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803458573 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804245177 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805945163 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804002338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803675731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806986272 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806299404 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803819033 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80785542 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804205816 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808666404 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807283738 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805023999 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8075876 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806425771 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805374004 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.806999584 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807008075 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807028589 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804475914 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806799094 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804260486 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804837593 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804637151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806152439 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807592433 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806818071 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804242786 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807113941 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807452878 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806894759 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808452523 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806039599 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804721411 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807139758 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806454793 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805667004 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808124096 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805433862 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805867319 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808108166 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807172714 seconds)
  done (took 120.907233894 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806897606 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805975215 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806258528 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807912804 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806032523 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806766995 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80616786 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807362669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805785193 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806444317 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809520826 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80688846 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806121274 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807894614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806877021 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805665989 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805969146 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806268898 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807018135 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810139422 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80674706 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808203293 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806461991 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807060539 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808040393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809188556 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807352615 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806526655 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807269805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807624803 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806448255 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807685054 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808132857 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.806920611 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807151502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806840038 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807434719 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806557283 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807934201 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810457262 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807771382 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810246721 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80693475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80785708 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808584222 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809141088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808959635 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807185349 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808314516 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808199925 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809235752 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810114843 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808805156 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808426909 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809161229 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808178141 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809395844 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809527797 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808235506 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812108834 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809467143 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809141738 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813863456 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810089733 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81027588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809188506 seconds)
  done (took 121.073870151 seconds)
done (took 2466.490946455 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.883847165 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.819378838 seconds)
  done (took 15.451114979 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.979621021 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.932116779 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.816142403 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.852925237 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.816792304 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.830621401 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.829317393 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.817482658 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.817280958 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.818360451 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.818778772 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.003340051 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.832696366 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.817025311 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.817451197 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.91028481 seconds)
  done (took 51.469053293 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.820461379 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.822165129 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.831993325 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.822729038 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.821144538 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.834144975 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.853865911 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.825739644 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.856343157 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.845054257 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.897493564 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.832422626 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.820359489 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.872501968 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.833421463 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.836765881 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.921837822 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.900036592 seconds)
  done (took 35.004793568 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.900244916 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.827104711 seconds)
  done (took 10.49011905 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.825411686 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.829558657 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.830797207 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.817545583 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.809470664 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.846671814 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.820962135 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.832433099 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.838665665 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.82787235 seconds)
  done (took 70.037343221 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.823055265 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.81821077 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.817718273 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.816134663 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.80955602 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.814014096 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.817133045 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.814279245 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.503018171 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.853329846 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.823885038 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.822239838 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.816329001 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.818128159 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.814056285 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.838562042 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.93264609 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.814850825 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.814465895 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.821914032 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.817152877 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.9097455 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.829986162 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.81777257 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.846490562 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.504192822 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.826171659 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.82410094 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.954529819 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.815288223 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.817819692 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.817507401 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.819030909 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.208913693 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.08820115 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.817431107 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.828892495 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.825639329 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.814796174 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.990624978 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.818632849 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.823881732 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.80611344 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.06746839 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.901236731 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.861549013 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.185987498 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.822421397 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.819956642 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.850245205 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.820593157 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.819385658 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.831718244 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.329545064 seconds)
  done (took 129.894495176 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.812861549 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.389645709 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977275539 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.814041973 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094826485 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057364791 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.814846999 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863127334 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.815765448 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.065518605 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.991970547 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.934889134 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.814420985 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.81492257 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.817891127 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.811727204 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.967445205 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.88656302 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.81670401 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.812665056 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850297204 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081095122 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.943074778 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.815221456 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.83789838 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.044471732 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.942706361 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.933356841 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.300810398 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.813110607 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884469432 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.816426715 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.814222118 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.813648178 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.981346608 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.92440025 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913606058 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.817600699 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.813869332 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.813393567 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.477158176 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040169951 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.928570646 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.95576057 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.065891024 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045898609 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.464873408 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.814471068 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.451758447 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.013245128 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.026012438 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.073992587 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.945498633 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.818649693 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.061471504 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.814406047 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.814793369 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.080311988 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045836155 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931196345 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.818467938 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.815730938 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.815337429 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.132868798 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.819699789 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.927339006 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.817580018 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.815719115 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.929801389 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.934708371 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.050426421 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061973158 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.84906118 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.715790921 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.327292852 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.10179327 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.890670478 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081786242 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.818060182 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.816744864 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913276823 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.572594495 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.992213022 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.134447166 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.084078852 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860952937 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.422073253 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.81685423 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.065718356 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.069099153 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.048596188 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063898974 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.985539541 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.139950593 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.817374446 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.817596432 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.017253643 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.951369819 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.820848426 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.179636813 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06738441 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.547646955 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.849350116 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124711823 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959130815 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.821596345 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.444981806 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.819250255 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.020184475 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.86243785 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.819503773 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818123098 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.071203676 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.689677349 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819636709 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.618345474 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.886098409 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.823778539 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084958726 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.82213947 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062064269 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822798321 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.130648931 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.300918669 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863337667 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.012905252 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.063604833 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.612195615 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088219254 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.134121618 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.94571604 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080665245 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.649485805 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.821164692 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105389011 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.821475339 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.820732846 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.989629915 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.821634593 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.97585701 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.82258637 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.081227783 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847159548 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991781554 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823036582 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.094917903 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.867727895 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87514279 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.823675291 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.939945237 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823128325 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.874759031 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006189903 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.825590294 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.821072289 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.422674447 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.821713517 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970120315 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.120975769 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848266187 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894137835 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.347699026 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.820894791 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91657505 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.850220406 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.423107565 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.823052481 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.992961826 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.824791192 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.819067774 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.823167678 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.133615942 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.04693233 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.825882273 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.820635849 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.618638227 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.52428187 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.82333439 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.999546286 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.057733177 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.467318609 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043540536 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.826334005 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.956547866 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.824854292 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.905505944 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.176403339 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.822915962 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.823842274 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.822036075 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.822204243 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.822043388 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051583505 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.854275024 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.509232663 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.961064011 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068850388 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.137009631 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.087844351 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.873168302 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824368184 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.091179889 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.825302023 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.891433952 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.825443579 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.848896266 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073302916 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.826430675 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.055335267 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111406404 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.906206537 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.876671056 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.826767706 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823045608 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.823744687 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.969398518 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927450832 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.827296537 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.825109786 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.943953351 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.953768197 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.015009252 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.422141591 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.999978492 seconds)
  done (took 893.031444525 seconds)
done (took 1207.12459102 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.824576004 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.824791488 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.814098068 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.828059018 seconds)
  done (took 29.05835485 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.833946831 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.831141274 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.83255267 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.831879065 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.833673122 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.831161592 seconds)
  done (took 12.760877013 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.899236408 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.824509584 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.827421215 seconds)
  done (took 21.317746543 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.900260626 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.24090793 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.937083877 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.275518123 seconds)
  done (took 10.120465632 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.834514333 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.832623573 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.833178122 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.834547733 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.835175364 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.836957863 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.834301244 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.835652887 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.835975716 seconds)
  done (took 18.28069674 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.034882569 seconds)
done (took 97.336933905 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.837295058 seconds)
    (2/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.173107262 seconds)
    (3/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.23344069 seconds)
    (4/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.81353918 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.885298459 seconds)
    (6/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.853825012 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.024400236 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.962326197 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.829259308 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.534263212 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.873734282 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.928003263 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.851378823 seconds)
    (14/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.910816937 seconds)
    (15/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.852466425 seconds)
    (16/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.199199598 seconds)
    (17/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.32238514 seconds)
    (18/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.85483199 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.830077782 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.200427619 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.477337503 seconds)
    (22/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.025696419 seconds)
    (23/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.931272268 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.890584044 seconds)
    (25/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.32814485 seconds)
    (26/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.832161375 seconds)
    (27/309) benchmarking ("sort", Float32, false)...
    done (took 5.621515909 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.794315137 seconds)
    (29/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.29490561 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.06549626 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.082513022 seconds)
    (32/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.830207765 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.934435926 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.100202346 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.160159897 seconds)
    (36/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.934716251 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.929168309 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.626341175 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.337234917 seconds)
    (40/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.954013321 seconds)
    (41/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.826012006 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.924323929 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.849589097 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.83021004 seconds)
    (45/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.049863774 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.874141632 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.935918843 seconds)
    (48/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.901978786 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.20008401 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.202060126 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.94106635 seconds)
    (52/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.16968313 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.422457763 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.09031586 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.814202453 seconds)
    (56/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.663211675 seconds)
    (57/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.960261957 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.830273457 seconds)
    (59/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.949488647 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.813350254 seconds)
    (61/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.54701123 seconds)
    (62/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.173377965 seconds)
    (63/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.497482337 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.85686401 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.886064832 seconds)
    (66/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.714557751 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.105208551 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.849678619 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.214894821 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.218427452 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.918921447 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.845154595 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.936281614 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.83006615 seconds)
    (75/309) benchmarking ("sort", BigInt, false)...
    done (took 6.836839806 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.137231186 seconds)
    (77/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.208280031 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.908091504 seconds)
    (79/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.984407987 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.519850765 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.842160121 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.816383991 seconds)
    (83/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.049583326 seconds)
    (84/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.82077442 seconds)
    (85/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.570646293 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.823389464 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.693507733 seconds)
    (88/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.056806801 seconds)
    (89/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.317130979 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 5.722126603 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.017789118 seconds)
    (92/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.00104871 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.937433053 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.856480177 seconds)
    (95/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.751276129 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.943785392 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 5.525546455 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.361249194 seconds)
    (99/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.987974904 seconds)
    (100/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.835257794 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.750683765 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.445312899 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.859475709 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.840858582 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.848079284 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.216132785 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.758883832 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.201780116 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.999125782 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.821426977 seconds)
    (111/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.113635335 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.047376333 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.120133041 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.636320234 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.918147664 seconds)
    (116/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.93022336 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.007849994 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.899111726 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.722503858 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.036410382 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.833808495 seconds)
    (122/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.909511863 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.820641182 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.846477419 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.942438425 seconds)
    (126/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.027783915 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.838297013 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.117371974 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.479009351 seconds)
    (130/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.341421563 seconds)
    (131/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.431921867 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.283585251 seconds)
    (133/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.846182083 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.855679556 seconds)
    (135/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.135590249 seconds)
    (136/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.070623172 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.929467289 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.114988537 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.906138862 seconds)
    (140/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.858465646 seconds)
    (141/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.033717778 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.130572032 seconds)
    (143/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.944433795 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.074147991 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.055032709 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.116168821 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.649045628 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.134944743 seconds)
    (149/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.780343127 seconds)
    (150/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.42898417 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.083832509 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.084468657 seconds)
    (153/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.845525517 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.93708907 seconds)
    (155/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.820860722 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.741285833 seconds)
    (157/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.848051197 seconds)
    (158/309) benchmarking ("sort", Int8, false)...
    done (took 4.804451817 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.982778127 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.142802011 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.934800597 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.863899728 seconds)
    (163/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.837209507 seconds)
    (164/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.898421349 seconds)
    (165/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.038987503 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.113020064 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.023763838 seconds)
    (168/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.026482203 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.862471451 seconds)
    (170/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.860254316 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.479835911 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.843116055 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.977092429 seconds)
    (174/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.40577016 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.030244641 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.002631147 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.161157605 seconds)
    (178/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.919660706 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.894935194 seconds)
    (180/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.977238523 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.139889698 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.887374697 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.141451351 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.991626664 seconds)
    (185/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.928051789 seconds)
    (186/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.119582996 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.823731322 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.769832204 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.23025577 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.866067111 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.994184782 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.929890069 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.895307888 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.837900865 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.903282798 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.130188109 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.902987569 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.840120796 seconds)
    (199/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.242761981 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.166719932 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.128712718 seconds)
    (202/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.920533165 seconds)
    (203/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.01299308 seconds)
    (204/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.950232874 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.193393708 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.119487399 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.896202229 seconds)
    (208/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.354871135 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.148115768 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.144336101 seconds)
    (211/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.882778222 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.947495118 seconds)
    (213/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.048615244 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.35855157 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.83347429 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.978418921 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.83905479 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.175332907 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.21551577 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.960973585 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.726478809 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.520870964 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.375209138 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.046146072 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.8402029 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.864352612 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.805308773 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.857033434 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.052726916 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.80031705 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.927070287 seconds)
    (232/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.921870493 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.137209835 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.866819973 seconds)
    (235/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.032780469 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.727361232 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.869763137 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.878442163 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.864518579 seconds)
    (240/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.969626411 seconds)
    (241/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.442288002 seconds)
    (242/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.850595519 seconds)
    (243/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.839130963 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.000298757 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.981938509 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.731923346 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.844669131 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.708732644 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.068327198 seconds)
    (250/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.849587837 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.907096005 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.230420439 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.843137078 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.065336737 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.952666034 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.944894155 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.825003074 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.322593334 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.214992402 seconds)
    (260/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.87400999 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.825041626 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.001068023 seconds)
    (263/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.865897254 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.937335103 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.87302478 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.229159566 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.922071678 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.825894243 seconds)
    (269/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.851044418 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.886146733 seconds)
    (271/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.188932946 seconds)
    (272/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.991543787 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.089509984 seconds)
    (274/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.925897248 seconds)
    (275/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.87195171 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.971242605 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.195487818 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.893928767 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.188969198 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.927359481 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.841175344 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.924547534 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.072949811 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.403846497 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.85614462 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.964719081 seconds)
    (287/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.666924436 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.358420596 seconds)
    (289/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.914785056 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.002137044 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.058577969 seconds)
    (292/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.929515351 seconds)
    (293/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.926683623 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.883179231 seconds)
    (295/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.82784393 seconds)
    (296/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.101189476 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.861180175 seconds)
    (298/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.457744027 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.830534882 seconds)
    (300/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.432193605 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.149211581 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.869664114 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.86775701 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.838602045 seconds)
    (305/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.149391097 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.502614203 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.225476061 seconds)
    (308/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.018753327 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.188452266 seconds)
  done (took 1010.856306771 seconds)
done (took 1012.638380565 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.878648629 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872560977 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.854200344 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.877166876 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.966006547 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.882482411 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.865660499 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.857717873 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.904278233 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.903808497 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.853438897 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.882491554 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.855935537 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.855924737 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.854010989 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869697617 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.163314322 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.883898052 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.872735687 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.865870595 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.872907852 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.854885432 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.905360229 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.883888896 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.859698509 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.860514934 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.857932957 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.874995936 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.967749873 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.858924081 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.860790618 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.868176038 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.163579118 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.882622656 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.851236095 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.876121235 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.869134334 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.866103956 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.861634429 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.890606145 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.301796682 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.86439312 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.858625272 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.857592211 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.857775351 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.86197515 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.85899097 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.865170588 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.86949027 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87130362 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.300548142 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.880925065 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.861683885 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.860108526 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.868331458 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.857634613 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.860929976 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874228916 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.878340187 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874145619 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.15542787 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.888999984 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.860372744 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.874553296 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.865928421 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.33676452 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.860740417 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.860817835 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.306898096 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.87075584 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.339283348 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.872794069 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.860345032 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.873380449 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.890775977 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.165243849 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.880677094 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.85776554 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.866355067 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.857033223 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.87003968 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870864447 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.865457446 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.860513529 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.872907282 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.886723014 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.868889039 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.860511402 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.869477409 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.879410586 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.866868117 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.872591607 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.863244298 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.85584722 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.869611929 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.864965448 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.86272154 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.862921382 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.86606674 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.870462917 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.302031843 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.883037873 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.857312486 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.857020252 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.859824323 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.873917356 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.306337838 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.86825175 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.883110971 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.908531237 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.862496895 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.155587165 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.890626704 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.876722772 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.872095351 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.863075668 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.856580439 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.156319164 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.330004048 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.882908735 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.86378274 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.859999395 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877383135 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.863991528 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.858735661 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.167887527 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.889963424 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.875047566 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.982565854 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.872735351 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.89340632 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.861044228 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.865221305 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.890268843 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878117293 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.89446619 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.86565381 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878491491 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.878374562 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.858905879 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.874626022 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.873286396 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.865690831 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.870014501 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.858077993 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.891551996 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.876160387 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875943609 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.884614905 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.985134242 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.860500953 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.159779046 seconds)
done (took 292.384663247 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.930610204 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.85698716 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.961891042 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.857604169 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.945335616 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.948002938 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.855971799 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.856361043 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.857278058 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.242150191 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.856582681 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.856975923 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.852146028 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.857037665 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.945280821 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.858457384 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.857118534 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.203970765 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.8605624 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.938020859 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.859901682 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.85751884 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.86008805 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.24646195 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.852200632 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.859429458 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.93760095 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.860171809 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.210172282 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.856817437 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.854176506 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.210978575 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.953383824 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.878750328 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.870208168 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.867182696 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.94760479 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.864989684 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.944030108 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.943386196 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.964056109 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.901687248 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.856300071 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.853871227 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.864413982 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.862110668 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.859166241 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.888125826 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.857969783 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.859826292 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.205703556 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.871086872 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.859586944 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.861237028 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.86020727 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.893528705 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.858739289 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.862451995 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.95215363 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.862939838 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.926019087 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.248429878 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.242814464 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.861397075 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.858385034 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.860562263 seconds)
  done (took 183.780947562 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.927350422 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.937137155 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.930889877 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.866547958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.913855288 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.935305954 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.866737729 seconds)
  done (took 15.173987382 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.870704191 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.862590606 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.912948496 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.920739742 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.864438658 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.013372521 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.862709437 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.875192969 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.860614889 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.91626952 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.864462772 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.863991951 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.870811924 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.862248836 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.912596406 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.87565507 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.978849521 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.865312738 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.865884692 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.020611226 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.861640008 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.869972899 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.918280538 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.876036647 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.864559033 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.870217752 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.449472268 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.864909766 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.862154586 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.86397341 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.860663171 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.906040195 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.864131233 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.865341095 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864087518 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.981455616 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.8659527 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.862538906 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.865869052 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.86616485 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.864811893 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.865219186 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.865973806 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.863606802 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.864867774 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.890239837 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.866063796 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.865747827 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.866655252 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.865375189 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.916613641 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.86608043 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.863267446 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.863447734 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.922676302 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.872645021 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.866913011 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.863138431 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.866277315 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.862903144 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.02408044 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.913469725 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.86540052 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.914579298 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.865556902 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.86618758 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.865408278 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.865589439 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.921629746 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.865863109 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.915048768 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.863784626 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.024233403 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.890968082 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.868110598 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.870641258 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.871197924 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.867242971 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.86466295 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.87280259 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.864000675 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.868396003 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.872892309 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.864658495 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.864378351 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.974265751 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.977829047 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.864534015 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.87962276 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.874150159 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.864700292 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.921348003 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.867936894 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.863875836 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.919595234 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.982669069 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.923830476 seconds)
  done (took 205.411233993 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.314824741 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.875643614 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.870368939 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.885916156 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.866592243 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.866184003 seconds)
  done (took 13.479899788 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.870449372 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.867632871 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.864785357 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.865972895 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.86641363 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.866184642 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.867902426 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.86846224 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.871599437 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.866014671 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.86755714 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.868826008 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.86774687 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.866703035 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.866916577 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.866750278 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.86876911 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.863731281 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.866478561 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867067285 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.011015374 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.866586188 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.86678065 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.869482648 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.872054091 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.866603838 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.874781389 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.86759831 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.865470405 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.873711239 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.871836713 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.869081007 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.868953392 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.873683437 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.873255568 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.869044407 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871806464 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.868723896 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.86512346 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.869232265 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.8698841 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.8689994 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.868860263 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.869365848 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.870034374 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.873522302 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.873778652 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.876700544 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.869771082 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.87010595 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.87229421 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.869363819 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.869809967 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.8703291 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.873905036 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.874720069 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.875853124 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.868045957 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.869586517 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.871132402 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.87025012 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.86983411 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.87199099 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.874491066 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.875946914 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.870543111 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.87230177 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.874136851 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.870595269 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.869475662 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.870556761 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.865933877 seconds)
  done (took 137.565525024 seconds)
done (took 557.217894382 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.097946902 seconds)
  done (took 8.900891577 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.055231908 seconds)
  done (took 8.943119476 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.44171167 seconds)
  done (took 10.247857712 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.873745156 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.880517854 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.876792392 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.871334567 seconds)
  done (took 29.318721015 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.892984179 seconds)
  done (took 8.698246134 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.880322601 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.864630651 seconds)
  done (took 15.584365544 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.053081081 seconds)
  done (took 8.858243954 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.9324387 seconds)
  done (took 8.737350115 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.878593756 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.885504463 seconds)
  done (took 15.577161065 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.846154746 seconds)
  done (took 8.645527963 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.559071021 seconds)
  done (took 11.373092851 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.871701423 seconds)
  done (took 8.691654034 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.926586186 seconds)
  done (took 8.730698608 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.0025918 seconds)
  done (took 9.805540875 seconds)
done (took 163.913123448 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.866956411 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.864836462 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.864469412 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.865100283 seconds)
  done (took 29.264983587 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.906913678 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.904270198 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.905760926 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.913510605 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.907528093 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.909164339 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.895947228 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.89629793 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.914508439 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.908021454 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.905226585 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.905133685 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.90263734 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.896670085 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.905589252 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.905681754 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.919904133 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.904618463 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.896723373 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.907652984 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.872438451 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.915653213 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.906806436 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.871198526 seconds)
  done (took 47.481190828 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.068451948 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.947335012 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.023348865 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.923138544 seconds)
  done (took 9.766414353 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.922353109 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.928050484 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.936261121 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.975449533 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.000335954 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.93383453 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.89792689 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.892157483 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.879385001 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.92497609 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.999751979 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.93946713 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.014559019 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.87029079 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.069851487 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.871546295 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.870278115 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.925092556 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.972231715 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.990215168 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.870733068 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.922801602 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.926224854 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.939492805 seconds)
  done (took 48.279315675 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.870224164 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.878073185 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.878322402 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.868667286 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.869413168 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.868967239 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.875271195 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.870432664 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.894211386 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.869506103 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.866420217 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.868016802 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.866653963 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.868289831 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.867872703 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.880319957 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.881478956 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.868028237 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.871519266 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.874536117 seconds)
  done (took 39.260206116 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.863711908 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.716597329 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.214265228 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.118650388 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.863848632 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.86477029 seconds)
  done (took 31.444973883 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.88203684 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.933813853 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.883941186 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.927762152 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.007715086 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.87870933 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.870525318 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.943536942 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.982555529 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.94629598 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.888902914 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.897346078 seconds)
  done (took 24.847192968 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.878361339 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.862426769 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.863736655 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.87862962 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.879679936 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.875321054 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.876075513 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.863173642 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.881188769 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.888497876 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.876362941 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.88144329 seconds)
  done (took 44.314212077 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951779537 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.961899064 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.871385674 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550099589 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245385668 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076617279 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.532940789 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.202405438 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.870183879 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138177676 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.844247333 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972571518 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125804463 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383180213 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903106918 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.337153055 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162263923 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0758004 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895772595 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.529555603 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931629724 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.069074474 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.595910926 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924539841 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081681294 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.002895245 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.130278137 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870036104 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00177321 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905610191 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880655045 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.870236543 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144024386 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246803674 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976755224 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881379831 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.488704497 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.585203572 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.978527261 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.532656864 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.559785472 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.988629953 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881869213 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870178209 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805316301 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037722564 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245787862 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.877129504 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.583107405 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.872462062 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883785683 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964765929 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.874474241 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.692545845 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785378477 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.873684288 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.870188975 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877810571 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.441864945 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938472812 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.07964642 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.846922985 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.964670161 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.531943196 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252976195 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.017646302 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.875009371 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87703245 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806914539 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.607603926 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92634989 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220704237 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.893269526 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521952244 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163797962 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.933796908 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816206658 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137539159 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.430331752 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.847203134 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101430086 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873182223 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811715026 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.821250844 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808350664 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132844192 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908576086 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.632928949 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915425794 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.206964524 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.883945535 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893884439 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897077719 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097614109 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.760303452 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874759986 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.648412832 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020748688 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900123661 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201999951 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809346043 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.878448053 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133021769 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.083629905 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.97015179 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.384104604 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025753934 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458522242 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.924794162 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.038714562 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.919875445 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.134514094 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928114937 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.953944298 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926843026 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.874825862 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167230309 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.48081164 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.010365791 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.933188673 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006774368 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.206974586 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901328819 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961317313 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87565831 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876912826 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.634860691 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.429586841 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.873314575 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.87707932 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973634253 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921722476 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.875844995 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819538318 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.500100457 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.931693066 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.890732644 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097686054 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.462456268 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186600544 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807710491 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223049112 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.96216449 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.096153799 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.519202529 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.943387494 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134245634 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.966709634 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.004082767 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920649049 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889832833 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970516432 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893375065 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.040449666 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165949312 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.874741073 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.875395111 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.630178654 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911436203 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885417159 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.880657435 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624495922 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143587088 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898382085 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.882207729 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.764520666 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.88912054 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940496115 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880046656 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885864316 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.416043194 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.594889338 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.883357259 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.465405694 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10104318 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88655464 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.588322587 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991691487 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.958443008 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144241441 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933450423 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.814122066 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.588076012 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.569039184 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87653686 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811480614 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.876069152 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885255052 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887115679 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.073351227 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.148346303 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919164077 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.556258379 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.920360389 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888152328 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.882528214 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878314312 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388535558 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983472032 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.089835501 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926891423 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021355405 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.89123552 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.811285148 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.880909737 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88266662 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878115567 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.878404043 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911526423 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.568009032 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252676819 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139838877 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.487795226 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893878863 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.586210105 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.936823541 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.879968234 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.686551762 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06530961 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.921503385 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897043314 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.889901737 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.630608322 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.586813386 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.445989859 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185401425 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179253338 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302740519 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.107923921 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910013048 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.21534576 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813487097 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.437659206 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939493457 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221178095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824098523 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96482306 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.522831058 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219389804 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892740045 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107083594 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254561883 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.59926332 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02524661 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090762677 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915078013 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.047517962 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843257666 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.179928444 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021526997 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.556262042 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085312203 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21818714 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.55807802 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.003007321 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.880186926 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562514067 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968113931 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.592750951 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.053342761 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.091186613 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.819492815 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34793676 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890406167 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.10664888 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226784689 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.072529319 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.005344928 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817824198 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.892315585 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.891932693 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.883838967 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.879886991 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.768820949 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.134951727 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892833613 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816380784 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.014018476 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171340139 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.783728861 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.887693097 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882464007 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172699375 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.439574526 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052180942 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.003905925 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406009053 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890126796 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817287542 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817636731 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.575707719 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.891104985 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.85861 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088789148 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.986084949 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831742001 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.987557642 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96506753 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138710154 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.897149876 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.150071232 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157440965 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.584673753 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909378865 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.98379898 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.53151658 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.991597995 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.883528625 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119529366 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.635392599 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112392373 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.919953893 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.844613045 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.884155564 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101174788 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.884802314 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.791031674 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116264951 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.607239313 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.902015275 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190429416 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957619583 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.821866177 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.929860852 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.977171176 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895365392 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964080171 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894854734 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.896040668 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896486744 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932680062 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.837801453 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.009182931 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.898825019 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984548624 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001179745 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.411395415 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.891706959 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154378471 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237758516 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204376514 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9435951 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885824842 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892687461 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818993312 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029556459 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.106422028 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151556887 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.009189577 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.993742117 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906585321 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.557006466 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121786568 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130183199 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158133799 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.777946953 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410283643 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.922715132 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.878544413 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888853412 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.089070129 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086378688 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178477673 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026492588 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.982003894 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.233964924 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148415362 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.87745856 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873067319 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460002364 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.945553111 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.565230872 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.932149588 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.796336964 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164735378 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897658342 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267214056 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.91021672 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.045881048 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.660227047 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576231758 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177319419 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.87450693 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.948614305 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156592872 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269476558 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201792455 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955058555 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898802642 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.999765452 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035396385 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.774436377 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.888067695 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887503762 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93495783 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.596820299 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.897047088 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160074531 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198061039 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.88499337 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.772082868 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910935192 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.896890318 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111553574 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155101415 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144077673 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897841885 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.894697367 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.703164628 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158399284 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947013577 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822148004 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.892350457 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987858764 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135135549 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906968058 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.340958059 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.596569862 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155766486 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.889104732 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907951149 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.059667399 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244815897 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208604456 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.42185242 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092503938 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.47250135 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.477959935 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184603685 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.889375371 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.058744201 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184524422 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.882877669 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.991290955 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91786204 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.142209895 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191154629 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.007844319 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596547679 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.863188647 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.232858999 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.453918183 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830434642 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901449054 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.951962107 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.892662282 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.020101271 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902910563 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.778162334 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.073510006 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.676086862 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168104856 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.896987556 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.885077718 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.657183317 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.203505119 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923543518 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044766449 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898300271 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.561627314 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.23807217 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144776115 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.001499825 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.897649215 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.890313789 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887013503 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875080433 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.084022939 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.082210236 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160070256 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.018746971 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.923139717 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884480141 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.097190134 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093352203 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.867737208 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026110066 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986123175 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925282096 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.793047245 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.383208821 seconds)
  done (took 1679.280556853 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903771124 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.922355937 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.885999432 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.884985903 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.886503439 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945574679 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.903519807 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.880809326 seconds)
  done (took 57.035668339 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.880659209 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.10554463 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.891507627 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.882124627 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.890889743 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.882425892 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.054641197 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.892774354 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.890925308 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.892339118 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.883651712 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.881834397 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.207169242 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.907223363 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.899833379 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.867851314 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.89204152 seconds)
  done (took 74.630171786 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.882044895 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.093515169 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.940314398 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.902658756 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.867291487 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.885381413 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.670070582 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.896208704 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.887274859 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.998751043 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.519755994 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.895250673 seconds)
  done (took 87.262862477 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.892490115 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.889912339 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.889510865 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.891375064 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.890221931 seconds)
  done (took 11.278423854 seconds)
done (took 2185.972878587 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.306004131 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.111599383 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.116202773 seconds)
  done (took 6.051319057 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.03223547 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.080794956 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.202482272 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.205783483 seconds)
  done (took 10.347341293 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.170931277 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.26854891 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.091932997 seconds)
  done (took 8.353398452 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.286039668 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.895724476 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.998903921 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.884338342 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.883113478 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.885216498 seconds)
  done (took 22.476280448 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.887050642 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.8904296 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.887841613 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.889699089 seconds)
  done (took 9.376616703 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.868149337 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.62270196 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.870808758 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.883649402 seconds)
  done (took 21.06822553 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.635890328 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.646345551 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.630789879 seconds)
  done (took 9.736756577 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.614750907 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.821738302 seconds)
  done (took 9.26022401 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.144019855 seconds)
  done (took 3.967444858 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.019763635 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.150519976 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.360672722 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.404588277 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.459453242 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.778289908 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.201517647 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.135107672 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.290190646 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.336662534 seconds)
  done (took 24.960176452 seconds)
done (took 140.90626768 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.258149807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.1264633 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.085939994 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.218347276 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.108211632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.084530988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.097549141 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.200078378 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.720773955 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.720231089 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.213568968 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.097574618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.045493407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.11474235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.045753071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.110396377 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.135420957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.261779169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.909655781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.1083836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.097175884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.849368102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.05569454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.866922931 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.155949955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.029402116 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.42604352 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.11295881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.06339079 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.436555926 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.031244816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.258907048 seconds)
  done (took 172.872182441 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.633826283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.879036053 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.879024818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.8797787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.195052827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.878980357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.878976708 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.878103545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.137226056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.107221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.878202278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.187979519 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.878945443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.878960655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.882286429 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.879183146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.227293806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.653765186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.878237986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.879658104 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.878553031 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.076376955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.879429624 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.083416277 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.197649444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.880309441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.822956799 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.879367682 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.879916021 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.860550285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.890803594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.879003973 seconds)
  done (took 207.598991899 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.879115855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.879991943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.878963342 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.880069563 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.881135889 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.87987149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.883127938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.880078305 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.428758461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.460960139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.920944435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.888749617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.888093964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.880667652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.893928306 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.88090858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.912065957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.897780829 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.890517729 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.893227363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.89883705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.566615443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.914088447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.545842182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.910304394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.892931578 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.882144551 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.891511105 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.893896502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.893881866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.892970945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.882659427 seconds)
  done (took 220.781281912 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.083537674 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.887370682 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.889137461 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.84221608 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.889098731 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.889564478 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.881090811 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.085699313 seconds)
  done (took 19.284864118 seconds)
done (took 622.37161967 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.312211473 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.157721487 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.064987786 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.9103946 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.153566811 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.945542491 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.908184136 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.971574535 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.101398347 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.98158494 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.545916887 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.926268553 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.634773727 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.931819749 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.035364754 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.966018724 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.444140906 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.525861926 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.086939414 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.984001407 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.081872598 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.839261929 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.982524676 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.140237239 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.664200917 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.885491272 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.095108169 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.447121018 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.918801405 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.078571567 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.647783081 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.295736009 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.918920918 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.906618536 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.960576554 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.943073728 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.265111492 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.917759684 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.03110745 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.648815467 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.971334647 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.974690727 seconds)
  done (took 105.025414842 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.879570988 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.878886553 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.877365682 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.878468587 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.879794295 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.877566095 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.879316669 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.878294445 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.878548357 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.878230775 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.879220308 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.879827349 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.879148108 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.879899033 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.879280511 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.87939169 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.879814114 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.881328333 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.878844245 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.87871254 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.880042935 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.878245816 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.881044066 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.879290704 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.879441798 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.88030688 seconds)
  done (took 50.699005024 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.891780738 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.032999633 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.111638266 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.910191098 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.901095904 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.895302807 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.911079612 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.89593999 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.894363292 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.894535783 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.987508823 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.898024788 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.910477397 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.112871751 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.907446985 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.891977133 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.892164283 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.893310532 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.039182051 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908172825 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.912034116 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.896563964 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.912473156 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.905474973 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.893288682 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.893478925 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.896688519 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.362680019 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.900889923 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.987609721 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.935142051 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.913219342 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.331237012 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.121138974 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.945281787 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.899311486 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.893622293 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.993633703 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.898586606 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.894167052 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.911688821 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.899756687 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.11288698 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.398300485 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.90724701 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.894278853 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.370464965 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.001418159 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.936440514 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.906196673 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.117310641 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.91032839 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.896067493 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.896050743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.931330801 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.904906287 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.894325571 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.253600942 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.905785492 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.913808824 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.898703877 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.895881719 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045634386 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.903251635 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.035374567 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.90246963 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.902298214 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.896627253 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.114387596 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.910486912 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.398243018 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.907070791 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.894335993 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.987682638 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.039536294 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.394775187 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.906497726 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.050402166 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.344867869 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.917960385 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.901387294 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.351081723 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.9224533 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.901404393 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.896547214 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.896069299 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.896502901 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.938499731 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.910628848 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.328117016 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.400540499 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.266494507 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.921896317 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.911005224 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.896859561 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.257654088 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.904016816 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.896736474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.112416242 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.412626235 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.908590869 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.905328353 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.384000671 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.910203466 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.916033553 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.904960589 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.118829851 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.911180286 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.940467309 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.895551752 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.902830729 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.899559379 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.914902518 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.902905661 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.89752416 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.373091026 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.007675759 seconds)
  done (took 234.921826926 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.891352275 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.893369781 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.891223871 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.892438274 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890932227 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.897688646 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.890053845 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.891260747 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.896529619 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.891473065 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.891983861 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.895255367 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.894877036 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.892374247 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.395210252 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.900522689 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.505658458 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.894432657 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.893515005 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.894185545 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.567907197 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.901257661 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.892810046 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.893773789 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.896022074 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.894117433 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.895587581 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.910583183 seconds)
  done (took 168.669703292 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.898008025 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.078838492 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.914860684 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.934352642 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.907865362 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.89686515 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.924478752 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.920923365 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.904893086 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.897587352 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.897364274 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.961231289 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.911187237 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.028065029 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.932997332 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.931976869 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.004603768 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.907742081 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.898081014 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.897659361 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.928868578 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.895225354 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.962114914 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.026267974 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.917051059 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.018055102 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.906266614 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.901409602 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.900310245 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.018798304 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.916004358 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.961104919 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.928484844 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.91842729 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.022397852 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.01704466 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.005280686 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.932244652 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.904698503 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.899062536 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.898972413 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.889256727 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.018750042 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.920496815 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.902129101 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.011210867 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.918853352 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.903168562 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.910040427 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.899474829 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.914709665 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.91932194 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.96967205 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.036022946 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.935385756 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.925679095 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.928047028 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.192899518 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.910272271 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.000603217 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.896762518 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.019889011 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.920828833 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.889731245 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.901396205 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.906657361 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.929407668 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.934525565 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.006079578 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.909477011 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.001733461 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.936411979 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.90687615 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.900561154 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.904177289 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.018173455 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.020905083 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.936742887 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.938829381 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.933136087 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.898881839 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.902486218 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.891822804 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.919613971 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.906967115 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.01841093 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.020624873 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.911160208 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.903627733 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.903471654 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.903973082 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.929583731 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.027466569 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.940168314 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.001055129 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.972025817 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.979022949 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.918281838 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.916875923 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.907009589 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.968065993 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.918422817 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.915534864 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.242274354 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.976574894 seconds)
  done (took 206.075239498 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.99733368 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.395699571 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.960764366 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.958725494 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.197328885 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.323194249 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.685019903 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.952255664 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.953495889 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.977806916 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.113063172 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.012011118 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.964915563 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.940886819 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.359202852 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.942885712 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.952105735 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.973107217 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.956696496 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.518257377 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.267811355 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.069549796 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.948406347 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.088109893 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.937434359 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.257473406 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.446194664 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.32943982 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.985462932 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.300748929 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.283152718 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.633214836 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.159170245 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.197888478 seconds)
  done (took 75.883267906 seconds)
done (took 843.092249165 seconds)
SAVING RESULT...
DONE!
