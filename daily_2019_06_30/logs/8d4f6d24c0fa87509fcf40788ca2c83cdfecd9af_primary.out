cset: moving following pidspec: 26388
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.280400161 seconds)
loading group "string"... done (took 0.537956666 seconds)
loading group "linalg"... done (took 6.817621338 seconds)
loading group "parallel"... done (took 0.15630079 seconds)
loading group "find"... done (took 1.185057677 seconds)
loading group "tuple"... done (took 1.713366557 seconds)
loading group "dates"... done (took 1.181893109 seconds)
loading group "micro"... done (took 0.220697214 seconds)
loading group "io"... done (took 0.977728872 seconds)
loading group "scalar"... done (took 38.587450833 seconds)
loading group "sparse"... done (took 12.701071077 seconds)
loading group "broadcast"... done (took 0.950378439 seconds)
loading group "union"... done (took 13.313136898 seconds)
loading group "simd"... done (took 4.489438976 seconds)
loading group "random"... done (took 8.814930781 seconds)
loading group "problem"... done (took 2.035652139 seconds)
loading group "array"... done (took 22.162103238 seconds)
loading group "misc"... done (took 1.815893171 seconds)
loading group "sort"... done (took 3.304286974 seconds)
loading group "collection"... done (took 17.314132616 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.508857464 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140576809 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131766856 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134614428 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.170375689 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.128016005 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139960528 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099952435 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.078177324 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157836339 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13303531 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.464651187 seconds)
done (took 5.169539256 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203851032 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083498923 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096214626 seconds)
  done (took 1.009918666 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065646147 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12066716 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.0651162 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082479649 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066975984 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065340887 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082594886 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065917896 seconds)
  done (took 1.386139804 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073495379 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067259817 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084230742 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06766775 seconds)
  done (took 1.129479872 seconds)
done (took 4.6398698 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.833898902 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.242918788 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182328476 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.446682011 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148028696 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182151605 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.658328789 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321985934 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.200178869 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081352428 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.120699715 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.355802532 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123870197 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.662693343 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075727204 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105843404 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.165926314 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413690395 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068575703 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082088268 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104185512 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127668845 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101429121 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091764883 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.156581756 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08229024 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146214634 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.0811134 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082646819 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225220468 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188227686 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.670450865 seconds)
  done (took 10.404992213 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097033253 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113260945 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068954411 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140665021 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09667553 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086390675 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071060824 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066424799 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.103570373 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144618587 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088511668 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.117838225 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064615323 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085943295 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084258893 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.222391425 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078723577 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098205224 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069759526 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090992069 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105652442 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094437194 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078325163 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093981479 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128461813 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209039701 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100394612 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114648544 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069985222 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097421227 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130334539 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127651741 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06662754 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08621098 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123718845 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111059747 seconds)
  done (took 4.577569504 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.028011153 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155302439 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091152637 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149835022 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067586105 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.12485938 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082182441 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084540912 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23214985 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.141245312 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.466067136 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128305673 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100778311 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068030184 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06781017 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083450211 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.551997311 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142581796 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102165007 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101985814 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073610932 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086469272 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361612541 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067728506 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066230073 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083786456 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058502357 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141374201 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067997978 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.122637469 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087593399 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066125198 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120770547 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.17935253 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088756784 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151166812 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083773817 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065464524 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164674178 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09058875 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066820588 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082034195 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120764541 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11938652 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068408725 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083544974 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175315788 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066868255 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081869257 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.82938203 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167082606 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092806116 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08374698 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.262757011 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103979596 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066135539 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063647403 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.234139393 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148178132 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067414354 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082984076 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06657395 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067082689 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367111867 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083265502 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.009334709 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068698065 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07715091 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085687629 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067359875 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090271308 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072374305 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100885881 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066468704 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067696058 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083456193 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065872604 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066797131 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.087959534 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063361508 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103871254 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063993939 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205644067 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084230351 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067826526 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063452978 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102375095 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095838956 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086063203 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064841505 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116619203 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068197472 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083671043 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100720748 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084610848 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064397381 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100492546 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069663256 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129718013 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082669917 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.120639426 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067605481 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112819923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071175743 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114395975 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093972753 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067992702 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.148350613 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065477789 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063961073 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084882599 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068257277 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084398353 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068655844 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077807851 seconds)
  done (took 21.040011962 seconds)
done (took 37.886471549 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288203689 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096292173 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074198187 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.0945595 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092846925 seconds)
  done (took 1.560252692 seconds)
done (took 2.448594647 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118281866 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116719665 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06315526 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113837422 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063728209 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118966104 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098016272 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098226172 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115355678 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06474816 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09429914 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082061828 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063877916 seconds)
  done (took 2.126815034 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082810394 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081891707 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086963696 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081841422 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063529465 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099139496 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079902836 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105942381 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080093377 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071259651 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081620656 seconds)
  done (took 1.798139906 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082610223 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081967437 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086480375 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081208895 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062517593 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098793627 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079977742 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105551847 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082020015 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091583653 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066426172 seconds)
  done (took 1.802238648 seconds)
done (took 6.604724807 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078480819 seconds)
  done (took 0.956765649 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.666519147 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.028972363 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07994376 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133297236 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199687774 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.138805827 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.340545004 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086116487 seconds)
  done (took 9.746894981 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08757988 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100390923 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068708731 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087248971 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072131006 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070123667 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090133501 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068992299 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084207336 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071406546 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067613888 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088003901 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068263441 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087187758 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072695755 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085400442 seconds)
  done (took 2.212515086 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091027614 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109584843 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072440398 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093407964 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070936387 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090429611 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074436007 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091784941 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070335029 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089518923 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075176502 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091068798 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072300512 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064133029 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072792873 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.094872019 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071735475 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091139658 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075925611 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091002103 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075271655 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063687587 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089457864 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073618339 seconds)
  done (took 2.927801061 seconds)
done (took 16.728350805 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111016661 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088573496 seconds)
  done (took 1.084371489 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082215133 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099343656 seconds)
  done (took 1.070297366 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083155331 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081529231 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09137664 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095120073 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066428381 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083136184 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104762154 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066681616 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065011852 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083736346 seconds)
  done (took 1.712115979 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069259762 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093549664 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071483724 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098020775 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073914624 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081918237 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073506944 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083920533 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079644052 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06208793 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.089120614 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098881203 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071904436 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101180202 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072734153 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085519571 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07139992 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08522783 seconds)
  done (took 2.352857992 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066737916 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067227951 seconds)
  done (took 1.024605123 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067510707 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063009497 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084140873 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066376913 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08116944 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062876602 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079486073 seconds)
  done (took 1.397899552 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407786855 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109893821 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338596301 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072963583 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102885868 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26824596 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064820522 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069260054 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092261084 seconds)
  done (took 2.457812904 seconds)
done (took 11.991173801 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080359685 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084123451 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111762474 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414046866 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092959698 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083931611 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132832661 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.228238908 seconds)
done (took 2.124163143 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125795594 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613213937 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404924355 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211688944 seconds)
  done (took 2.127611941 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312584752 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.109826452 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060461929 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084594112 seconds)
  done (took 1.469675644 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067137994 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06829761 seconds)
  done (took 1.033476105 seconds)
done (took 5.653683126 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067826736 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066037014 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102616753 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063230662 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085018015 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064387698 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063366262 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085061327 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066640877 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065581413 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081880387 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068647348 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06504419 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083249351 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064376426 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062773674 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080930237 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066108757 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062632936 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080795582 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063629369 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065229082 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080690976 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063743884 seconds)
  done (took 2.654384067 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08440587 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083115444 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072741403 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070342191 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091134687 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071326496 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090073814 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066103096 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089349566 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069019172 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086363145 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071279382 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067894453 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088345216 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067388303 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088038129 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070997273 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083553138 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068706134 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086567134 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071665626 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06576991 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087872076 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071024377 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087599857 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069872449 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087824111 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067252008 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088192786 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070371031 seconds)
  done (took 3.237260232 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070672914 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063027378 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081528587 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072065554 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062872704 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082757395 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064698091 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063691862 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082785703 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064097408 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064370632 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082768785 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063611232 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08202288 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065826228 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066953983 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09664069 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06446761 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062529185 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083145114 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067193082 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062674698 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082616258 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063270309 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080622974 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064061353 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063611237 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080745957 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064853053 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06330292 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084216922 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067767597 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062731274 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089112089 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067438127 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062669034 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086278985 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063648042 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06362205 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082393957 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063040392 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080124545 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06498274 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069909733 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081443025 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065880904 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063446014 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084154119 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064043151 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065740242 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081789127 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063922888 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082497163 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066110051 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066981032 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080807954 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065462098 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062826057 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082854724 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063803331 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062658941 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081965497 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066278566 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063097266 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076503723 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069162959 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083116632 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065850837 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064508712 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084310023 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065994123 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076047554 seconds)
  done (took 6.049455828 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090812707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105669777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064663838 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08387403 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062252668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081596551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068456193 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063655063 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083747947 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069490237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08208422 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065952546 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064554907 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094163182 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064138005 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082566654 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070377661 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06211568 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.191719138 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067159948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081655872 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068115135 seconds)
  done (took 2.680753681 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.173821496 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069818905 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.125086944 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072365662 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066636117 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093177949 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071010751 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069215877 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090210733 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067711336 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086664534 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070322845 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085973366 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0682304 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085819283 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068924342 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086787978 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069160485 seconds)
  done (took 2.432400238 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07778966 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065312834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10445416 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065608502 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085006584 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068769816 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089139397 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074590829 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085413133 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066968209 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072963886 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08717232 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067985098 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083686568 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068764628 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065569819 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087053113 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065287403 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092129325 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070968598 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089531281 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073515367 seconds)
  done (took 2.621869216 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080613193 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067458628 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101249805 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067838061 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080701842 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064284003 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088197977 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067091636 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069528366 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085664238 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065957793 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08153501 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070893951 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065427398 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.087721395 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066301073 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08619633 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066542904 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067118579 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081327694 seconds)
  done (took 2.427235845 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08723717 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085515932 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068858864 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093709367 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068199832 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0854928 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076669406 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085271289 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069002578 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104812626 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069146855 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067364393 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09452135 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091152385 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068538636 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093793477 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076202865 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09405243 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067394056 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085649889 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087389269 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06622004 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073791968 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088308595 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067506396 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085556152 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067884929 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090192824 seconds)
  done (took 3.173660406 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067111028 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06566309 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081191323 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064454926 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063263904 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081157396 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064576591 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062895529 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084908725 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064063885 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065347349 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083769507 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067412097 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065400611 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084663031 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066452417 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06521728 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082160732 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063549313 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062770488 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084231475 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065415398 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06475649 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083209986 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063519444 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083065555 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06500075 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062939887 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083587779 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064934318 seconds)
  done (took 3.043070602 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076607654 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071661326 seconds)
  done (took 1.067534134 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064293263 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079914938 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082498861 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070310885 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088419129 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0670103 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072790371 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090100005 seconds)
  done (took 1.535923298 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082175278 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077089639 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086606176 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079617719 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095134976 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08320295 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156579931 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085774203 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073510151 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063149273 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.100278911 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065116877 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091610081 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067288861 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071279334 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091675489 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064226966 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090887742 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069289033 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063970978 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087301089 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074771953 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087460092 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062812024 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066696534 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108050987 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095083862 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067854919 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069257258 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093022886 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07178967 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077881815 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067707283 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066468654 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08325058 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076137128 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100483492 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069289194 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092946754 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06886918 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094282396 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062478269 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071364218 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091811395 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076496572 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084760487 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068613595 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060976251 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083343728 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069264696 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061865575 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085784697 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061146605 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09160309 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070920281 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079794292 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084836984 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06781638 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087643889 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071276081 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071978956 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087035873 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069815965 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084330776 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07690637 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070293384 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094524626 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062157313 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079224076 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065380921 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0753979 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107950715 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071695739 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065552993 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066225327 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08456193 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07027684 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066772916 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091820577 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072290642 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08565594 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072376119 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091798178 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067519766 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06838767 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073513724 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064189163 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067846094 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063552155 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105456 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065473715 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063916715 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083543794 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07643367 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088532048 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066510066 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063949816 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092287251 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060583744 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085130732 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06778075 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066631535 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07564226 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070834231 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092759674 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075038636 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093195346 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067460405 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069187634 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064717984 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067394381 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086285215 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073883824 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059826817 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089150015 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06698908 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085600272 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075533383 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064115992 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085932792 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073065846 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09122349 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066217571 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063515655 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08829645 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066389235 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087986247 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073921788 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064113188 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081331024 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061755619 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087847886 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066875704 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06838867 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091086875 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068510808 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079889521 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065270275 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089731484 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075767322 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065877098 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086338793 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071665282 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08644651 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066077043 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072258645 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088379522 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066008944 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.0904776 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068198852 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061227996 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088581674 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069042244 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083204612 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071055051 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069230677 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088224228 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067066496 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083982288 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075036446 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084791654 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066684749 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066727772 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083856513 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077712262 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067381885 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081146331 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06409531 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094458633 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064964728 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064844464 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064384812 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06714056 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087796786 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065159261 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066149527 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087788958 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075743287 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07011367 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066444232 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092339366 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07783393 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065971016 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068165891 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064923237 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089168852 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068361613 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093165483 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072804203 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070795654 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088374884 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063167867 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090553657 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074303845 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065445606 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084011922 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065888124 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090175729 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073093583 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089897383 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06913687 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064509619 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085876406 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071049968 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086837104 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067857241 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065437654 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092639596 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065328662 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09253201 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068240959 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094781541 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070654303 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062034555 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088692191 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064852722 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090129011 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062612441 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064185616 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084242824 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068080157 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064386933 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088097489 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060721595 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091733205 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075206573 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066563883 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084949691 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066878731 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091528895 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069363279 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070032026 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089001883 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072188719 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095203414 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066070918 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068734793 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096328752 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065977533 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080053757 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071845816 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06510256 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085648539 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065998386 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083182312 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070959074 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095061916 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075100373 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061292756 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089402134 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066381015 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066816214 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083018754 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071825055 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088734136 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067520756 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072593156 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086911374 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066980622 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089792242 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067086329 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066675146 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088192999 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070180679 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066170037 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067370793 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065542649 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090814098 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065951691 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082947191 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069993565 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066965014 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086172747 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072758418 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084485649 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067843819 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068446923 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086412888 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068267055 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066732053 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086299725 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069831153 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086476612 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067797404 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068043642 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081176929 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074034521 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084418682 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074679192 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066222196 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083305819 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074115048 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088226888 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073534625 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085650384 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068754898 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067469716 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085416891 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069096433 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091935346 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066295171 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076464881 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093906846 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067168453 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088859316 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067581719 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067174672 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084821481 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06754565 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085339191 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067715566 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066251303 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069761623 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067709011 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06530581 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066742305 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065518748 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090419491 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06777978 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060492026 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086879495 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066271668 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084886088 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07697319 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066585477 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087239089 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065317454 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08664353 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067032053 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062680163 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073608332 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074664015 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089757417 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073142673 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085322783 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068296958 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095187673 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062200917 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064613655 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083287939 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064980183 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072098844 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087162009 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074666281 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086606623 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066925428 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063499581 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086895273 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065505015 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06075032 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084626009 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070252497 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084537606 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066527603 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066071632 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088974088 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067350271 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095203086 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06638075 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066955679 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087223131 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06339519 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083851626 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066545147 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069190173 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086638609 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064467276 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062711113 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085774514 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066821896 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086707663 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067318513 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067606109 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072017296 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064382282 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089841688 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070837753 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064039154 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090014332 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066579151 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084780181 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066658839 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06982864 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089037461 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068254759 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093981805 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067400801 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066528437 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086708436 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064205663 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085091911 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067208369 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066712339 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085477587 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067969158 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093008171 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06627643 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069127717 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086997963 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0679539 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091765725 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06925604 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069272025 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093668503 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066903596 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087408632 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075781528 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070257783 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068659783 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066720426 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090080906 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072109002 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064651958 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07188462 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066588155 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088818806 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068623825 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063862443 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087037806 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066085046 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084180003 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073758618 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067193704 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08592006 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066231658 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083220177 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068694167 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069013843 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093721777 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068911596 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088107954 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062852465 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063396548 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086971407 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064452862 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067528166 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08904417 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071776836 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088175279 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067386909 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065401171 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095906569 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071800942 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089927155 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064954214 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069122543 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08766389 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068633924 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087063263 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067499039 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066910121 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089902489 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06761363 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084759078 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073773751 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069313456 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087376622 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068412886 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086921672 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068010407 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061541547 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087395427 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068403693 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090513622 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069917823 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065977651 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096992177 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063922326 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085838186 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071236928 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065151957 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091646696 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062640893 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086983546 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06855749 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066742884 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082280537 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0668111 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064027255 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089536168 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065902343 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082162219 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077723615 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094629441 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071123593 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065597483 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064059407 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061119992 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060728782 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088508915 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068025774 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088053558 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076822415 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06525929 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086060202 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062045569 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085666566 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070160279 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069472161 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085091623 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063042678 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066475887 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09309958 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072049237 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086405177 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066595771 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070457281 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068515338 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064457556 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091385338 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06385749 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069505696 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100361753 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066693471 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087726484 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072937828 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093177013 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067886337 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061137765 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087006007 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069594352 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085989165 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06808499 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067256694 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101795864 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068479419 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085542765 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065823995 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06818861 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08683473 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074590461 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087923755 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067774538 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09212073 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071101549 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077856931 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090813055 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073651302 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068465128 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067847279 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085748852 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068315462 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064434705 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085416349 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068722934 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066794255 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092577845 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074717877 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085745079 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076483544 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095617894 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068195169 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06267377 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086531847 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065741878 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081234029 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068763976 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064191174 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085370394 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064921344 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0647739 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066461679 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070022952 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089707994 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06848349 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06593188 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080985124 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068834643 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087892567 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068933418 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062799931 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086406211 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067404219 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069562495 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090950886 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064232677 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087681247 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06869822 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066578872 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081910592 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072676896 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084430932 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069361088 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06538471 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086365863 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068027652 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069984935 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093100732 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067271421 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089529167 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070137523 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088480295 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064699117 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063993871 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092508728 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065413202 seconds)
  done (took 46.121355769 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099763448 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083054676 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062566144 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06106012 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094944756 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062356095 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082616924 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063246059 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08131338 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066655625 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061797533 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081469603 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072206512 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098101533 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073778464 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087560333 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061799973 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083135383 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062240625 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062914244 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092716802 seconds)
  done (took 2.562169526 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074876763 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069676554 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070843665 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074084178 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066163855 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095063388 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073270079 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091828084 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075764698 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088662197 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076356734 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091635845 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066038737 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088497988 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067321537 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091421367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075777983 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088227517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070127684 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092659616 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069452933 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093346599 seconds)
  done (took 2.716053772 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068262701 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065582516 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087206415 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062118673 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065220233 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081282564 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069345552 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063935602 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075801798 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063736499 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086668036 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065088779 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066938334 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082236032 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066486611 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063347792 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130052556 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.09015624 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065815188 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066415772 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061023863 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066654042 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083875039 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062190274 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064488173 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091149595 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066437742 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083707088 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066641036 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064302156 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085222769 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06378384 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066992661 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087035991 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065265511 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063923047 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086562443 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065487436 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080861953 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065089827 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06616116 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081855246 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067028476 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066399598 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085219166 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063999013 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086680583 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.0664597 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061063115 seconds)
  done (took 4.53963703 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081091316 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128617904 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067095024 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088061476 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102251053 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07241987 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090725199 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109924197 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064664786 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063416887 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103482146 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10376905 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066217141 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091274146 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072719967 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085798077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067782222 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063675027 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067857672 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063881037 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093316054 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071555705 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10072042 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099865678 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070143008 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084359522 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065985515 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069338733 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100043566 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090258467 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070662478 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09163379 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080877805 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09212919 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065427226 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088197999 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082337148 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086542914 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068005026 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083147057 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069120786 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089058877 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073891043 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10197108 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066935072 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090047087 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066091348 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062931408 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09964562 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067008017 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095074066 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100454244 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07011158 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08598813 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071659795 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101678298 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066169479 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08413381 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069540956 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098175431 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063898336 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089174762 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081129583 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087074586 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074016047 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101265784 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071388731 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090301192 seconds)
  done (took 6.713426084 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076086384 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092613857 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081973572 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102495652 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071565015 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071384266 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093576806 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074316457 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092107975 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077712491 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09277424 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11442067 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068761742 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096372715 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073359405 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093547746 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073802811 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094367342 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074140801 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09549856 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074428727 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102885479 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092349627 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081136673 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095345247 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066119938 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094281493 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072513998 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101702879 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092036747 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081491159 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092234425 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072509283 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10112985 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079083981 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093461037 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064819957 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093244392 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072495554 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071687943 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065807531 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103835956 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091893056 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067962746 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091886136 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073018266 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101567557 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078654535 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096460888 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098096778 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073433165 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101538245 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071585143 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094092342 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101159005 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10583328 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101987147 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101044103 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072802149 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101930356 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101262554 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087802481 seconds)
  done (took 6.363103626 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083546255 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095689654 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076734228 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083033503 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064060352 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069538014 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062769995 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063160758 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098709925 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073685048 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098809305 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089780781 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074192744 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096804168 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070029323 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094016934 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069819223 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091129145 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073763138 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091587475 seconds)
  done (took 2.600233932 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075214886 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082459456 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0893131 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071591261 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089831514 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071252014 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089887574 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06900374 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086552391 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069656115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076317086 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098015245 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066242108 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093458767 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095692165 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073587051 seconds)
  done (took 2.278168378 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075771856 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.092842294 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080432571 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087090217 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065466881 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06267391 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088200494 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06190244 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061887744 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099399633 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065842868 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089694795 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066249639 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084886897 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063826322 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068230514 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.083440169 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064618099 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085972027 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079040672 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096738566 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065836879 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067391934 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088272615 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066107449 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091915503 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066115095 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083966829 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065150113 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06649052 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088016733 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069240203 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083653072 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064774728 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063842097 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084320463 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066400535 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086793798 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069821215 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065597445 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085549523 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067236248 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086949051 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068193572 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06228475 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089041604 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062876822 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089251101 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064539858 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086611277 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067278654 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068581471 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088427736 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073248745 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090339659 seconds)
  done (took 5.161470791 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080749723 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068919894 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083976978 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065340592 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067972855 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.090200026 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069310123 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089031941 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068767976 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083474205 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069528438 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068823587 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088759278 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070171444 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067841277 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068474235 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0610368 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091070045 seconds)
  done (took 2.335680313 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072719402 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065977458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09442478 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066709846 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065745632 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090638274 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0621989 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086324567 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066370344 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066198123 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087369529 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068399364 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084823038 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069567063 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065713851 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087212277 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069327993 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064399617 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087494355 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062474546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088945881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066176751 seconds)
  done (took 2.623087385 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073836337 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091967309 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160290548 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.10524193 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082739071 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078554383 seconds)
  done (took 1.58069745 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09181852 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100947819 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068185251 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087587322 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096280897 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067449191 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09040342 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067828083 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098312757 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097480612 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068884607 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097806644 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077412117 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09816334 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09394632 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075863419 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088314687 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069781723 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067120462 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082695046 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090279261 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076656063 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089700087 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068636213 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089005635 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076494633 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09759291 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096503191 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068922678 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097469377 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074548022 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089687115 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077639756 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098514677 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069691408 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097954671 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068346364 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107017349 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094587881 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077495389 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090527403 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075492722 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097845261 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073366318 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098031921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068259796 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094607692 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067239853 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091166605 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107332587 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074603916 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0982398 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07347718 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098770487 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099955663 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090508557 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101589849 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100408696 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077744372 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101037696 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078866794 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097714131 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097863026 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079703773 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098371942 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081961371 seconds)
  done (took 6.700424566 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083042419 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107101673 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069027892 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098033002 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076676843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090365622 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06765574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09025744 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06786525 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089403855 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129855559 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070251876 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098163553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077059407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089882309 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067810367 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090627072 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076983272 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089797557 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108197823 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068970796 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097787537 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077319147 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098387956 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097631419 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074560974 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0898807 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069161793 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089166653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069835997 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094249412 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069273103 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098392658 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068020154 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098753885 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06832339 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089833553 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072864409 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090288966 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073582322 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098729893 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106163917 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069051749 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090267112 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077111622 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089910352 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068123294 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089414745 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067888435 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089546226 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076952894 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075188184 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075092612 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074100087 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093218829 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070084769 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090236296 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069341488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089442772 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075515205 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098156026 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068355169 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109613696 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067572362 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091229565 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097519272 seconds)
  done (took 6.558304829 seconds)
done (took 130.677607792 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202004198 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188150382 seconds)
  done (took 1.37958265 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06913741 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095397123 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098882451 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12907333 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088056529 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100811912 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098124261 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100495473 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066878014 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087642236 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067800774 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067910991 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152555386 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067452318 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065988151 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090847695 seconds)
  done (took 2.443159767 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102378928 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195543023 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10946589 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065469274 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100118826 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078594853 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064563867 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097178671 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07131813 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086847764 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078546486 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095458437 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065750501 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073955082 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070016836 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098376883 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067088232 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077101108 seconds)
  done (took 2.596494665 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101523224 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143136478 seconds)
  done (took 1.245801184 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.183220156 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139333583 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.189344519 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.423068637 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205939132 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.264141966 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179876627 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.181921076 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157839913 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175622369 seconds)
  done (took 3.094221727 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098958665 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170361397 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303735839 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115798506 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.095632759 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114812541 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117712567 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100457856 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078910327 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099943326 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.099146656 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077901176 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118029254 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075372553 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095352921 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077192912 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121976176 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074048226 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096894741 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075499863 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11847634 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067121906 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073758939 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095594433 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075179183 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097818613 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066221688 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.0656285 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074966042 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096374319 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079309742 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114042005 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075312437 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128994322 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09257603 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129634282 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077027565 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093704054 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074554288 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093048783 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077066296 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097734138 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073109962 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09715476 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067222865 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076269645 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088221882 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066029535 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100044629 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067748731 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10021993 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078483733 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.12859531 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088481705 seconds)
  done (took 6.200447258 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.709331191 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.125218059 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069696621 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.129850899 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117159225 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073972361 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.737533791 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111384191 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198314755 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093445193 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108474371 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071154449 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101112956 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084978659 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131219513 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101126949 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116020241 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071684992 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123388189 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.12076454 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068440435 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092693278 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088222536 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.400836898 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066928823 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091888477 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068204376 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06944078 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.133641423 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099834263 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069402779 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166572012 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08559462 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119971443 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091565554 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068537239 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0674079 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078379626 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.203463003 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.182644711 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152770528 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068321931 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068214574 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.09142126 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089408011 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089201319 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133858421 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081016646 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.141629877 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09288703 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071037586 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067182898 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067419622 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10129414 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079544239 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103025974 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.256040258 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088727375 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069906607 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071066502 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225160851 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079438344 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102153468 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092328086 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.177682845 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068892423 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.738879141 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086290106 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06731877 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092363278 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068638159 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091374644 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070062424 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141285898 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.363791791 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070939968 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069855114 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090234597 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186861621 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077956113 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090245177 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.134331865 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066760781 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089682484 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07024692 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069578631 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.139357522 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078344405 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068237695 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092092294 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069482026 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089444417 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068124451 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.184965093 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100300987 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079922742 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.179813433 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089638581 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.136126542 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080014993 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091059459 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079940222 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089128582 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071266491 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068290991 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.10099043 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.117303413 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080238778 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090840075 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069198772 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.119937656 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080489793 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.088842586 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078850838 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.420039465 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.102404181 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067007935 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079158387 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066899493 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.137192971 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091570333 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177731767 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0673476 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102953042 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068476933 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089513261 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068739413 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.134624643 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090536043 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06961155 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069109161 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092273012 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079492096 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.179847994 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070353204 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.182622385 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.15730479 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091057718 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.143929226 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068050718 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140233284 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069180888 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091328038 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069661861 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749355248 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068665993 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067715208 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091954369 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160631805 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068842473 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07936136 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099316119 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066992548 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.742082818 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080011663 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099425967 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079374319 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092306556 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069080181 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089130816 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071593042 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134048384 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191355439 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071189858 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067971148 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099638689 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.134573478 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067690008 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099893178 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078098277 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10108811 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068511911 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091822371 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080718004 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141359897 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.101292048 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.1571612 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557764326 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068902016 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099049329 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.168536244 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06808377 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107363546 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067875387 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.104725533 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136559403 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096826896 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.252936092 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112162912 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.162226073 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079936437 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105068018 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067065319 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089795078 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079418723 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090250089 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071129624 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.099232991 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069791329 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069173624 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.105964538 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068042968 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.196923441 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089202291 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079234409 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088547848 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069880927 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082396716 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066920331 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068140329 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103921661 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069631398 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099531445 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.659655359 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099130074 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068961625 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069544419 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182531857 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.136506218 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067715211 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.08989569 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070279845 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.132798257 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.179009357 seconds)
  done (took 30.439486438 seconds)
done (took 48.393059391 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256462254 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174813413 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.250604536 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116629347 seconds)
  done (took 1.89380145 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144903444 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100416591 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11788849 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064526337 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125418482 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087312853 seconds)
  done (took 1.66849546 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.387541807 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.239476451 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230164839 seconds)
  done (took 1.877947079 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218695722 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234448954 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.412569139 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300065698 seconds)
  done (took 2.294839871 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.165957912 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113531948 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067116983 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106327269 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158813794 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20947323 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124651472 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172517588 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079151762 seconds)
  done (took 2.264510841 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.190990528 seconds)
done (took 11.207711186 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115202176 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.276871877 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.175740513 seconds)
    (4/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097533079 seconds)
    (5/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.099145474 seconds)
    (6/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.201612026 seconds)
    (7/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100599282 seconds)
    (8/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.275279794 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073075673 seconds)
    (10/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.224449615 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.149893267 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.142684719 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078727187 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101013475 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052309594 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072809214 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098150203 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069134368 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.124773864 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.183916288 seconds)
    (21/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075496415 seconds)
    (22/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.102821064 seconds)
    (23/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087229437 seconds)
    (24/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194280043 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.168764326 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074609981 seconds)
    (27/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114028061 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.180364632 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093998294 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074430461 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076680929 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.196245926 seconds)
    (33/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.19065354 seconds)
    (34/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073115211 seconds)
    (35/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.184341518 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071900517 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201294392 seconds)
    (38/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.172107971 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066193876 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119275196 seconds)
    (41/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051258038 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.105870536 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073893786 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111265646 seconds)
    (45/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069772378 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078365696 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115776492 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071581442 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064322583 seconds)
    (50/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150620353 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097034102 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092049032 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098580378 seconds)
    (54/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.15559333 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103197794 seconds)
    (56/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.211609838 seconds)
    (57/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.152823211 seconds)
    (58/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.127094332 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066804068 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.177500161 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147020433 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065356012 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085737662 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121835207 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06663434 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075317288 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.167493112 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191962759 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11287772 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 0.068159783 seconds)
    (71/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075037441 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086983419 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073625936 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.220931292 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.174062655 seconds)
    (76/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.148288089 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.21117148 seconds)
    (78/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.129662572 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.168435639 seconds)
    (80/309) benchmarking ("sort", Float64, false)...
    done (took 0.125918687 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.160476031 seconds)
    (82/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073010839 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.192222041 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051278192 seconds)
    (85/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.185010444 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065123509 seconds)
    (87/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.179165962 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115631801 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.173046581 seconds)
    (90/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099943767 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073750397 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145988517 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.177670539 seconds)
    (94/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052140324 seconds)
    (95/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075032741 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190380745 seconds)
    (97/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.142978683 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120873781 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.140422056 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.135077002 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091750137 seconds)
    (102/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074782566 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11967805 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091798555 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.165632284 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114829352 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069270098 seconds)
    (108/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107018615 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075029467 seconds)
    (110/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091439124 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184336516 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052531898 seconds)
    (113/309) benchmarking ("sort", Int8, false)...
    done (took 0.162974418 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167347884 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1460329 seconds)
    (116/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093101513 seconds)
    (117/309) benchmarking ("sort", Float32, false)...
    done (took 0.127090791 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076513338 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072353538 seconds)
    (120/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066239322 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088304326 seconds)
    (122/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052971402 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07377207 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.157730085 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.311955427 seconds)
    (126/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150868138 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094950491 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073321895 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071822475 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.112695838 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094981702 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09504461 seconds)
    (133/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052968593 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050637336 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094492133 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053605009 seconds)
    (137/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067068239 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12178024 seconds)
    (139/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071629604 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096017918 seconds)
    (141/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119066268 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190078696 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162609504 seconds)
    (144/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062449014 seconds)
    (145/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.173555252 seconds)
    (146/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081718584 seconds)
    (147/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112029486 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095889487 seconds)
    (149/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050687227 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097778725 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071829512 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087651732 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.0803791 seconds)
    (154/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052754674 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09858161 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051480097 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066431075 seconds)
    (158/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073291926 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05357586 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099698861 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088068676 seconds)
    (162/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07308748 seconds)
    (163/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051214536 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.075346446 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074447545 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168226418 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073306337 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086901705 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090887504 seconds)
    (170/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051691672 seconds)
    (171/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087809153 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074848427 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133497722 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173343093 seconds)
    (175/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.093429185 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081514929 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05053324 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093108149 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087755909 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.092102057 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089267437 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194200878 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051723449 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094744362 seconds)
    (185/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05253996 seconds)
    (186/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088514751 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114422343 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06707372 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064950485 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.128349317 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064943777 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061838472 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06121615 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064135734 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096702951 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087140936 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.135405675 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.137913451 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096918581 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068867429 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054021675 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052708875 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.136001433 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159097438 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076994192 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052395002 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088570793 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067044798 seconds)
    (209/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07686413 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089647562 seconds)
    (211/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067065555 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115157781 seconds)
    (213/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067387842 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068859622 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.084252459 seconds)
    (216/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114871599 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071137724 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.146435 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15366763 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074057012 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065649064 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097251271 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073083755 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064932851 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091476997 seconds)
    (226/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101853199 seconds)
    (227/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.128192043 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051829642 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050824315 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.120603796 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071816956 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08852809 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088129341 seconds)
    (234/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052115961 seconds)
    (235/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192824792 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05267002 seconds)
    (237/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072488772 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094952856 seconds)
    (239/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054400028 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075546131 seconds)
    (241/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.059940298 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.050805225 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113045324 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138520416 seconds)
    (245/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051454027 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.104198271 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051867035 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.075658257 seconds)
    (249/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096399792 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050903944 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064514399 seconds)
    (252/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096930107 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05159385 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064327492 seconds)
    (255/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193732343 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.149156121 seconds)
    (257/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069555303 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118521845 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066268759 seconds)
    (260/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078480709 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096325475 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139313151 seconds)
    (263/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16156619 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071445207 seconds)
    (265/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077571179 seconds)
    (266/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051888422 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051138137 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050915644 seconds)
    (269/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093267798 seconds)
    (270/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052239117 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065688003 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.150405405 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07238804 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090717699 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066817124 seconds)
    (276/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051720999 seconds)
    (277/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092840841 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066602685 seconds)
    (279/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06251096 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090379409 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066575647 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064811527 seconds)
    (283/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.074902587 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066010466 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.186833492 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073392837 seconds)
    (287/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052427796 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088052765 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086864728 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087522472 seconds)
    (291/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072351122 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052343882 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050720157 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096989088 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07285436 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093500125 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089998475 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051503292 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074685561 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052925473 seconds)
    (301/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060893079 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052260287 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094472687 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052763931 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086240907 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076798242 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066508064 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050875038 seconds)
    (309/309) benchmarking ("sort", BigInt, false)...
    done (took 0.20761191 seconds)
  done (took 32.902162914 seconds)
done (took 33.928428147 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081523509 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114252229 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074933541 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090776928 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104377754 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075385505 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.095959508 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077660629 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078383116 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079693896 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104042387 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055225681 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073399089 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099156062 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074305915 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115399262 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077995757 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095669451 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074718726 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065690328 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.096621751 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066439595 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066769138 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078165834 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078489846 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070520443 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096009299 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073485879 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088363559 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06657953 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067811278 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096677249 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065775545 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077411623 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096099014 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07253944 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097124566 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077329168 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067448504 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088908786 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074887413 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065367006 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095924162 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073563384 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070514683 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095177196 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072861029 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101832344 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091349442 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091498403 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075247399 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07630696 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.10108479 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071838202 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092677439 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0745332 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069683112 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115089187 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073491347 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06744515 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07270781 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071971845 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069743699 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071429557 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07123032 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104367655 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074775814 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095359595 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075393985 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070858639 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090438228 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073454752 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068434816 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06453674 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074663818 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075257468 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063600305 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069794404 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100520666 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072287258 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064436488 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092862719 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068091542 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070787063 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092272903 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055090026 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06827203 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095788364 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064986125 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095481809 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072644175 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072670214 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090213797 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07630687 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064402384 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094891774 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065767405 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065066357 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091356223 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069460979 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064835496 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09216665 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073882673 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066521605 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09600331 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07871769 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089198564 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072326439 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064281913 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063867982 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07848245 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099382973 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066205979 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067892619 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088496216 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073926946 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064657599 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089922093 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066014639 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065521999 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095088947 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066588883 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067037583 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096578759 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077824827 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088383376 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070203653 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067804408 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088780908 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071534469 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066068882 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089362671 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069294066 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061695516 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091560021 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066899213 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072365187 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092130445 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073525392 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06753015 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09759925 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069886894 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094054531 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072668385 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064849578 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081510828 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069369251 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067253047 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090110125 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066938603 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066453677 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089062196 seconds)
done (took 13.087267913 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067302487 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168164512 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.121393192 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095841247 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109957611 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067204635 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07559413 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127367196 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090899714 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103229518 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110259641 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084733119 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.137581809 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064496404 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.089835911 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070762531 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066275091 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11188869 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124149863 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087291526 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.134109066 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064561459 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118961971 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089240275 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112477217 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12501306 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06762022 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069400483 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092654003 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091566858 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110165489 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069725962 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065333598 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12271711 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115894207 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083831725 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088542615 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083476386 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066319457 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090428798 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.087273819 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122706829 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103496898 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081353564 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071998477 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093176165 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067265692 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.107912876 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089409959 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.103092028 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108924123 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104731441 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093125713 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08026028 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088127514 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086579348 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10472699 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068430365 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066001785 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092681981 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066080157 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069018792 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111467061 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088058441 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068426339 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105278478 seconds)
  done (took 7.24441275 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08395225 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088696249 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108098448 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082715475 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064510765 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065169067 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065415711 seconds)
  done (took 1.646251591 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068144276 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087657022 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113110966 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088279395 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108643422 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086472738 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101120908 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067497029 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082284764 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.092890943 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086412411 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12619707 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067556655 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097177574 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092159624 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066109731 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114765604 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066638807 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093907947 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090281736 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09224011 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087190953 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068398231 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091428465 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080785141 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066003917 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109348359 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09589517 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069258007 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069732054 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089120771 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105731953 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104776445 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074646211 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065933061 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106445108 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080859406 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089157026 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083788786 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095726602 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082472783 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067306573 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092088776 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06547938 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070725344 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101228307 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068444147 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067555416 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094793726 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087086432 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066513263 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078659517 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065608119 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097116344 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069140513 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094981558 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078007476 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06796186 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.1108927 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068630865 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107381767 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083762284 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080113043 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.108517955 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068943354 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104509845 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081425179 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092940141 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070714841 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070131964 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106912041 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064978279 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067571235 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102901077 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068226722 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114237963 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089734256 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067974765 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101653911 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06666306 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091290106 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068182635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088612147 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095653964 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066529529 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094530262 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070807973 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065084972 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090169872 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071670904 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065143245 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093072147 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070832571 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067467623 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094815416 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083373568 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091039632 seconds)
  done (took 9.301232086 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069444878 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067992197 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092967943 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06833419 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067788707 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092367913 seconds)
  done (took 1.555438266 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094810338 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092186525 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081763487 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071348536 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128741996 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08056703 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107322465 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101919033 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085200693 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078822014 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.106628182 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.081016099 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.111547183 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072719486 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105637523 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072658157 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104892065 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077581939 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.101822638 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073837632 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.110407886 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073536004 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072673937 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106764045 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070421143 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096860231 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076610789 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102191154 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08006313 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103172779 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073967818 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069874843 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095314597 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07840945 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106055769 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071049518 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071085 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070143221 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101235624 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072028787 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.080725708 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099300787 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074349302 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096068659 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078757458 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095411974 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071746397 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099955321 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081981686 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093790371 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072995045 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071267803 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095404299 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071645556 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094261879 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079504724 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094660543 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082386322 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072567894 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09601175 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068691405 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096008812 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078422889 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094204021 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081035649 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094737212 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071523185 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07300968 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09788113 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07246847 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095329535 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070884448 seconds)
  done (took 7.329032196 seconds)
done (took 28.157868017 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.667307473 seconds)
  done (took 1.760949952 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.741084879 seconds)
  done (took 1.837087464 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.262215719 seconds)
  done (took 16.365426032 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.591257407 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.750551678 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.851656591 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155504626 seconds)
  done (took 3.447013526 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.892403477 seconds)
  done (took 2.008828369 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234595892 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22252112 seconds)
  done (took 1.55925286 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.765534558 seconds)
  done (took 1.877095118 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.247503819 seconds)
  done (took 2.351425445 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.315839614 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176541505 seconds)
  done (took 1.606461076 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.486617158 seconds)
  done (took 1.598522077 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.718570618 seconds)
  done (took 7.836328665 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203276806 seconds)
  done (took 1.327086818 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.264098515 seconds)
  done (took 1.382753598 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.2527891 seconds)
  done (took 4.36736547 seconds)
done (took 50.43203543 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078868786 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080602656 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105647047 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07817142 seconds)
  done (took 1.452750798 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07755863 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07159091 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101174614 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071569367 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100187036 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0726125 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073839918 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102069026 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071575382 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096982954 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072939249 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070979509 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100166531 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073334478 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094963324 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075292927 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099324263 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073471757 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074579037 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097080827 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071116834 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.072976504 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07308254 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070408605 seconds)
  done (took 3.080630671 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078543061 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07147515 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097576418 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071373617 seconds)
  done (took 1.442373849 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078525215 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090100435 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113850438 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075934936 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089431605 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111328337 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069612742 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068224015 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096313076 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077550669 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066728562 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120851997 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111710232 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077617837 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078213137 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090863085 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068447307 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111095663 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077375745 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076586006 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097199561 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076242611 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09128066 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089219705 seconds)
  done (took 3.227760003 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078360298 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101597914 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10245509 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086366352 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115657129 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064694956 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100015205 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089253757 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.147857624 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065575546 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094347577 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066213509 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072702653 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090314589 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077533243 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.128769249 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109408732 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067919251 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120594873 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064913376 seconds)
  done (took 2.97239252 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074115828 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069888215 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089564197 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069175659 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077107088 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097146453 seconds)
  done (took 1.606007572 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069462609 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067624213 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090775823 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068037095 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071849398 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091098545 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.0671196 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066541041 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091216356 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067992772 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066587937 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090421997 seconds)
  done (took 2.033215306 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.40611632 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095068255 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092487849 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067589839 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071102431 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09039905 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080406776 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068142684 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08848996 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065592716 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092502582 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069790543 seconds)
  done (took 2.413086448 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229915551 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07671566 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291050389 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162868908 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138486961 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141476429 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130189975 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138365596 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1705347 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12775823 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221158017 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1945885 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13272324 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163932109 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114218903 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098302265 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209308538 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188794766 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129451647 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21644723 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172131771 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151446006 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173271176 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127142327 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131680628 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149069548 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071042934 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105000505 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22352926 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15842413 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17289383 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136205028 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119625344 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228495058 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224799805 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169076083 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160632184 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084432952 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.153809406 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160960216 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25398614 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114329637 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193600846 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133639551 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105574696 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139563381 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146006124 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146125711 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132393492 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090085836 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19777448 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178714085 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19199912 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087010827 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137047469 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141534886 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141059022 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127906355 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236030194 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187424455 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153412892 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095036462 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09856674 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204633625 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157284382 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.13402277 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.151867142 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11836849 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160856114 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180924838 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145307783 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169426116 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182444763 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087480951 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143851841 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190019401 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154430566 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194729883 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149767341 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097639227 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150016215 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129405396 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081204201 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.165160053 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074677258 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22744937 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12281241 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10608813 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139698083 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13377822 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135033929 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189809693 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197164419 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12739295 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065830068 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129593321 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.144674304 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174473846 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111678193 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107318014 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141861327 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103420022 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163917334 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099237726 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148032812 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075568352 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149572526 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155487576 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101358988 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149739706 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100504268 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126199345 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159264999 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212236979 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088489408 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108259436 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193571768 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148158535 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130235729 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196305961 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184761056 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.124342376 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103623934 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204250079 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234262249 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088586471 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216684558 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133365592 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083270494 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113286096 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150422717 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138611076 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147928162 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081819221 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.145559849 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221357345 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074750321 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092214561 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161344151 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105843906 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080504481 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130290748 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127022432 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093822662 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127337305 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131784369 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167698255 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150871903 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130841058 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15181853 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124429714 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224054151 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114591648 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100748893 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102177378 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069079674 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191448532 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184878356 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104034323 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192925339 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.150327658 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131631699 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145004343 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082046864 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190515944 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079871792 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070161754 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19843675 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13521017 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111048432 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.204125624 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103507834 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180498813 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.146454972 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162004613 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129708712 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.157203785 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132754725 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086309523 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109167482 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181348102 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073557613 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.117713696 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080819981 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129520711 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122059588 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082767046 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194150384 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151586987 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099728807 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136409845 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122651616 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173598097 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102852025 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156566689 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.14542173 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119083711 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180772824 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179116561 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182481473 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100526465 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20002181 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071284209 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07350755 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116054087 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149011782 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108585862 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083574917 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143846464 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199519406 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156842718 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164839912 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137114747 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149382563 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181333735 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068200119 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142470117 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1743227 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143518063 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.127584624 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116319729 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098758709 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167385511 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135776624 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23492827 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139457071 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150316089 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207873759 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098757026 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080767989 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1299896 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165701054 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132742205 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171823085 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126107378 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11407653 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136428064 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075398488 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099498023 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123114531 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150269369 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162690691 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.141128309 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186003134 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07861803 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143523084 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150685502 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149304454 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063232763 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1457452 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21682509 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120435154 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146887112 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180805155 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105780064 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15147913 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203296672 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175385475 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083538501 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105959084 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147229594 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154151647 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144324725 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193343632 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137570052 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162966965 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109122683 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111444342 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112158112 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097847971 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131326075 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.121373413 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.135169146 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.140327874 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094254686 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157505694 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130316824 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135682472 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145406588 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122130803 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090501813 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12360478 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20197202 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146921431 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226277251 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125607197 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17310744 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219983021 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074549247 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106192402 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07839317 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165539401 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110402179 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159148876 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125240384 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130669347 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151322972 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171220087 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120628229 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069951984 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134439809 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162823346 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138160179 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1228072 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106570842 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217636758 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125056402 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080556388 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140319638 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10373504 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130493443 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22854572 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061840662 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124090358 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074777595 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108616643 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154802098 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207425214 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083879861 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.150207252 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119107983 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136179444 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156128463 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1024182 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126402684 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141177188 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175799411 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181602011 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091140195 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138938709 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156374536 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212427635 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131418068 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095194307 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226452169 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177416877 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.215673627 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115131751 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114027625 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110611983 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137927238 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194746798 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082983626 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219354576 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081034718 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191685829 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131873083 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089669694 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183544447 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098923176 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13163052 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17375327 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144403526 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080554423 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076138901 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146227698 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147012172 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132727948 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102089872 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167574394 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07128928 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188070381 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198036186 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107674215 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130092365 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097664693 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106506601 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13507445 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129048304 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087717066 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.144826329 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202079882 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.114952493 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204565159 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171482167 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111556647 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164863487 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127467063 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66215014 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103124407 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184311015 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144175293 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199736619 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123997484 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118007689 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137167329 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151259612 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200179214 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131441222 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173958183 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187149394 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.144387873 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081012001 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129598968 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129515034 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088447673 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132392923 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141342153 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143590618 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.120544692 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.144719541 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151943426 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08124789 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122257391 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151342097 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14533966 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19968181 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167407382 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083383229 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144644072 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194059777 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079635929 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.176905343 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180282644 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133887569 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097481817 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078622529 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131647829 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225276529 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074547597 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218286857 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14771938 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136221956 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113563671 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.168606521 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159716081 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135697381 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149984403 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092459522 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.135365958 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113082735 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080162613 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075802249 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133732464 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14024958 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124910299 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125952207 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121544212 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179783271 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099035679 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122138279 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104458192 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201572937 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203230607 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115327413 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08184811 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146831922 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140886502 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.141838589 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147786533 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107442866 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081883141 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080300334 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.104507907 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134503905 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139998291 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132042014 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139328067 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192920942 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109575571 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221483428 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092671355 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133276877 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069142143 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077416669 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092907395 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127536548 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136136187 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127663281 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197672372 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122445939 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116003454 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093998587 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100537369 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083015133 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155794791 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138605144 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146686042 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125270318 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06229001 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136981491 seconds)
  done (took 68.697152138 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133040795 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107419278 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122092586 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177830954 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149494387 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238857871 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18241735 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227040059 seconds)
  done (took 2.535120345 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06972016 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120454091 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099461219 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.108134936 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066886937 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095580553 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.247208219 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078160555 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094294216 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088864373 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.105468978 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093953567 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.456140755 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068374925 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093919222 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063669822 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092843976 seconds)
  done (took 3.236738218 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390356704 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.64267026 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.424008821 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100942678 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.87083436 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089974634 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.456939718 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.165700635 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071924525 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.439806665 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.74662213 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132287196 seconds)
  done (took 17.729991229 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075252554 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068738445 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10953756 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082941185 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070827644 seconds)
  done (took 1.613546646 seconds)
done (took 113.151688671 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080529318 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.351585352 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05359139 seconds)
  done (took 1.642789731 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083559802 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083114576 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111327529 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081492228 seconds)
  done (took 1.575311498 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07519965 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075565649 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11013275 seconds)
  done (took 1.473577117 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281819064 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138193791 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.084310279 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083100949 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077399685 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103632778 seconds)
  done (took 1.478996676 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073167672 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074157447 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099517239 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075654273 seconds)
  done (took 1.529863962 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07666731 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052248485 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05395436 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08234477 seconds)
  done (took 1.477915395 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086658305 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077073985 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104648175 seconds)
  done (took 1.476764404 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106297264 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.110622026 seconds)
  done (took 1.42712156 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0815209 seconds)
  done (took 1.289532381 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099208979 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139778171 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155824395 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135225824 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164381172 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136029301 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085330819 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114565002 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103763839 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086463258 seconds)
  done (took 2.434330469 seconds)
done (took 17.599280972 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078927403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.385585784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361303281 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088663568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.694554524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355468116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004077544 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09057129 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147186904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093050958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083844196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645978063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.995343649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317912872 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981287143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317308797 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673685412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069035325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067282091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093632759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963388812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066281772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094280496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067807786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673460402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371596447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067336763 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.343342379 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067622459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094100694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355457825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067093249 seconds)
  done (took 15.980507603 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071158456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1420833 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074792864 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082457998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097708669 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069121496 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.096460416 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069887835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123540789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065929764 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111753668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068931519 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070876625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09613754 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087725727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067010329 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067504146 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066571096 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096776307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069516981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08513915 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094975614 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068178249 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093954008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069074366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079103013 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095259315 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068480701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067363641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096884149 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07078855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093987961 seconds)
  done (took 3.897966306 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114644363 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151377238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073974376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128802599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111499258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097125555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141815214 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120293255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153737385 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067693095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110842649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06871342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126047981 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068967089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087166076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094889097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068610806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093931501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069442941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068254403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113973771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067988189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067682952 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067002605 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06666908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079270362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067028396 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066505213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099642126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069277431 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097562296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069547378 seconds)
  done (took 4.165970032 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073247871 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074310544 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108854232 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082844395 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06831031 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.098618702 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072610212 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.094867664 seconds)
  done (took 1.897462169 seconds)
done (took 27.157038752 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079355353 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069015439 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098207154 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081296785 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071852681 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.104953645 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067386314 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099409075 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073003414 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072786362 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101055511 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067590721 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06968272 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09430264 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073469706 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066593962 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.10612327 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070668235 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.105027176 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079555159 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06884067 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100532217 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073241055 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.105436986 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079142384 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.103779226 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078828705 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071233208 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.095978999 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070520232 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074935944 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110118491 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06754669 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105630902 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068009849 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066636059 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097933462 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068068826 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104364347 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077088759 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068341715 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074476106 seconds)
  done (took 4.693528274 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087584244 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089493757 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110844806 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060927141 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06560161 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.09184982 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08680409 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.085729399 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059633691 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086092906 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081783518 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05990117 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061911319 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053044132 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.086303245 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056215217 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060619787 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.081953087 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059464361 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059261253 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.056837553 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.08038154 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060085396 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061620807 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.082342925 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062613599 seconds)
  done (took 3.116628326 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075127714 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083879292 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114329215 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126209668 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132313541 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076336879 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106140393 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087089997 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112062458 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067615134 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070886009 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121506439 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087399976 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102792274 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068490057 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083101553 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.108934293 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068857516 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.098954419 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091507008 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083054881 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104830874 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092653761 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108673512 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067406087 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069124085 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.099249166 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090468138 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098972903 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076914163 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070713842 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098796397 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069612039 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104929883 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072078571 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068010012 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116888486 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077188078 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104943969 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068873918 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070478747 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096085708 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089545665 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.14039436 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06767898 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073399877 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073910506 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07502183 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097309625 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086451228 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077270115 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095140392 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070399912 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065595412 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065971973 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079497953 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097610314 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070752 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07556364 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099420354 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079437253 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.096443047 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083824929 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066409383 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102044724 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067339983 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068449296 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093637517 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092186983 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095809817 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108366606 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094518701 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069132429 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075857249 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102785124 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074586635 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067157374 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11079379 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077501021 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098364179 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076768092 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070375916 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097942285 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08732114 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068974845 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06851286 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066659585 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072057286 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06860902 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067276207 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11197727 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067745225 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070153599 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11234301 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066705678 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096259857 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074754514 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071189344 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095205423 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078155289 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099158673 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068673829 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075275512 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.095301937 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070872752 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103951974 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075055658 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066050132 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099356048 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073297985 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067268584 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.096904882 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070241499 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067958139 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074998957 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073002695 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101771658 seconds)
  done (took 11.219974559 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.184964942 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151836722 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.098298514 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.171266223 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076401973 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077254364 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.174364224 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.122928087 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067358908 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.094658287 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069822816 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114034822 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.134698288 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.149180186 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078528485 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09611269 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082642372 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.144922984 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.176539228 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140895543 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11211104 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075995685 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.097818577 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068847813 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073403339 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110706022 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089867572 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104241245 seconds)
  done (took 4.372135523 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082098409 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127025998 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074832804 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088012359 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118714326 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067253252 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098197693 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069661813 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079847204 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.10734368 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067093768 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.100845544 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073654569 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099784616 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069663137 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074038298 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.102791962 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069144937 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069876208 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10128639 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076216446 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107869047 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07194974 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06579027 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10247093 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066923557 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091531379 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084853112 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.095799006 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090593498 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064656729 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103287887 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080470258 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066913519 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065873541 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06601906 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097420816 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067361005 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068171178 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094591888 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066288686 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056844257 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094683376 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080038979 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101082528 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056578947 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071875967 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.100803705 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072857148 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064281597 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097905404 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070344814 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06985372 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.102189799 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072458242 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.098742037 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069983836 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065521808 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102294663 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068734671 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06397505 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09295085 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073113359 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065036247 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10390273 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071883004 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093017287 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068308219 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069409513 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.100767306 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06838086 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070300072 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092882065 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069688511 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071600042 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097747164 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069033414 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065353843 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095682722 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067784102 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055077409 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096528691 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053794588 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069657194 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.094058024 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067037086 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092927633 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073781696 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079123332 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096793563 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073362413 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094996381 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067731941 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070552544 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087960316 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071733956 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082230631 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111578462 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067243786 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.093975007 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082163998 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098905594 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067950324 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056412646 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101148817 seconds)
  done (took 9.779066984 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094321313 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08657922 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097521889 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082457823 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.117974046 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087648925 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073066896 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102814812 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069410774 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.106030704 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073613882 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075414801 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095460816 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077303533 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092755285 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103667563 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070025752 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103894794 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072655865 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099891082 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110964171 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082042292 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07408055 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066887095 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071483773 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110375597 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08936904 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107996194 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079120119 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075278036 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107456556 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08968898 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.101575261 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07321937 seconds)
  done (took 4.267200722 seconds)
done (took 38.665769494 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.306718685 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.526086848 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.296673162 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.234786699 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.339268687 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.307864169 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.312369134 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.300815399 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.598743645 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.300761577 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.550734142 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.99221473 seconds)
done (took 60.311841321 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.354707437 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.445245388 seconds)
    (2/2) benchmarking "String"...
    done (took 1.582835252 seconds)
  done (took 4.271256674 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.742927159 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.179551704 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.55838343 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.300207842 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.314363972 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.596398042 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.94569359 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.150510373 seconds)
  done (took 28.286623842 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.308724003 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.662945151 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.672541338 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.669709678 seconds)
  done (took 18.55731139 seconds)
done (took 61.455336629 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.329167354 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.367212708 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.34107501 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.284198932 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.405317935 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.326858885 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.582486017 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.50239599 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.299767767 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.300769238 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.29737646 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.298469847 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.317932452 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.567669193 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.301491372 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.300254658 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.358570446 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.747070118 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.667691753 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.314445545 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.312683581 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.325620742 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.301094206 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.303862995 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.313280319 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.298748839 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.306616604 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.310376186 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.308076743 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.302883119 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.374846648 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.723891663 seconds)
  done (took 194.334899725 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.297233083 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.19981477 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.312161971 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.315296072 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.731031655 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.497753226 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.414049674 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.788435063 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.311650833 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.298831359 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.456970638 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.295707171 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.533587255 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.258709345 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.305381353 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.406198434 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.49229043 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.557995459 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.310161034 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.522173195 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.310488328 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.323377576 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.252468841 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.441361707 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.322931599 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.405194301 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.319105014 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.306248817 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.486358533 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.419066512 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.303446323 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.313448992 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.816524387 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.153154239 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.315226692 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.320519992 seconds)
  done (took 152.35263819 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.568068168 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.294577777 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.293890424 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.294873318 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.321747644 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.294003152 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.767101359 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768091772 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.788446489 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.76021868 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.354557035 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.451097905 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.2944522 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.383132201 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.307431938 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.297039204 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.309616632 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.319450855 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.294697673 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.294667381 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.767663502 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.309029426 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.329484413 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.301764279 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.29576114 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321184355 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.685459802 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.295799366 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321356472 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.600806867 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.336936362 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.295254071 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.534679193 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.924146962 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.399550617 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.297030279 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322744966 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.294895287 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.555707899 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.296355421 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.295709872 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.298718045 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.818889696 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.296140349 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.767744854 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.297804495 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.119407675 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.29616986 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.297010195 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.844525502 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.637118635 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.296021576 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.296340672 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.297494483 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.296062292 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.29601211 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.32384313 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.913870573 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.390142409 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.297266957 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.299168606 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323384484 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.296822338 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.512587086 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.297087682 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.417378982 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.348866578 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.514761244 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.770391185 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.298698413 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385641993 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.413051781 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.297322559 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.297292884 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.297631544 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.298096014 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.400408284 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.298638035 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.296925362 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.297055685 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.651794755 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.297399938 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.304677217 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.298608389 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.357430701 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.38698127 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.298103228 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.538669452 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.299862912 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.298019115 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937322728 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386167224 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.298332104 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.298419987 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.298458617 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.298436241 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.657176352 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.772952796 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.398509893 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.300132559 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.83070603 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.301873107 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.667207922 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.762151372 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.825020897 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.300020193 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.401197657 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.303623357 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.30094113 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.299054404 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.329037833 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.299464945 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.357469813 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.300146293 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.692269583 seconds)
  done (took 354.700969603 seconds)
done (took 704.200966034 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.003093759 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.992550753 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.094859474 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.989962067 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.956090392 seconds)
  done (took 11.277603589 seconds)
done (took 12.519819399 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.476509209 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.476575001 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.354884007 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.478434083 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.327550664 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.494283462 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456102969 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.320253169 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.39855183 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.374797573 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396678331 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.350810579 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326723277 seconds)
  done (took 19.474268941 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607378079 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.601042396 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.366611265 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.602113363 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.340461792 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609968798 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.490715323 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.501742069 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.484906657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.316300328 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.31500121 seconds)
  done (took 17.479522452 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.610666757 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.608411265 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369112014 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.612496743 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.342383815 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.605614165 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.49093859 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.504846657 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.493889809 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.31492984 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.314822643 seconds)
  done (took 17.510879652 seconds)
done (took 55.707025661 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.309516685 seconds)
  done (took 2.552570305 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.340026663 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.504889769 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.324874556 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.312738096 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.311598333 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.310782195 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.313809243 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.31268003 seconds)
  done (took 11.975890828 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.307882785 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.310389459 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.307237765 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.308458815 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.311412597 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.310681558 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.310840091 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.308760396 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.308309941 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.310436801 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.308245932 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.310385474 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.308930312 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.311019366 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.310984818 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.309075596 seconds)
  done (took 22.197816474 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.31099886 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.308239977 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.307693074 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.309939629 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.308131029 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.308431933 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.310338016 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.308203931 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.307931684 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.308573111 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.309878561 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.309149719 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.309446795 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.309012479 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.309556194 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.309619896 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.308251497 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.309507926 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.313570713 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.308788002 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.31016606 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.309072772 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.31023542 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.309892658 seconds)
  done (took 32.672029073 seconds)
done (took 70.641707342 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.171307327 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.994080552 seconds)
  done (took 9.410702001 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.31287335 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.31179865 seconds)
  done (took 3.870505527 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.313397519 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.312187185 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.312318053 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.312300894 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.311450636 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.312297627 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.312886443 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.312273237 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.312386638 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.313012748 seconds)
  done (took 14.370601716 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.313432852 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.312929929 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.309934397 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.312381785 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.313068023 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.310704726 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.313268584 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.314037822 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.313482926 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.310777444 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.314287271 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.312079255 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.313571242 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.311669987 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.314258992 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.311205115 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.311495216 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.31214394 seconds)
  done (took 24.871361435 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.31444804 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.31406986 seconds)
  done (took 3.87564626 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.312481102 seconds)
    (2/7) benchmarking "second"...
    done (took 1.310784826 seconds)
    (3/7) benchmarking "month"...
    done (took 1.31165373 seconds)
    (4/7) benchmarking "year"...
    done (took 1.311813324 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.31187685 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.311302781 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.312868314 seconds)
  done (took 10.431359792 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.311758353 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.491665268 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.574070045 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.997761363 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.31202173 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.311812086 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.261510353 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.307014555 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.30893266 seconds)
  done (took 15.120392695 seconds)
done (took 83.196364117 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.280994983 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.296938474 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.137680223 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.312810614 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.313148269 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.636380358 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.316977397 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.544713237 seconds)
done (took 39.079324461 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.293327146 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.998977922 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.001118738 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.289944986 seconds)
  done (took 11.520843729 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.269397617 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.139142377 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.276988031 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.263813761 seconds)
  done (took 18.17601498 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.85814795 seconds)
    (2/2) benchmarking "read"...
    done (took 1.613323153 seconds)
  done (took 4.692259503 seconds)
done (took 41.916058071 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288529912 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.282043127 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.282439702 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.280333365 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.283247058 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.280256885 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.280066726 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.281982685 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.28351234 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.279065306 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.277164079 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.278938404 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.279998952 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280304459 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277490003 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277397771 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.276688208 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276426671 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.275160019 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27387262 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273674899 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276517284 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.274398888 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.274262628 seconds)
  done (took 31.916609975 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.274111832 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.272036844 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.273806533 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.273371534 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.271882041 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.273633685 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.274390369 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.271990327 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.270900891 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.271082586 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268460319 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.268993775 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.270857797 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.268498224 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272104838 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.267531319 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.267989489 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266316139 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268559361 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.266464054 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.268683951 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266028926 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.267115993 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266554719 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.263401915 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263818914 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.267414883 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.264935052 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266389099 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.264346961 seconds)
  done (took 39.287857296 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.268694084 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.270717115 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.264738851 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.265369283 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.264617941 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.265219111 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.265522003 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.265951668 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.262670716 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.264215894 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.262469611 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.263029526 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.262943027 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.263618071 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.263175859 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.263350141 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.262082991 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.262274924 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.262178771 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.262007169 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.262257188 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.26188673 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.262100434 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.262899669 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.262519664 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.262137696 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.26194845 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.261874492 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.262827273 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.262030514 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.262884132 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.262812325 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.261528507 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.261955635 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.262178805 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.262221028 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.266727048 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.267772271 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.262541944 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.263491402 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.262762439 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.262287373 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.262530704 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.262561296 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.262527185 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.26301558 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.263611712 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.262801073 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.262547951 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.263523819 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.264280141 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.262965717 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.263115701 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.263270958 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.262314681 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.263974061 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.263055028 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.26378125 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.2637 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.264383219 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.26322568 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.263560862 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.263127083 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.263332822 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.263965274 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.264058376 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.263576923 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.263656982 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.263808083 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.264241946 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.264189431 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.264425686 seconds)
  done (took 92.176687816 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.264441786 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261962075 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.261491322 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.261615451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26144883 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264601361 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.261800926 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26473426 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262339996 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.264898583 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264506066 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263308235 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262346525 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265062967 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265242284 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.262494985 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.264841107 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262832858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.264133623 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265330439 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265306016 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.262095366 seconds)
  done (took 28.998167156 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265619912 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.264341071 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.262376139 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265641917 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263068503 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.265024743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.265177354 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265404591 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266110439 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262798797 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263664125 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265772832 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.263324557 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262885237 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262798563 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.263370581 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266312472 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.262867419 seconds)
  done (took 23.958785856 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.263217236 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.263276441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.26557617 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.263380926 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.26391724 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266339528 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26336201 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.266236609 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.266497988 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.263372105 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.266294981 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267086648 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.266856318 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264634954 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26670043 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.263355965 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.266894416 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263892416 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266087531 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26461276 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.264764271 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267064738 seconds)
  done (took 29.03611997 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266610634 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266952502 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.263762249 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.264933346 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.263992549 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.266899317 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.267370852 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.264514435 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.266662959 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.267699864 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265537654 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.267471466 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.264348734 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265054953 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.265362509 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264876678 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267936327 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265494342 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267239044 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.264909118 seconds)
  done (took 26.521458565 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268692389 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267644612 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268668369 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268990401 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270042118 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268450918 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268951257 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269038815 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268577513 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269449692 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269055215 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269327233 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268853201 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26926178 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26914111 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269032845 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268887083 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269541828 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269673806 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269320578 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269220226 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269455064 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269321766 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270874438 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270144541 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269327171 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269693347 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26952289 seconds)
  done (took 36.743065719 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270021211 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269154871 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.267475185 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.266203801 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.266956466 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.266902604 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.266933171 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.266939451 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269169244 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.266881952 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.269961619 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.269504523 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269586633 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.269306269 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269729821 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.269142127 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269794153 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.267840885 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267551621 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267391986 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.270914829 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269730248 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.270023235 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268122336 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267426247 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.270385249 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268377631 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267472471 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271042158 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267838651 seconds)
  done (took 39.264852044 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.289521063 seconds)
    (2/2) benchmarking "in"...
    done (took 1.288871887 seconds)
  done (took 3.785480894 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.269567468 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27083308 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.270332648 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.268035365 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.268564832 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.271011491 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.271089371 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268264484 seconds)
  done (took 11.365353996 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.27048433 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.271016756 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.27063264 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.271523904 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.271112347 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.271977976 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280897967 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.287361726 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.273546626 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.270789128 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.276263434 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.278713128 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.275960305 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270762957 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.271157793 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273797467 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.27244816 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.271902327 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.272264892 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.272716717 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272834186 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275527826 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273688782 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.269989623 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.272381097 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.285187381 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.278748361 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.273183575 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273230928 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.278050729 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.272142239 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.270061939 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.272890839 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.272198035 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.273460929 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.272608389 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285438583 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291942991 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.28193127 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273400943 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273375822 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.27092305 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.274615991 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.275464077 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274392867 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.273275476 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.273667034 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.272147003 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.271652456 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.275652061 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.27810483 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271166876 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.271250321 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280328919 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.274487314 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282915112 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.288523905 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.274855016 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.280041588 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.285978244 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.287854489 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280118229 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275280565 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.274187717 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282583247 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.294305688 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282676577 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.2879681 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.272814734 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.275656186 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.284480308 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287559558 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283004695 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.275351512 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274670658 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.274847833 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275762088 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275082872 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285920936 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.293288071 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.275264852 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275300405 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282765164 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292482823 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.273773626 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.275405706 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.275149236 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.275381125 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.275119417 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286755912 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.291216398 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.276466198 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.275072542 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.274617153 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.278316245 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.275562455 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.274888612 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277481268 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.273618534 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.27623296 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276246153 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278952348 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.284136638 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275725055 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276820611 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.286333327 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.276700142 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275268839 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.286897612 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.277575983 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275772216 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.276051517 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.284136959 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.275185687 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278646125 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.283907928 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.275976884 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.278722835 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.276329682 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.277449131 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284365063 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.29997103 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.278312385 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.278026129 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.280171309 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.287048864 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277621772 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.281443504 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.277836807 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.275207797 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.275576126 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.279159129 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.278258565 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.279448592 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277701051 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2798513 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.275906047 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.278053631 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.277584389 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.27897082 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.279248539 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.278026158 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.278874659 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.279770687 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.278697832 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.280043665 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.286989114 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.278875218 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.279496472 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.279620354 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.276929809 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279126986 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.281174053 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.278161083 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.281201743 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277993248 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.277817021 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.278297455 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279953244 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.280452692 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280616296 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.279462569 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281496232 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.278357859 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.284941832 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.277451052 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.277416098 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.280810987 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.280218129 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.279612939 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.280755469 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.27733115 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.280951743 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.28524604 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.278978881 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.278780817 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.282569326 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278566662 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278845789 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278446481 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.279553562 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.283881632 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.278625132 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.287789402 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.278740291 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278328343 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.281333495 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.277346909 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.276918453 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278453622 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.279763056 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.284880582 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291850755 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286093733 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.277081222 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.280550764 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.277452236 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.280776559 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.283567506 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.276824527 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.277370214 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277890118 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274385923 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27558399 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.278713126 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.276547692 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.274838211 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.276822219 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.277287228 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.276763537 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275649086 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.276025104 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27725384 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.273862976 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275495458 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275570696 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.274123689 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.275379136 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.272261937 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.273016511 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.275079331 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.27457316 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.285353248 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.272651168 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275395091 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27563505 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.273836084 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.273386245 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.275218527 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276235102 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.274520926 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283088429 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.290854784 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.276196305 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282329934 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.289078924 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272646674 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.27644375 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.274612776 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.271656048 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.275169626 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.281519052 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.273649392 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.272882921 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.273646738 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274574924 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274694162 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.282827421 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.272376728 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.272200508 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.273449166 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.275316699 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.270826857 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.274348617 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.274477603 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.27519232 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27658072 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273722296 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.273867081 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275090625 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272679567 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272812705 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272412958 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27398528 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.279547463 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.280726431 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.272978423 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.27618557 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273066362 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.276494362 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.273751176 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272350338 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.273221797 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285506461 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.279596219 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280618907 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275740883 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.272858933 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280473383 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272551212 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.276348687 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271341131 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273184876 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.271878318 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270727208 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.27051668 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274028121 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.273123964 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273373258 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.271549364 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.275457288 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271867575 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270642782 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.271342659 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.272319447 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.274023929 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.270329267 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271891886 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.275733591 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273625885 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.270352994 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.271077806 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279678373 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288115734 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.272706358 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270069877 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.270642348 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.270213814 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.271580818 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.271227041 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.273446483 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.277727913 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.273275642 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.28074426 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.271692033 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282222407 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.271943665 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.273110821 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.278284937 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.270307105 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.269717372 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.272165687 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.271646521 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281455921 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.286606051 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.272315679 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.275808176 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273447716 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.271623251 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.272889795 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272054605 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272764686 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.271663237 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283640927 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.291245089 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.275954211 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273153972 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.268729411 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.271130518 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.272120426 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.269696987 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277884679 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.271391138 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.27306331 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27032868 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.270909725 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.271841127 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.270842711 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.271996473 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.269151942 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.272765866 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279139958 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.285025224 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273054647 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.27135815 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.282304357 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270811338 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28131923 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.286381347 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.271278446 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.271624551 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.271601033 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.273718837 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.270674848 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.273139052 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.270876622 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.271258804 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.274909394 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271629594 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.275064829 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.271689705 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.271729607 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.270796165 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279685451 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291200108 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.272456268 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275775733 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.269636408 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.272597602 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.274867221 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.271617053 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.269894071 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.273583677 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279495141 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278559662 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.271352789 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.272083578 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272330712 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272588593 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.272503547 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.273570097 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.272352799 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.272773706 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.27387782 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.27247162 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27876982 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272226052 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.27390174 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274111302 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.272765859 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.283802054 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.27291509 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.273824471 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272013377 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.273605096 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.275029076 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.273518562 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.273131251 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274449134 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273457037 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.273211254 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278518126 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.278758735 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.277241491 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.272566487 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.273700108 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.274311536 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.274305647 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274765203 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.27361028 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273767499 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.27556858 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.273527842 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.275817677 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.272696763 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.274683049 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.275173061 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274382332 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275884822 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.280139544 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274538481 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.272400493 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.274436945 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275185346 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.271450403 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.274584817 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.28502212 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276029221 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281618108 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.281147994 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.277176583 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.274800291 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276486994 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.282082225 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.274005793 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.276217552 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.274213308 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.278677878 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274228871 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.277116147 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274857774 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.285340178 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.275454541 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.27580466 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287199834 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.294959213 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275122726 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.275660999 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.279049259 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.274689769 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.273363892 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276815641 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.274617861 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285413863 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.294206857 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275493001 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278221997 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273904456 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276422718 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279465094 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276220591 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.277043839 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.274594458 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.275690033 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274873723 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276886494 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.275177735 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.275314056 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.276042848 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278473598 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281647085 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.274588833 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278980873 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.276996385 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.277807458 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277039396 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277451977 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274914222 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.274747672 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.277045988 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277210564 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.278578878 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.280303346 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.276244557 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.277932283 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278405455 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276972416 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279690538 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285011913 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.283289043 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.275185596 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276392826 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.279815842 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.280810228 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276763257 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.27877283 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277669066 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.280232936 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278082101 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277950542 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.278749519 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.280387527 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296140875 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297984803 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278359638 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.27929374 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284053976 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.278214392 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.275388639 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278651384 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.28244811 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.279841606 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.283868921 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.279712695 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285669871 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292341335 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.277926664 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.281016042 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.279368273 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.285169891 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281778814 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276246047 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.276387923 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.280954071 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293346841 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278197376 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285033209 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304645031 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.293658539 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.277538929 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.276677807 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275682805 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.275935324 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.279424215 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.277796663 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.278566557 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278093095 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.276812554 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.277933432 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28220568 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.278996242 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277972951 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27779566 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.277930344 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.281369353 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.275825498 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.277206736 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278566906 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.277301266 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.278004938 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278045514 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.278710563 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291851148 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.288487109 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279032487 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.278639429 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.276646026 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.28214291 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280086915 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286269305 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.285713277 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278371085 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.279344197 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.28124433 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278127034 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.277720766 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279600797 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.278740193 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277919222 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.276336143 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.292217883 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286943667 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.285017759 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.280456093 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279500107 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.280442098 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28068987 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279848549 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278554704 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.283040173 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279031808 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281851615 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.279590488 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280347557 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.281234188 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.286953332 seconds)
  done (took 762.540151466 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278276355 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277694116 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278102479 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278351832 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278475454 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277662235 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277631896 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278360345 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278251833 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278267251 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278156422 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277989679 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278857263 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278330171 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278884792 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278695152 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27857 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278886012 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278733435 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278751565 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278160904 seconds)
  done (took 28.061702966 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281412542 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.278632733 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278523248 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281050571 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278475333 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281571305 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278922477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282102199 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281664068 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279507337 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281214209 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281574415 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279359503 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.279654012 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279290666 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281597688 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281606392 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279352231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281917692 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279239054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282248751 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278990906 seconds)
  done (took 29.385669202 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282757999 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.281762773 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280746343 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.280432559 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281938336 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.279840301 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.282215038 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.28314806 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282825969 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.282874145 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.28309109 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.282168657 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.286927924 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.287177392 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.284775246 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.282809279 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.425793969 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.282561113 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.281991869 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.282325146 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.280704272 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289586979 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.281258657 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.280864901 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.280453646 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28228291 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.283698225 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.283003334 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.282721978 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.283558386 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.285992154 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.284640374 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.283115991 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28501417 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.282513409 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.283873909 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.287179894 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283555113 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.281809775 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.284620434 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.29117552 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.300845531 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284059097 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.291265642 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.28404687 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.284237233 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.285816177 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.28993008 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.282160253 seconds)
  done (took 64.282481797 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.284289108 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284832669 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.28214331 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284749689 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.285480206 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.285444383 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284730818 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284072691 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.282589939 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.282537263 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285676759 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.282794198 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282353201 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285148913 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284923934 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282865858 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283389566 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282947038 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.28326085 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28268497 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.283214326 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.285177523 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285729629 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.283178765 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285486591 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283457757 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.283551308 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285706374 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.283386684 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.283000331 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.285536764 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285893775 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.286275781 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283491222 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283948186 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286705736 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286355289 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.284008727 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286996844 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.283846532 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.2869877 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287170197 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.286942304 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.286192995 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284549093 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284672072 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283964556 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.284197126 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.2848667 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.286079557 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286653253 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284866707 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286585105 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284128477 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286227151 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.287205673 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283758489 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.28426231 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.286321573 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.285558546 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285046611 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287088925 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284575851 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.286996857 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.287490358 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.285259751 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285300576 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286639149 seconds)
  done (took 88.59389717 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287389226 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.287716824 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287208721 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287396415 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286596927 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287003968 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2872622 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.287723711 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286713283 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287287771 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287628544 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288285799 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287698946 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288365135 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287760971 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287867142 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288144323 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2878524 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287529172 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287855049 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.28764396 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287512887 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288379181 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288868623 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289602271 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288530382 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288663772 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288568599 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288326241 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289442498 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288694056 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.288419923 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288996427 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28834626 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.289093286 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288836369 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288899933 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28872724 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.289392203 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289803067 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28903844 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290214537 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290170985 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.28943613 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289633592 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289668716 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289498551 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.290473159 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290923854 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28977563 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.290037185 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289722867 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289954491 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290626486 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289467383 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291372523 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289168999 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289526393 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290174515 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29008094 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290206342 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.291418769 seconds)
  done (took 81.1322634 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291053977 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291130548 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288021834 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.288169055 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290725896 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288643681 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290797571 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.291427575 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290414772 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.29058097 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291140553 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288537341 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288229804 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29026395 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288132016 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288173912 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288135331 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288869216 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291119568 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288558309 seconds)
  done (took 27.019674594 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.288932351 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291496114 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288805194 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28953092 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290897444 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28980061 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.291559055 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291548647 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289018302 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292074186 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291287433 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292315011 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289423171 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289424539 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29221398 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290109646 seconds)
  done (took 21.876777612 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.289966273 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.2927767 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291144209 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.291067129 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.290070397 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29017853 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292373752 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.290512352 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.290140696 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292835806 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.292559224 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292676965 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.292339871 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.292258041 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290503149 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.293146268 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291352705 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.291048141 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.29305897 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29311519 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292251354 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.290753961 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.292734511 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.292788379 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.291012164 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291467064 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291351947 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291279319 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291142769 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.294085089 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.29090207 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.2916236 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.291234522 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291591247 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.292626745 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291102447 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.293573429 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29390837 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294565349 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294193658 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293407461 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291541656 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.293833695 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293692708 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.291592715 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294429069 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292121868 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29202124 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.292570983 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291830273 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29451237 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294083316 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294529341 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295270144 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.294538717 seconds)
  done (took 72.308045184 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295364133 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29472911 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293148987 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295212375 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29481251 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292309822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.29517938 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292842387 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292842684 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294195701 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.2938581 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29491092 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292445741 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295192479 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293452903 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295381196 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.293135486 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.2931014 seconds)
  done (took 24.523673724 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293854836 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293300244 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.296341657 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293279917 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293574848 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296429865 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29321476 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295922391 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295406622 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.293874776 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293443634 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.296312554 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295340319 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295946714 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294812757 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293483904 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29682394 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296495744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294208248 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294305608 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296883966 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296730589 seconds)
  done (took 29.721796568 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.294859847 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.294654086 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.31247743 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.336355181 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.321780529 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.294374975 seconds)
  done (took 9.087090421 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295915575 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29801919 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294871861 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297914994 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296472216 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295269885 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294358262 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294495594 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297259512 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295734289 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29490364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298005399 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297188081 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293819187 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297629141 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297925551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29472201 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295283446 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296200646 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298327731 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295507312 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2980812 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29481981 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29499774 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29603398 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295314429 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298902858 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295319541 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295349041 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298943392 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298748617 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295415851 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298539841 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296381844 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299198266 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297989988 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29659135 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298565082 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298636646 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296739097 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299581892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298573659 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298215878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296148632 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298480401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29629461 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296222009 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296639722 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296773271 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300046361 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29969832 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296452097 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299209734 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2988765 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29872386 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3005606 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297013368 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296770754 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300202559 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297333203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297016341 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299793162 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297553553 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298444134 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299809489 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296853032 seconds)
  done (took 86.851329453 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298111218 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297781008 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298219938 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298785268 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297909577 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298506155 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298023124 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2981161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298406455 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297535868 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301840671 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298636657 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29803796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298571335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298503707 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298792915 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298305387 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299034655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298475371 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302149329 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298507225 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297880906 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298800244 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29932508 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298581679 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301049954 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298811466 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298441401 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29879084 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298709057 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298567915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298385975 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298920729 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299023028 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298702247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298314736 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29942645 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298879163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299137321 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301124162 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29924504 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301805707 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300406531 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299322542 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300233841 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29928722 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299619386 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299540708 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300225732 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299640695 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300740061 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300233916 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300401367 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300328988 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299323928 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301018192 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2996057 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300754867 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300526861 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301985636 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30034343 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300432561 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303391688 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300520014 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300269104 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300736892 seconds)
  done (took 87.001929314 seconds)
done (took 1776.66313302 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.326484437 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.362187597 seconds)
  done (took 13.927607235 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.461883198 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415393158 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299559811 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.346053099 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.301339848 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.303417153 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.317972409 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.301560327 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.300714471 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.300771879 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.300993871 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.490935086 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.351902024 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.301192639 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30039793 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.395645555 seconds)
  done (took 42.730630222 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337384821 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.305560501 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.421228197 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.318532962 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336695848 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.490876338 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.355772243 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.305721074 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.464156096 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.350815486 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.74603157 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.338103874 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.305763266 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.337212631 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.324026999 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.490227814 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.546751881 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.74758325 seconds)
  done (took 29.762579984 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.71149448 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.300966868 seconds)
  done (took 9.253374821 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.320585316 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.33653243 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.33934205 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.335389916 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.314179623 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.319492537 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.301073882 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.305742132 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.330328956 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.368997856 seconds)
  done (took 64.513840873 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.323567383 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305798644 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304822644 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.303859642 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296228845 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.297695914 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.304762848 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.298369783 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.533538797 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.424033528 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.323870276 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.311450675 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.304998587 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306458479 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.304497948 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.34032176 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.438694396 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.304936386 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.303914281 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.310993541 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305674317 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.385754372 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.344276964 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.305252891 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.421699742 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.55282087 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.310351363 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.312624055 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.435131728 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.305247168 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.305763481 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.306106474 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.308687973 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.8608036 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.781927894 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311627473 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.328213247 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.313549989 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.304897738 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.416456787 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.306029973 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.311403582 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.301033774 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.758372192 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.454482891 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.411774494 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.482805201 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.307838108 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307493656 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.363375767 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.307208517 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307537016 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.334413147 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.059411849 seconds)
  done (took 108.816049325 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.33789568 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.786965147 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468713157 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315530714 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.80148219 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742218951 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.299561369 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.55808547 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.333306717 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.759634931 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.576815737 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.637664567 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300121297 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.30275112 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.301119281 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.298966551 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.551275174 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.590267109 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.300825423 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.300231532 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.349789092 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.789949422 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.524228187 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.488761243 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.339917062 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.738564583 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.527392476 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.638188021 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.300826 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.300556767 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.57922712 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.308579749 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.304172455 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303377555 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.56947157 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.626095917 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.607598699 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.301492333 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.333381245 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.304118794 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.329101231 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.731408601 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.615534038 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.537906969 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.662203317 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.749677017 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.302541295 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.300784968 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.3055399 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5081988 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.546044665 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.782670677 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.528420404 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.31435348 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.569667504 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.302245556 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.30274151 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765576236 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.634893881 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.635598425 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349365916 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303857599 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30172048 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.828280758 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306299941 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.62426748 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.60454754 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303079078 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.621807455 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.626853292 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.635724816 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.761615436 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.344899256 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.330003775 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.339814199 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.797357398 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.580595373 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760564456 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.307785601 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30330646 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.605877492 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.305006541 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.580502245 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.840243662 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.777326441 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.356949561 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.327841219 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.303513115 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.760762828 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.759524232 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.550806246 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.66352476 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.580162342 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.328313823 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.303855412 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.304086197 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.330955148 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.537835699 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31704193 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.66449677 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.763406692 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.073743863 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.34826224 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.833102244 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.540818411 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.316988732 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.303806857 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.304766681 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5230246 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.376581336 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.322657746 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.304772918 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.760024519 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.174255408 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.452066451 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.00164563 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.580625726 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305544314 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.778719774 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.305867009 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.761641468 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346177628 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.824416161 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.751457349 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.361941877 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.524982393 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.665515869 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.317963664 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.781705903 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.829020934 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.528326825 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.774515402 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.067866813 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.308505387 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807345818 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.334597864 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.316100142 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.48968267 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.321586751 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.569885776 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318220802 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.783811242 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.342572528 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.575274818 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.502809864 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.791859382 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.360615069 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.581406996 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.331448691 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452946773 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322369212 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309588135 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501938437 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.512094694 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.306876391 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.846539461 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.308150656 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467181004 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.832096821 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.343197782 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.588081895 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.308239852 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.314122308 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612240285 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.348454674 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.963403243 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.309608683 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.580839361 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.29712562 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.760807862 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.306757414 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.825646394 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.528543329 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325749463 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.311199105 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.110400462 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.307020676 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.447348455 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479763135 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.677559098 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307337516 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.73430374 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30664126 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.540997612 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.3218645 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.310829563 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.659865962 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.309858888 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.308249696 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.327338827 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.308093321 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309371904 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.748089379 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.346847938 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.028816163 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.459847395 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.783136088 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.619202743 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.781397376 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.367210005 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.323621816 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782859698 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.351179789 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.587749898 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.311374147 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.347495435 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760474869 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30964889 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747198384 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.803482182 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325646309 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.570627583 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.309718335 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.347587667 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.308808452 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.550201313 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629151834 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309420142 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.311085171 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.528123862 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.545594804 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.525475928 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.325865601 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.357350449 seconds)
  done (took 843.103345385 seconds)
done (took 1113.346173708 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.310476994 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313563617 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.295420458 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.306510137 seconds)
  done (took 26.479160779 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.312763707 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.309801791 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.311095223 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.310780415 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.31325571 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.309672677 seconds)
  done (took 9.115126574 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.376827711 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.304586915 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.305018082 seconds)
  done (took 19.234275798 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.517934402 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.504075125 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.655328778 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.332013898 seconds)
  done (took 10.257574426 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.311036616 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.31199601 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.312262995 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.314736705 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.313700165 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.314448181 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.314169945 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.315410907 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.314799387 seconds)
  done (took 13.06993698 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.903714086 seconds)
done (took 84.313112563 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.307839139 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.297730017 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.167951015 seconds)
    (4/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.308159332 seconds)
    (5/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.442741194 seconds)
    (6/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.294724855 seconds)
    (7/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.607284514 seconds)
    (8/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.612760784 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.551760601 seconds)
    (10/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.479483373 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.297225167 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.36179036 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.393409564 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.350550878 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.305334394 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.339324847 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.332865692 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.37453181 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.307850432 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.308577887 seconds)
    (21/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.319515626 seconds)
    (22/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.311385683 seconds)
    (23/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.448222194 seconds)
    (24/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.309059415 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.313623372 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.340409196 seconds)
    (27/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.393108929 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.718883844 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.737547359 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.319686033 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.321529021 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.558544102 seconds)
    (33/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.509030314 seconds)
    (34/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.444334752 seconds)
    (35/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.509787035 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.415149856 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.308495502 seconds)
    (38/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.752111259 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.311946758 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.656273125 seconds)
    (41/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.26861225 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.615966218 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.340195996 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.641925315 seconds)
    (45/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.392374337 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.335562607 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.461782846 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.002465158 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.754615743 seconds)
    (50/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.842962172 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.423856706 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.59190912 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.418993059 seconds)
    (54/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.763251272 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.365482494 seconds)
    (56/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.122201017 seconds)
    (57/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.660279295 seconds)
    (58/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.712710509 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.372249398 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.665077666 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.312680564 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.165458928 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.330586424 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.799454087 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.331475953 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.512336974 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.674289343 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.331971173 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.091686493 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 5.467076568 seconds)
    (71/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400454149 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.395596365 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.340391226 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.928809664 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.349007277 seconds)
    (76/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.811290044 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.599215615 seconds)
    (78/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.648298663 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.108660599 seconds)
    (80/309) benchmarking ("sort", Float64, false)...
    done (took 5.566966262 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.307854006 seconds)
    (82/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.340633518 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.468217889 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.453190991 seconds)
    (85/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.777408526 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.00751323 seconds)
    (87/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.786545837 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.700017842 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.599593716 seconds)
    (90/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.327387739 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.340653872 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.302141315 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.938975449 seconds)
    (94/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.534206172 seconds)
    (95/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.323827677 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.312887505 seconds)
    (97/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.048018667 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.340316112 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.433516678 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.831303883 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.440206537 seconds)
    (102/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.421274505 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.304281543 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.526083239 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.903837589 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.083407469 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.379416504 seconds)
    (108/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.473078191 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.945684197 seconds)
    (110/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.960569698 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.574218779 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.147669149 seconds)
    (113/309) benchmarking ("sort", Int8, false)...
    done (took 4.366560465 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.313132415 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.017541929 seconds)
    (116/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.307685083 seconds)
    (117/309) benchmarking ("sort", Float32, false)...
    done (took 5.285294734 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.15239139 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.554974735 seconds)
    (120/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.896391992 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.124979 seconds)
    (122/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.3102084 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.36780668 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 1.812736382 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.338268349 seconds)
    (126/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.649691826 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.123488704 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.343982231 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.573216453 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.481535194 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.115476595 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.009960729 seconds)
    (133/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.903659583 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.920978497 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.580033765 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.301871684 seconds)
    (137/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.427039466 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.31343184 seconds)
    (139/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414104024 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.445753471 seconds)
    (141/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.313623013 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.382015565 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.850354952 seconds)
    (144/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.003919701 seconds)
    (145/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.302856775 seconds)
    (146/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.543268822 seconds)
    (147/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.331645323 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.087419125 seconds)
    (149/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.618399403 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.343374761 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.343341431 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.014975277 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.023201923 seconds)
    (154/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.802716997 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.655531589 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.599786489 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.327644908 seconds)
    (158/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.489609792 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.637663062 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.880141153 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.710575168 seconds)
    (162/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.411628921 seconds)
    (163/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.639542185 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.847440052 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.340982094 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.316392623 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.333999761 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.620073033 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.318364141 seconds)
    (170/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.121471445 seconds)
    (171/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.317112505 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.344765948 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.316145234 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.331820219 seconds)
    (175/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.412869774 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.550232359 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.510139306 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.602437225 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.599887375 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.318723559 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.696338806 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.332127308 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.303810959 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.329116408 seconds)
    (185/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.885447059 seconds)
    (186/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.347633394 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.363564907 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.31680115 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.886811185 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.304709466 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.732012546 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.317142041 seconds)
    (193/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.49526142 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.178425745 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.345558235 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.335475818 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.391936323 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.50738357 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.361055275 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.31473758 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.314988815 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.786691365 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.392433067 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.449609503 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.318644637 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.314657015 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.379323317 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.427167162 seconds)
    (209/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.391080046 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.5176317 seconds)
    (211/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.391869813 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.369567174 seconds)
    (213/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.405387829 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.33820135 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.341975358 seconds)
    (216/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.572336586 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.013977919 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.397391555 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.42195408 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346264394 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.867644929 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.950167417 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.528625909 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.079370615 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.383928053 seconds)
    (226/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.342369845 seconds)
    (227/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.711543966 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.789478281 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.577336253 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.496924316 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.343481869 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.587424045 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.361605385 seconds)
    (234/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.502088348 seconds)
    (235/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.321112495 seconds)
    (236/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.917175914 seconds)
    (237/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.343181073 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.346369663 seconds)
    (239/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.321125964 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.449816366 seconds)
    (241/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.664560785 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.343892508 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.144495856 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.339450288 seconds)
    (245/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.669741092 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.447503149 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.085404036 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.869662637 seconds)
    (249/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.407875565 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.543720838 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.438917989 seconds)
    (252/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.330734694 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.733449381 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.049716248 seconds)
    (255/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.320629192 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.430157747 seconds)
    (257/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.427329074 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.312811868 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.518604241 seconds)
    (260/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.044407087 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.362323022 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.320138793 seconds)
    (263/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.028297963 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.348893783 seconds)
    (265/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.307815425 seconds)
    (266/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.699125303 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.751013277 seconds)
    (268/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.627923778 seconds)
    (269/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.469452313 seconds)
    (270/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.913574318 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.177490559 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.418294258 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.709611036 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.320797527 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.348163359 seconds)
    (276/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.505661802 seconds)
    (277/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.427737508 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.935350332 seconds)
    (279/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.313092308 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.743552547 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.334571266 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.178787667 seconds)
    (283/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.851239043 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.930651178 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.100630216 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.40599386 seconds)
    (287/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.888601547 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.407448725 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.60992689 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.437186886 seconds)
    (291/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.407426212 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.685317765 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.747225153 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.469389939 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.349430602 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.365439721 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.146701139 seconds)
    (298/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.110692131 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.705974208 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.60542153 seconds)
    (301/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.674718985 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.386834804 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.364034104 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.348115934 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.660806482 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.940252491 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.710607144 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.613422187 seconds)
    (309/309) benchmarking ("sort", BigInt, false)...
    done (took 6.324561805 seconds)
  done (took 913.408536065 seconds)
done (took 914.660341978 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.357329179 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351730004 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.334128068 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.35683511 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.446999132 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.3672042 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.344668214 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.337316988 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.382635191 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.384590521 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.333162209 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.368364491 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.336654662 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.335533392 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.33433444 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350319364 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.261405154 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.336202016 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.352740406 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.344839889 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.352553141 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.334293614 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.385623684 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.367670516 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.339335237 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.338857312 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.339285247 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.355460837 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.448109337 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.33992987 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.338462413 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.348577457 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.26197767 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.334414058 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.332068426 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.355673084 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.348314469 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.345795021 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.339885115 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.36918316 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.626305742 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.335888744 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.338267601 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.337710105 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.337644077 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.340312022 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.338176433 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.343956666 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349791986 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350831433 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.618785095 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.352153989 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.340713819 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.337536305 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.347537239 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.337407846 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.341039426 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353434197 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.356887623 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353209478 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.256616438 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.342992741 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.340354997 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.354707356 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.345506358 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.657962415 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.333051425 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.341492655 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.628516218 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.342208569 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.657951852 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.347159516 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.338905147 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.351979816 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.370083525 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.267775128 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.333453701 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.338074527 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.346171974 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.337475207 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.349525902 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351468554 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.343852109 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.340310273 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353359737 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.371910101 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.349127595 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.340362807 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.349423042 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.358398562 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.347088197 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.351054627 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.342808384 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.334260771 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.348927269 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.34225408 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.342629693 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.343191862 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.344470851 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.349862149 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.646850291 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358215269 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.336557284 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.336173491 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.338876622 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.354232552 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.645830653 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.343230822 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.361726759 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.387161501 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.340540588 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.261750246 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.343678666 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355686874 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.349532639 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.343606732 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.335643259 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.262324671 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.652353413 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.357511596 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.342156757 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.339873897 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357178559 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.342516497 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.337444795 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.273206421 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.341945932 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355043395 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.4615781 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.35141114 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.372000368 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.339808152 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.343992966 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.369299156 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358141728 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.372901629 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.343269062 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357944311 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.358038855 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.337194382 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.354137489 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.352069573 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.341626474 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.348063669 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.336473957 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.374580525 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.354973699 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35423859 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.363051445 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.463327847 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.338579114 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.264434466 seconds)
done (took 224.303685037 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.40138617 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.330967261 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.444249451 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.339205346 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.436687304 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.43704014 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.337378016 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.338682605 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.33824771 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.718990342 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.338350535 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.337981906 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.338238779 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.338097651 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.422350216 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.340018713 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.338043955 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.687875717 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.340156169 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.410147039 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.334040903 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.338726562 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.34045886 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.728915468 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.331693026 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.336443766 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.411423403 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.340762453 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.687023771 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.340324248 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.340279759 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.691684904 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.42994857 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.358763615 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.350977174 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.348242297 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.438849126 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.356597786 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.421606964 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.421901843 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.446441501 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.379028906 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.333210295 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.336094425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.342166522 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.341888924 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.339714789 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.368028963 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.339088995 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.340258852 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.684064921 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.35240223 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.348878715 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.340793477 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.340293613 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.361491562 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.340145392 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.341897756 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.430653497 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.342175739 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.406066555 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.722652506 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.728309256 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.343036927 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.335671022 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.34094218 seconds)
  done (took 148.964382124 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.408296904 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.415464484 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.446913188 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.342066429 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.392181304 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.451277637 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.34166146 seconds)
  done (took 11.075064074 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.34735209 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.343360901 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.391500286 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390561068 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.341840071 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.489612502 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34324187 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352943337 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.341097901 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.39555025 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.344565836 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.344071665 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.350279812 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.342358606 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.39009921 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353843525 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.458447729 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.343432818 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.34391284 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.498919236 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34228599 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.35079001 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.394140245 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.353841324 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.345522475 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.349763844 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923749187 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343290342 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342049775 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.343699755 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34185908 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.381045835 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.345980066 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.335971712 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342175052 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.45966753 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.344179095 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.341493979 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.344374349 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.339947063 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.344499705 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.345976759 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.344906375 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.342898974 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.344859353 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.366416061 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.345739748 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.344534149 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.345360979 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.345038961 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.394405482 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34619112 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.342516903 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.343041868 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.400699726 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352071307 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.34529317 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.343396651 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.346110853 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343773422 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.501687081 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.39202018 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.345658621 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391377263 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345693272 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.346532081 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.346670876 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.345653563 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399166551 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.346653899 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.393178852 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.344274604 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.499690731 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.367908024 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348214506 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.347823724 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.348236091 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.345937343 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.341726879 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351547483 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.344134923 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.347054397 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.351523009 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344507248 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343739119 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.457608623 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454713055 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.34499485 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.359212997 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353803887 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.345025526 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.398825331 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.347702957 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.344605052 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39823719 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.461513086 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.40157886 seconds)
  done (took 154.329964813 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.351146096 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.354694193 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.347598755 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.362224524 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.347056102 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.345935008 seconds)
  done (took 9.391017664 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.349359445 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.347864254 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.348347743 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.348553219 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.347732223 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.349406839 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.347589752 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348265254 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.350935561 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.348161663 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.349759916 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.350182152 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.350445569 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.348103382 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.347820285 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.34921613 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.348143864 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.346386634 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.349029195 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347935766 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.446734927 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.348635643 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348534544 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.349073444 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.352957 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.349358262 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355370997 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.350000182 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.349389338 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.355636064 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.351558841 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.350742838 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.349188486 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.353497092 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.352363923 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.349527336 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35249729 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.351146928 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.753112205 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.350779888 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.351473952 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349778958 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.349923455 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.351860449 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.349555264 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.352691592 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.355018679 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.356684561 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.35020484 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.352385485 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.351913232 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.350223865 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.351636236 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.353047895 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.352732635 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352846344 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.35503378 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.350679398 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.35018535 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.350247288 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.351425186 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.352290505 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.351528408 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.35401787 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.358914866 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.353133335 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.351287338 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353697905 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35101768 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.352067674 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.353507262 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.349309344 seconds)
  done (took 100.048959717 seconds)
done (took 425.083435006 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.798318942 seconds)
  done (took 8.084526674 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.383836112 seconds)
  done (took 7.670334196 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.869108945 seconds)
  done (took 20.15763998 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.38795817 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.360334975 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.360024237 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.348547261 seconds)
  done (took 26.741504188 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.500929178 seconds)
  done (took 7.787048971 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.344696584 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.357564872 seconds)
  done (took 13.988272331 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.810588533 seconds)
  done (took 8.095930234 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.104642245 seconds)
  done (took 8.391494832 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.359164473 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.381418361 seconds)
  done (took 14.034905287 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.330471813 seconds)
  done (took 7.617016186 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.048418352 seconds)
  done (took 8.333143158 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.345833586 seconds)
  done (took 7.631957205 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.404281373 seconds)
  done (took 7.689785653 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.703238446 seconds)
  done (took 8.988651489 seconds)
done (took 156.49828024 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.343708197 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.345169338 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.343182202 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.344184111 seconds)
  done (took 26.661485604 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.385908294 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.385271153 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.386690203 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.396209185 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.392682699 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.385698281 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.378271916 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.377364339 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.396496517 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.388678896 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.387317453 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.387956239 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.386163526 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.377265054 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.388407399 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.386960538 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.396508549 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.387226184 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.378213232 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.388546255 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.353173491 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.39548643 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.389204481 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.353107292 seconds)
  done (took 34.515145836 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.549542769 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.422241043 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.505424069 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.402307838 seconds)
  done (took 7.167123468 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.404912388 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.405534444 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.41745179 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.455631481 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.483110423 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.415409087 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.379859558 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.374208911 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.360945027 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.406361919 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.482479885 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.422811998 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.489555339 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.352950338 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.531977478 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.353067791 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353066071 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.405412931 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.457066286 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.47195147 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.354430957 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.405695706 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.408894273 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.423518825 seconds)
  done (took 35.303713443 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.353011922 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.361056212 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.36007742 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.353331097 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.353120483 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.353720546 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.359352314 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.354270037 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.375049741 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.355681893 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.352186395 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.353848063 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.354009163 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.354075988 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.353178151 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.366986814 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.367069317 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.354523813 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.356889776 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.360316701 seconds)
  done (took 28.441037871 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.34712535 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.29153233 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.699139191 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.602372418 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.346459489 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.346192858 seconds)
  done (took 28.922157089 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.418266198 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.537071992 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.355140163 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.681779052 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.757396029 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.354804157 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.354021326 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.57081654 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.852364294 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.859848562 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.40739007 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.404040753 seconds)
  done (took 19.841621605 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.346909638 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.349778905 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.361774687 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.365784008 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.404054166 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.358452266 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.360537379 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.346482717 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.407073224 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.409167788 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.357662702 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.406216607 seconds)
  done (took 37.765093574 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438168886 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393769743 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.197153318 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.15486727 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.726722298 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562590328 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.168548158 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.804404314 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.35436829 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624288558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356500594 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440507998 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607811404 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362597202 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353932646 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.320993874 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578941322 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825531718 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353646748 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.195301347 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37874035 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362647008 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.287187063 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.380144453 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563380253 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.480126736 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.611462324 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350896377 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617410995 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365692836 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362969836 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352126227 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627352916 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990812026 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442716242 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362381723 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.119115124 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.064409311 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.340606387 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.238231363 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.137591373 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353977186 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362532382 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351970806 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287056647 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352091327 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817169185 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.357666396 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.063580638 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35287107 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363512616 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448179012 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.356614914 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.172067511 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438398343 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352560525 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.350437272 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357741271 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920940684 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.690685084 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366646862 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.289288107 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.458066755 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.197859241 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98321861 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.455462674 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.357539152 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35740951 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287995781 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.194647534 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37254177 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682740333 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.374404866 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.94369962 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056964217 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353763599 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303862017 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886787821 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356406038 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.291203319 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581450426 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353481499 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289225183 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.307691227 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288336103 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024147484 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363020134 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.677564109 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35962722 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.808912153 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.365190377 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374305685 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378274049 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577992909 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.238537264 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354290968 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.14486029 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512982616 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376832796 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.810480955 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289220111 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.359503224 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612179011 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.566791455 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358593927 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.321740669 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568750118 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354344842 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.374176048 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.355196009 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.367360085 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.945825721 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368628743 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.698164003 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373788631 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355458368 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058615504 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359374034 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.459277786 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356061847 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590184369 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.087754985 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357351833 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438401263 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358982227 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357046991 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.29698256 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874207777 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356397047 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.35896111 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364666306 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.369404566 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.355268529 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301685986 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.366488438 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359053966 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.358600897 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.580474162 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360321353 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635145961 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290819054 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705812844 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.448614988 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.57952651 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.503867722 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.357956084 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618552393 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367237087 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359838635 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384299074 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376318507 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455608728 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379022472 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.359001289 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616613354 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.361936079 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.361651023 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.298572304 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361656051 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358089486 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.363387031 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260092205 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956420423 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336689363 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365330432 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247698418 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.372320203 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422398817 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362974283 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.368232556 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.053228181 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256576667 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.362880279 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.355909536 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598019846 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368278566 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.237221572 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436822969 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.566286382 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960564639 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372336163 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.292731214 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.069774868 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.052138651 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359958473 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294654913 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.359127145 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368217729 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369767205 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.584076008 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.955377882 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362059504 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.216680725 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.367796891 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370611128 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.364200461 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359809294 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.029246011 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.707417974 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365973474 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.372426345 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503713631 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.374273576 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.293683752 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.363673367 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364695412 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36030175 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.359545629 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392906042 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.220954404 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848181304 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62061492 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.119933469 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370397652 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.315192652 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.393373149 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.358996328 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.178073755 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388191517 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.382251061 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369611249 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.371661066 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.274885551 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022799592 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927543704 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083826745 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898109942 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318531397 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.36492827 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363205045 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823532808 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294566657 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917798584 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537846379 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.827917908 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305677534 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579466836 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.519682969 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080096814 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373914759 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590142221 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338352683 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.168954389 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394016691 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572629455 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39748753 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.362916255 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.29268039 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.650566945 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628578813 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.179915773 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443440411 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821054105 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.16959149 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384637178 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.359828257 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.643876244 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531196963 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.071186519 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.534438878 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367795084 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365214322 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848196885 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368963934 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.587667613 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993514107 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37222618 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.574590527 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298202728 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.374504799 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.374190545 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.365262294 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.546784513 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.365183035 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.619452112 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37439098 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297376931 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372273797 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904478956 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.220505989 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.369537038 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362817112 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070708891 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36562134 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63485043 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.370340538 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.017866734 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371862586 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298420533 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297755035 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.057552619 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37057181 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341171798 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839710528 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.450657517 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.424152006 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38941775 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583083716 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.622476676 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.378480116 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95895612 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594713073 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.233648296 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386498234 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.464737314 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.200660668 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.371659861 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364386209 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600626362 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269548834 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588751907 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.21356759 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.269708862 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36218693 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576807891 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365172727 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372756157 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602331681 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.075708719 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.381050909 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081668497 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389519751 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370261691 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.282933952 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.469555248 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371215083 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444353498 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376162517 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.377064363 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.376241256 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534492534 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37718222 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370746379 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.379821682 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460383806 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.728243437 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.038881219 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.372170121 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965480576 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099126138 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965698549 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380743818 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366723631 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371058907 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298571012 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514589401 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.590521261 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637929442 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492644416 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.505445206 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387419452 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.156876881 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393492607 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579578307 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640616021 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.259836847 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37027015 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.379167536 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.36487173 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376808086 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.578037541 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848468932 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908311018 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520129009 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375240523 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.831824927 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640709772 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366475928 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366324018 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956736122 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.367381957 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.655146085 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.371047296 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370483975 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517712799 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377408288 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006898997 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.376000984 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.521810519 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.140608195 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.239931903 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626302575 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.791437069 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.379238058 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966103764 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096861824 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631625879 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434591243 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378171344 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.476626616 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514258136 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.364848011 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367791394 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367597816 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417133111 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.078650604 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.378041559 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970865177 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634058019 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.365597924 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.365239844 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391252697 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.377847424 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591994888 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045608115 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593303905 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378669438 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375801406 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.184824499 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968804533 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382227641 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304609993 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.37267566 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601993526 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604770358 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391416012 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.821352824 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.079956914 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911488659 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.341994917 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391270388 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37040368 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100633239 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969085786 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.055450183 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847966027 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928827795 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378691912 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645769854 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.374307407 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379324728 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648217635 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.373382905 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373722727 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382319068 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.970244676 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100267282 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.379692289 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.261135909 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.308991802 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71111129 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.08056996 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306717368 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378978486 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.55353395 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369624298 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500768907 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381549394 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.371903468 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372662521 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.126523392 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64642721 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.375458423 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.371035594 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.247188794 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375933561 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392452357 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639408042 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37782929 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.046820456 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.721587552 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626944231 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382414197 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.35825494 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.37513465 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370713625 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.358398399 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.570172002 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.59644043 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917111031 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.373225514 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.385850751 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375689101 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.588850741 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583251515 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371607444 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386039389 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371598528 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389916667 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.277373818 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.880297465 seconds)
  done (took 1602.245063815 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.399758595 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.37821578 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.391172311 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.421404841 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38662076 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.393137324 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.445252998 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.380734725 seconds)
  done (took 52.508455581 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.382182044 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.604524144 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.399773872 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.373414303 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.382291326 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.383814942 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.793063381 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.373120872 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.38333626 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.381940799 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.383294935 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.376958304 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.980977011 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.384882889 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.383096113 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.373756232 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.382511932 seconds)
  done (took 66.036389675 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.370932638 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.74410754 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.452930354 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.386734323 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.194913329 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.381308542 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.853429877 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.426002526 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.372555307 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.539825199 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.020669362 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.410286302 seconds)
  done (took 84.468323622 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.379876148 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.37837754 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.378977565 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.378873849 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.3790786 seconds)
  done (took 8.208821713 seconds)
done (took 2033.371051328 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.627423094 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.045653916 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.986462447 seconds)
  done (took 5.346451215 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.518328164 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.566935345 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.688054556 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.708686317 seconds)
  done (took 7.793685453 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.654984614 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.760583476 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.581472674 seconds)
  done (took 6.309383999 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.688816818 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.393370569 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.448428038 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.372168427 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.374149905 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.372506175 seconds)
  done (took 20.431470661 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.376464176 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.378068145 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.37608938 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.379063701 seconds)
  done (took 6.821100175 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.357545583 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.102980775 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.358848569 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.373800716 seconds)
  done (took 18.504502681 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.121244818 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.134912888 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.11959645 seconds)
  done (took 7.686846898 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.370096017 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.215255321 seconds)
  done (took 9.897511358 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.680245951 seconds)
  done (took 2.99183595 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.508623683 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.638576809 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.433883497 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.306094076 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.460165359 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.889442939 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.891601784 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.491105375 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.297128522 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.386957185 seconds)
  done (took 27.616449443 seconds)
done (took 126.871175627 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.982145761 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.610096705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.577119791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.95594152 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.597260013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.576643382 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.592132273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.928231124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.484683653 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.455670246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.954335455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.595001136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.537741327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.610270025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.538268509 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.610248937 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.65773779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.016715126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.644569962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.835425993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.592937157 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.593142834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.789739085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.658722195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.595861824 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.527710231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.173854219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.619630732 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.812726557 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.223363332 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.529459021 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.014014314 seconds)
  done (took 192.206149027 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.372857751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.385807082 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.38717962 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.386128601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.372588103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.373901191 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.393075025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.386299821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.384742892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.373979939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.373153705 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.38446266 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.373802078 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.374026896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.391944671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.37341653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.378579709 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.3726443 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.372800268 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.373846728 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.375766382 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.391355654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.378032288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.373804377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.388137665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.387804728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.373144918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.373876403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.373873998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.373979172 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.374128392 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.374104308 seconds)
  done (took 205.438778296 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.377486102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.373059436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.375273037 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.375029079 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.379376235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.375114832 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.37549439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.38769057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.381228121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.377324505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.374652397 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.375070309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.377410846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.373703546 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.376907679 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.37469765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.375232203 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.373841596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.375180104 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.374820586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.375675325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.375608179 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.374300901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.381192715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.375319277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.376118422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.388619337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.383652965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.375058161 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.375577066 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375747397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.375477559 seconds)
  done (took 205.378506041 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.571576766 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.383913432 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.38551382 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.321675607 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.384225834 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.383637679 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.380130892 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.593008531 seconds)
  done (took 14.72073189 seconds)
done (took 619.057558563 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.563661679 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.300396755 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.578965412 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.404404837 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.12266398 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.405555955 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.404488551 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.563003897 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.85298067 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.552340973 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.613440802 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.401810415 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.757863205 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.403637872 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.642830625 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.497825269 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.248410191 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.36119968 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.701473202 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.894485242 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.651941299 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.893995826 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.560383612 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.907172565 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.754721187 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.91271377 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.091604967 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.247773797 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.404529105 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.702956823 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.938137493 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.322049463 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.45686703 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.439208897 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.495142069 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.478794318 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.306769361 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.437085423 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.581773593 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.660234154 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.896609437 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.663344359 seconds)
  done (took 94.394246846 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.375231555 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.374915986 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.373753416 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.375464725 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.375457638 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.375230532 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.375723076 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.374641862 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.375453173 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.374893817 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.375950912 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.376764896 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.375480551 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.3767766 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.374929046 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.375066134 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.375606259 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.378484864 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.374965335 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.375161834 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.376436204 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.375648589 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.377712343 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.376149787 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.375722536 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.376168643 seconds)
  done (took 37.087472371 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.38774937 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.614920337 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.781885863 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.392481502 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.385733338 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.390845327 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.459957943 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.389085748 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.390096425 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.389805384 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.536432022 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.390816862 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.418539504 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.786975118 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.388751758 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.389663088 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.389494423 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.387228575 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.618218195 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.396628922 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.477296802 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.390029722 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.459626698 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.396707302 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.407135544 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.388699045 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.392481523 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.91613036 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.39086712 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.539232534 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.124999203 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.460455662 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.871577692 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.790504329 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.12559902 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.393379711 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.390138957 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.542067465 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.389320438 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.388332811 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.45916146 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.389732708 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.791462134 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.003407118 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.409553746 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.392995429 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.931971308 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.544764728 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.619364213 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.400071387 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.817918495 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.397203494 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.3946221 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.39276692 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.619692035 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.398924431 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.391926716 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.953967896 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.413106684 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.463497089 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.397108604 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.392929052 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.630882139 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.394781044 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.621688899 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.395789814 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.399948508 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.392648591 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.795242733 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.394902218 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.024561503 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.408732518 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.395211044 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.542267528 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.62197504 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.964799766 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.397815964 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.635551575 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.888717409 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.46346822 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.397787219 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.903612158 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.467651688 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.397276929 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.396273532 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.3970523 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.395532422 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.439249167 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.464131075 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.957627527 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.018931909 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.971456741 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.482800294 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.406066649 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.394318241 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.956308836 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.411916639 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.396475819 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.790947382 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024421964 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.409832016 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.401719725 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.007540678 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.408371294 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.464462264 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.396725904 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.800405022 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.395662059 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.440141781 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.396903872 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.401594928 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.398100587 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.467788035 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.398580173 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.39664892 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.994665448 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.571348618 seconds)
  done (took 182.010791833 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.40185625 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.388555779 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.390558975 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.405987327 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.388090805 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.394513459 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.388761427 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.38870603 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.395098017 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.388032781 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.389079783 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.392913265 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.391865043 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.391353144 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.397564005 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.396859378 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.997460869 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.39061222 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.395430979 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.388779674 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.174210064 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.39206989 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.399216133 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.390407869 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.394583753 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.394977305 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.398195759 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.408163651 seconds)
  done (took 153.744842871 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.399384554 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.916764109 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.398753736 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.51886337 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.418434989 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.396625617 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.51797635 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.448845182 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.398379679 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.396981711 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.39627905 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.675355409 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.399244978 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.876669646 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.572954854 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.522919964 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.873955648 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.400219117 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.396249461 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.396807968 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.520334262 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.406040894 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.677382326 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.921933694 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.39984523 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.921721324 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.388696403 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.400566593 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.396217858 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.922671824 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.398312557 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.681026549 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.46872883 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.45328085 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.923705704 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.876242202 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.884284258 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.53742487 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.397452024 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.397987495 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.398255105 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.387691349 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.925465997 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.402209977 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.398839226 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.92230432 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.417062818 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.400958857 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.40841478 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.398040443 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.452927144 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.453998056 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.683506286 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.930076461 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.471021989 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.420657408 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.522070989 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.760437008 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.401806704 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.882512232 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.39075137 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.930643982 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.404418686 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.389329408 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.39973249 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.405868148 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.53961 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.524243893 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.88006703 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.400869199 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.878285724 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.567736931 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.401692579 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.402484607 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.403830773 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.943606226 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.889822861 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.544614213 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.52944034 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.585322484 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.392249327 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.401016403 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.39203591 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.473931979 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.402499678 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.94189032 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.887815434 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.405227831 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.404797666 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.404944116 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.403941144 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.568195736 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.940158615 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.475660438 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.885351511 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.704701869 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.691466236 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.405247914 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.460834521 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.403473763 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.692233882 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.406837523 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.458709683 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.825369326 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.693992125 seconds)
  done (took 165.204315909 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.633423393 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.543260969 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.492371951 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.509180115 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.911774702 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.96670632 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.456668729 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.52427904 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.509955177 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.641263169 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.037907106 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.494900357 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.582714531 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.473610166 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.080409143 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.469572322 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.493279431 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.538484913 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.511108204 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.3918513 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.977947896 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.682096947 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.548211076 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.268233894 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.494412634 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.141072437 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.133928669 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.918275454 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.562333326 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.490999287 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.924273241 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.523995722 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.089516987 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.01045213 seconds)
  done (took 65.367178946 seconds)
done (took 699.126473443 seconds)
SAVING RESULT...
DONE!
