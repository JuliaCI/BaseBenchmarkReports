cset: moving following pidspec: 8075
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.403337735 seconds)
loading group "string"... done (took 0.503097471 seconds)
loading group "linalg"... done (took 8.749866676 seconds)
loading group "parallel"... done (took 0.173076091 seconds)
loading group "find"... done (took 1.226528637 seconds)
loading group "tuple"... done (took 1.991339654 seconds)
loading group "dates"... done (took 1.464022186 seconds)
loading group "micro"... done (took 0.202966472 seconds)
loading group "io"... done (took 0.536733837 seconds)
loading group "scalar"... done (took 50.274233234 seconds)
loading group "sparse"... done (took 13.403279533 seconds)
loading group "broadcast"... done (took 1.258090211 seconds)
loading group "union"... done (took 9.019607258 seconds)
loading group "simd"... done (took 3.000443607 seconds)
loading group "random"... done (took 11.201439108 seconds)
loading group "problem"... done (took 2.16882717 seconds)
loading group "array"... done (took 24.551432261 seconds)
loading group "misc"... done (took 1.096720437 seconds)
loading group "sort"... done (took 3.691451968 seconds)
loading group "collection"... done (took 19.026077369 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.601078388 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129433719 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202446785 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.34061091 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.229776902 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166285324 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146241027 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.243892898 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.534675235 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202047193 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137922402 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.499267134 seconds)
done (took 6.166456997 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.252581631 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.242498774 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161979691 seconds)
  done (took 1.082090067 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076091174 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159606778 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109142716 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095905434 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093433883 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108749701 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09361848 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10869035 seconds)
  done (took 1.451817995 seconds)
done (took 3.537419283 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.498698956 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.860284555 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.503444777 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142502623 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.31098246 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.291805473 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.272280088 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.197583269 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094969916 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090762523 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172284413 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.399916281 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.381852631 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.948783658 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091680972 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094251169 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133568315 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.756609498 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08129645 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.122753591 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.482272971 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.178630979 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.100071625 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120306512 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185275384 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132655572 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.15958974 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101652359 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666452913 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131314396 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.177289979 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098334872 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158613771 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.184746552 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194287674 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110437929 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680911643 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202495416 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.089168326 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098933362 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666220061 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119552881 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.180946512 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103691865 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088479726 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179324339 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091002662 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078313455 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.110266436 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087179469 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163666004 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.457049373 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105587722 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171343675 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093168053 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.683492664 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099473879 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272393096 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127050373 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095603002 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090132344 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.0894017 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156145859 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092936227 seconds)
  done (took 19.821599436 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147166579 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164977614 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079220623 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156128535 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122670486 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080379701 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.10247627 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078600446 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126750452 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178496866 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138236046 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152004011 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092080848 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091417724 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.130919464 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249474261 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111487587 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122841437 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090882705 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089627588 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139987435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098120821 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108083918 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09263749 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17101726 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203585806 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112278649 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126507369 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092656277 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098228862 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14149033 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144260352 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091826663 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089244329 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187958936 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106429029 seconds)
  done (took 5.206814325 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196805614 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123276586 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.204812128 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159776234 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14696074 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16652679 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125133176 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26802087 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.197774032 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17906031 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113198988 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.122594868 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080420491 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081747655 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095162356 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.454258407 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147917154 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161800411 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127318735 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103502068 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082468555 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.377589569 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085676281 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094920376 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084406721 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06283435 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.185801671 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.193991556 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083353288 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.127272585 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083310291 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103581456 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115239076 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208275731 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124592354 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120343756 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101558543 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078975426 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223559061 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087989191 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094572329 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116322443 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131566215 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115345791 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094359438 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08553013 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22108889 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080520217 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115839392 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.045310244 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195230793 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.121848109 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0778738 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291443646 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118906727 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080486068 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078755831 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.809361831 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115037059 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081553286 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097007253 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082956772 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078662791 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.445845595 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097739158 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.177393884 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08505379 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155473821 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.080422961 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098030768 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086591164 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085306199 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119284513 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080413383 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078921361 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079048222 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096904417 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081861549 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.126890991 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.088014076 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084274628 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096919084 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147810397 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101101752 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116936605 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109886803 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098949038 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079536454 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127013567 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08324069 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082233265 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08330668 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.163857723 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083219618 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.101882743 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112729938 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097020892 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143026038 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080337843 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.234074268 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097852475 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125862039 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099126033 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113852435 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11609145 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081958661 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084595678 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09637197 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081048403 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146723948 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097330759 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084502256 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08153186 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107924913 seconds)
  done (took 27.752879548 seconds)
done (took 53.459373003 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.430106695 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080158463 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079992455 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097241148 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080037214 seconds)
  done (took 1.517825399 seconds)
done (took 2.244261129 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.315169339 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.185715999 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103050382 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186524046 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086180495 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191621565 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.17914567 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095532874 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202385218 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0845726 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182698584 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083848385 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10318707 seconds)
  done (took 2.751971728 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10282646 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110944471 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.118753678 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103260349 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084856457 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101020091 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116556055 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110211624 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100769512 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111056851 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084880133 seconds)
  done (took 1.868271639 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09869293 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105078402 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099639882 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115573082 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084847999 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099053198 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114947029 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108427876 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099166433 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111361696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084976943 seconds)
  done (took 1.8489485 seconds)
done (took 7.194460896 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.067186147 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.069410947 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165746252 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207674098 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346657647 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.234651967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.554601559 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.151243422 seconds)
  done (took 13.66967181 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.165218224 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.109897014 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091382528 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094493723 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09406733 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.11127397 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091189385 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09112012 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108247086 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091082945 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092906626 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.107505175 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090935403 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095683232 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.109153562 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092859221 seconds)
  done (took 2.428517504 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142262346 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140252113 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096755247 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098027868 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112311311 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099484794 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102291218 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114107937 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09535387 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09463602 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118656909 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.097634436 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096778451 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.108178081 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098884025 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116626793 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110073523 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098084862 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116860679 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114413059 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099273179 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096977016 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112650163 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098752637 seconds)
  done (took 3.39303044 seconds)
done (took 20.220247059 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149405413 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100019604 seconds)
  done (took 0.981267978 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.138441665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153802658 seconds)
  done (took 1.028544614 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112540739 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090429766 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.1359896 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10308516 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090995589 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106552101 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11812997 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106861221 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091197924 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091629168 seconds)
  done (took 1.787458576 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094221491 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096463234 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121081717 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.133174512 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114297136 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094089627 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094898597 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092237746 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112632494 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090092675 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095769595 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122910279 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096317788 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124955827 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095249781 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096447266 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114529343 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094508937 seconds)
  done (took 2.622849868 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090316026 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091702577 seconds)
  done (took 0.921843956 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092995992 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090210896 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091929827 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108352838 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090381375 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089554383 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105480427 seconds)
  done (took 1.408660401 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483467175 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.25777777 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.351101584 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107394966 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144590837 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.351100486 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145298358 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.21950103 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103323489 seconds)
  done (took 2.938576141 seconds)
done (took 12.429025288 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090529041 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222412872 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.618738105 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112417379 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089809425 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158863272 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.279579172 seconds)
done (took 2.319049317 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336282062 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141359251 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08031044 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091929111 seconds)
  done (took 1.389118767 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082346917 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099809856 seconds)
  done (took 0.929590825 seconds)
done (took 3.066135096 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089821895 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089385206 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.135685887 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088810685 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.087881249 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087924434 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.106212158 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088899236 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089229193 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.1054266 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088937055 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.088302651 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088061929 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106182919 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088935559 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088597381 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103083853 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089509332 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088735216 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088585993 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104336632 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088092956 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087951428 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10361697 seconds)
  done (took 3.054091497 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10619972 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091643967 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108451993 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093725505 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093530531 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108512309 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093665002 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090179194 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109341923 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091242084 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093229959 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108776382 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090928879 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093472452 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10527477 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.093982234 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093302586 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089999 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106403635 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093433058 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093056208 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107346258 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094732105 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09235643 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109493235 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093354528 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091320582 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106455456 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093701438 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093493707 seconds)
  done (took 3.676624024 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097968177 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086977098 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089294523 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112394232 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08815703 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090288653 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101826563 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088981752 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089842386 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088834133 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.106331646 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089966338 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086196741 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105763707 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090841967 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092522077 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112852988 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086790429 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087128676 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089530337 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108618382 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087219794 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089528946 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.105060287 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090128652 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086279072 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088536499 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105220589 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091037627 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089352649 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110100372 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092144684 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089894285 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.114096166 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.091816998 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089074552 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094350647 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102966605 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089944549 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085193505 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.102354894 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089795077 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086265828 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111851216 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089942632 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090435269 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085796352 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.105768076 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.089811961 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092526587 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.102209618 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087729402 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091999618 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089840669 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108360423 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08687962 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090815276 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.102430614 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090218961 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090011902 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.101783528 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087520517 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095015134 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089512299 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11903885 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.095464914 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085917125 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.106912086 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091232585 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094647647 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.107921851 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099980297 seconds)
  done (took 7.595081322 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101464241 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098029225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089516433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106926607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090102012 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089983336 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110773648 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090471807 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090881646 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11242562 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091282007 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090708581 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107928871 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09109683 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090371992 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092335529 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112836518 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090728266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090077487 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107835117 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091321585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094855148 seconds)
  done (took 2.887296992 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235393905 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096851122 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139290223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118564661 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10774819 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120967046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095248359 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096057319 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110316323 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100845692 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099223381 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111404429 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109311671 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114422731 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101182665 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099538831 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109740801 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100802907 seconds)
  done (took 2.822816786 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102606226 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095202271 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127532186 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092138083 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093183353 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092390673 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11412063 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111992819 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108443237 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093115663 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098939885 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110798327 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093531574 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093323457 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091263512 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109315584 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093479247 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091972984 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114733412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097590301 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09850527 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116399861 seconds)
  done (took 2.997833439 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105527943 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092311821 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124567579 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095205276 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090536954 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107261807 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098309427 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092710208 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.113878725 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092611406 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092339554 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091065187 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122519939 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092425442 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096683283 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109035761 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092715788 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091772464 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10898542 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091318829 seconds)
  done (took 2.759929546 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167831694 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121720733 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106735425 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115741631 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123685709 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10773386 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114355157 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124794526 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108279357 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133714822 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107209645 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107681309 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131434255 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113779383 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123426401 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116353238 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115343508 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132425534 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10838011 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121911335 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119803647 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10607204 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131090253 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107679094 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124309543 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10836503 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107973338 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127984412 seconds)
  done (took 4.099160048 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091700562 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091448113 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089393617 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106538201 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090656167 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08951943 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090178445 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107554576 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090496166 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089299155 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107473674 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090661335 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091023476 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089001336 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107329923 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090931783 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089200992 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106862927 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091890706 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090889964 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08932824 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107786301 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091732894 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089437038 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106796508 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.090891307 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090064984 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089021234 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108179016 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091615852 seconds)
  done (took 3.6094589 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104636788 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100217719 seconds)
  done (took 0.972252286 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099948886 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105438527 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089107158 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107646831 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098468042 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09075091 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117127423 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097495434 seconds)
  done (took 1.573242477 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.140271008 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158806866 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095484456 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101558958 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159498385 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150266578 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133250525 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095070194 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107255948 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084895522 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152565027 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084577653 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092670562 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088830504 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110272029 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099331352 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108849696 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102431503 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098543578 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092713679 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114382303 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097702629 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111414342 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10376929 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085653667 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110320405 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09631909 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102794472 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10497189 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094266051 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089443982 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090827867 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112889258 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0968561 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092813 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158266403 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09873485 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106536217 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.0929875 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096397675 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142081234 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093204749 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092912164 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107746305 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096042874 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.096170754 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113839433 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092346473 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084724851 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105119149 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092629997 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087615732 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091555969 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110197821 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092915883 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115241544 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094782412 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089362195 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104848748 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089297563 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091193207 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088068524 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112117628 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09591114 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092777071 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110151894 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091057868 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092509037 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.110836667 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092592968 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09131663 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124812588 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094115429 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096385169 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114515245 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09322683 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089492974 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11475237 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092718576 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093169646 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.112904091 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121472053 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093251748 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105587224 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089257739 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099214981 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112605239 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096708396 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084964312 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119249258 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09531331 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093871951 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.10308803 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092858418 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087874877 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.112483356 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088322197 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093603795 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090544426 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.114225778 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097606178 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090939129 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110965604 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098926504 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097291908 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109972824 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.13617113 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107300867 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089164921 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095270265 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114581798 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086827533 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091579211 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090261842 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108529448 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088429525 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096358765 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11004162 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093562852 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095172622 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111816976 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094345288 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093566685 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.108709248 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089935038 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096081741 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117506439 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095215247 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093570516 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.109385653 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093673686 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093048562 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113977984 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09097708 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097453941 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088754064 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.10951865 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093317985 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096662685 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110413942 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089344046 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0913598 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111785608 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092936518 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095128163 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111080443 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089506279 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085562556 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111851233 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089438718 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09334601 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118328212 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089421451 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.094165009 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106032972 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100989036 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089649133 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114496809 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095601411 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098099355 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114805999 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086703468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090454044 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.094489432 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112967084 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091609164 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093211552 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.110436064 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100156895 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086227261 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112477976 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085715492 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090509222 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.113857019 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094908069 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096317008 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087574858 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148542226 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105413684 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11512807 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092912025 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092711001 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.1132583 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095656017 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095928325 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09669446 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.115755327 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091407452 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090304179 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115519553 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089770497 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094026225 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108153807 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094252692 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085251548 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112638775 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085700989 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097215641 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112523828 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098602094 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097923918 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111884494 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094781504 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101631643 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105157011 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097569455 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086219224 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097252672 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.1202968 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100316026 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098128694 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111677231 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092266747 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092845809 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118724061 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094796623 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092285998 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.111701241 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088547637 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086137107 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.115676903 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096375841 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08874097 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090915063 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111446678 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096277993 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089629798 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104367294 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097511129 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094958688 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106919705 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093984696 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088644871 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108699326 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100475439 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086089838 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107119312 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096661684 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097145996 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.109967613 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093646719 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09440018 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.116580837 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096869863 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095145257 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107985512 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101677027 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09063093 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091622684 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107194579 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097047257 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086108387 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111559797 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093521011 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090048674 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106642214 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097714206 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097579682 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.116225972 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092216515 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096223862 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.116221 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099203033 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091072707 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.114820343 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090347137 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087085162 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105629061 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086754924 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095265087 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088790794 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.115207604 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092599394 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091158625 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.114448798 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097342962 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091404404 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.115873791 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105398306 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086928382 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104253039 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091858556 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092873699 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.117009626 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090727394 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093874076 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112215036 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097628701 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096391651 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106999966 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093020133 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098397859 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107514154 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10011366 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098865399 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.115619478 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090536242 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096967931 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090824498 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116232504 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089135569 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092034587 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111874639 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094780882 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088639997 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.109736889 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089652014 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08611921 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108710642 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099188914 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091300827 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.114820026 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101311152 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090662858 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.107969316 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090402794 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.09916317 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109229369 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099259928 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09513236 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10592235 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087222702 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097936861 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09199893 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.116508077 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089542921 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095408754 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116900467 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097137416 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093386198 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.118652898 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102497541 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098913617 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116432953 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087392789 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091004167 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115893365 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093671554 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.094644276 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.112463752 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089080773 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095812901 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096899851 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112984051 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092426142 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086397245 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.112224035 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10061722 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.095284815 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.114772981 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095458122 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094759193 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106537343 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097901126 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099647011 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111436759 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10071002 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094572065 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096389827 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109171997 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099577181 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093360631 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.106260153 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087353754 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090138262 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116871473 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089070905 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098515088 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.114970527 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091543742 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091824637 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.115364581 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091295596 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095773186 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097609352 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109500866 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102183601 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094330556 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109540235 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099951549 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098067389 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104792329 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093199938 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093417097 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117813362 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093420258 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099976023 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113394895 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098645773 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096370626 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116203384 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09966498 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.09883356 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087805862 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.118595772 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099040197 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095504558 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109442159 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093452948 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088237607 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110163891 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100994815 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09145263 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120996035 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100295651 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090898536 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108722042 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100234723 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09283191 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116894079 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091527189 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095598066 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105306591 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098006991 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092356114 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117456239 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091941105 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089010866 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097684142 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.117970241 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0977153 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096777043 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.117591817 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08939113 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087742891 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.113768216 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092026995 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102851823 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115012617 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094560412 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09186974 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.113416943 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096834708 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101111782 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088621223 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108784019 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09444728 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093506995 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111095599 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088596926 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096724135 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111338549 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096260254 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092108712 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.106643046 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09347265 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098632998 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110200868 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090270001 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091387955 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118282471 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094253133 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090599872 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106666637 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100384597 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096994269 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11815652 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092413429 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094070383 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109050379 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097190099 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100445425 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109928484 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095877094 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093350056 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098873651 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117877116 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089553862 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090884742 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122470438 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099216585 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095074981 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.116592225 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094010025 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100242459 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117618368 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097331946 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08756724 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.106741895 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093742033 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088382695 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.115431079 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09987481 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09306254 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109502417 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099021647 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09947183 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096635445 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.114899918 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089623412 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09984337 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109500393 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097787322 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088231472 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.1058044 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096751722 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099604978 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110722708 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095483375 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095010678 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09594302 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.108333777 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092249733 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096180575 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116895584 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100804821 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092618444 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.111009278 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097321422 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103892378 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.113491811 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094205193 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101509778 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.118434931 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095479215 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093077699 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11598032 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100739853 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097307218 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119089046 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093218692 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093954377 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.118654211 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10315697 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104670995 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111095021 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090399745 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097741653 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092101218 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10813285 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098319782 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100541675 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119455795 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095433473 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091134196 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121807516 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100522781 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094040614 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110300306 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093143722 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097831385 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111809421 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099287098 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091237862 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120463934 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100989717 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100008487 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.121450361 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090838739 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100699515 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1139125 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102518248 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095785357 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088424632 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108379639 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098955234 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100469 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.119366582 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099244587 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099429318 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117210021 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095843471 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094940229 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109343453 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102695747 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099845722 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095127429 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.115711086 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094662593 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094005716 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.114972586 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101114029 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100981898 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115144662 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105875217 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.09997946 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.111945775 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091976934 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095854794 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.11490904 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095922771 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098910036 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108871924 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091174526 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100197918 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100857862 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114430123 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10270329 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101676545 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.112937451 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098218359 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101482908 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119949033 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096806479 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095775777 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.116225619 seconds)
  done (took 60.99460224 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143341462 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102813292 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115361543 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098214717 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114829283 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1172784 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097806626 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09918882 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117296276 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106512064 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096334744 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114696329 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113435591 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134754913 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116079222 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106462646 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114933669 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098535143 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097248746 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116283446 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111230549 seconds)
  done (took 3.147762584 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115076114 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110200528 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126857696 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112845076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104238148 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12798875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108276438 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127344078 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112173832 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104878072 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130475564 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109691471 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124271417 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106281446 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104959885 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125755582 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113579235 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122257266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.110735973 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10945476 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124743385 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110359612 seconds)
  done (took 3.360339159 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129085085 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101230657 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096352478 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115271495 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101132526 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098054644 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117392361 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098940496 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105461931 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.109834873 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09030443 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092536676 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09572066 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115803713 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093362249 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097577118 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122368676 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100882506 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102711338 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114403683 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090164354 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099008515 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098114371 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.106628076 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103024704 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102122589 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.116159957 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101375552 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088853964 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100217185 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116978536 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09181307 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088011571 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.106502707 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089141918 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100565046 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.118111421 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09957769 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098341796 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088510099 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.116789257 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102797408 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089237975 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.116023229 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098604642 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091761345 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100163196 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.116775424 seconds)
  done (took 5.754051854 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128437769 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16052299 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102337633 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136401827 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132250077 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107752279 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.121170063 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135411543 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100140901 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121978763 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114183148 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.131749362 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104518099 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105333257 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122453206 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103291198 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10361807 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.119294636 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109792995 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10237755 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126528025 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105371363 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11212929 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129519579 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.334514476 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10115226 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120901957 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106307469 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.128089401 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10861871 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105646775 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123895875 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.112879865 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103596253 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122647559 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104786483 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112527243 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123255425 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103291987 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099593047 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123821419 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105637811 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103943945 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132897814 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103157126 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.1221613 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103813292 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099775601 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.130420796 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103534946 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.1078022 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.131999341 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105692183 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101716204 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124961741 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111335762 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.120333316 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102763902 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103980048 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.129074837 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101716402 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107754094 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.130021434 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103378481 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107170851 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130765825 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103610164 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102882741 seconds)
  done (took 8.940843938 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130372133 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104465388 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132796957 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113255837 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104059358 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126121169 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107188937 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.123633928 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105945743 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110298344 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124840396 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.195325954 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121463293 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111511973 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103342302 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125231024 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105310076 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104868475 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125966537 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105351503 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122663552 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11380011 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104777504 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131008774 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116539028 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100804532 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12444801 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105203084 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13218197 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106202103 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115960927 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126103561 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105379518 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132659017 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.116855749 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106108632 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.119632266 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105917287 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10610359 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125063414 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104050247 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112559865 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124995348 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101994442 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10494034 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126427492 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115031178 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.134965441 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110750911 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110170732 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125130921 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113176094 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12403166 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106230817 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112104386 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140393219 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11416062 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132696595 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106753843 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112948656 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133681651 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.119578342 seconds)
  done (took 8.117393088 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100581172 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099100276 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097549544 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116824689 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099356959 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097829367 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097478077 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118010117 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098849574 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098519691 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117353871 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099548655 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098597341 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117725563 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09925463 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099175436 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098486012 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117509893 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100112632 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09864535 seconds)
  done (took 2.905843423 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109019335 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114670392 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121187992 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107183989 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.1015563 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12592997 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102256164 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101275795 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119994948 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102217904 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109300146 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12771727 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102584875 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106584972 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130102209 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106478099 seconds)
  done (took 2.623764938 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119468774 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117380468 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.184389287 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10358114 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121978519 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110602641 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101710603 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123336194 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103340632 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10726396 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104056633 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127003268 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101577069 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102341113 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122056198 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106670933 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.1009907 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124707626 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102728501 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185189577 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106602679 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104033012 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123595423 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105334625 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103568234 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127208122 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108758662 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100860774 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123500574 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103109064 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104037791 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128064312 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102765056 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106515609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122091972 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104607502 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102390396 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101625727 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125424975 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101886996 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102733638 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123110925 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102732272 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103214563 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121002511 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103686008 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100137478 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.126427562 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104187773 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103349374 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.121775264 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110248576 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106019288 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.13034428 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109894087 seconds)
  done (took 7.083401997 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113418059 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102989663 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133347892 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100734201 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102646603 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101868466 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123855676 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104410775 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10162726 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120589228 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103326953 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103296329 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123274769 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104246179 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103499082 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12190362 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100947747 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103351526 seconds)
  done (took 2.811847225 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10763279 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101519102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105944863 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122823498 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102991532 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102004256 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122003004 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102103299 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100945274 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.122714811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103544951 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102896753 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100334151 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122370698 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102348811 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102138321 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122075476 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10195076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102290681 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121399484 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103105045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101501191 seconds)
  done (took 3.219610637 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113384065 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182486593 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107585434 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189841868 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098620513 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095386281 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128663446 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099659402 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112638476 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118986443 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09915881 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096995164 seconds)
  done (took 2.287865238 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129449761 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137527615 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122626085 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103771284 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110080958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127582677 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107834376 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105741262 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134257598 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118054607 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126973836 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113562144 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113204298 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135665244 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109564759 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131309618 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106634073 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106069005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123431404 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121358984 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105602844 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134579623 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106264169 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127569542 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107265325 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114127576 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134440361 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117685168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126190993 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115500707 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109764209 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128809595 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115447681 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136569876 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104247721 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114444143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126615 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12100676 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112038968 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136368602 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103956665 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13009857 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115412663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112456232 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135906116 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106955314 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131337184 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108123278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10750472 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146833994 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112207623 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134916692 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112472954 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114030841 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135126154 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128404834 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138579378 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115401931 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131100631 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117447255 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114542018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132037212 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114825465 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138598027 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112105133 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116128979 seconds)
  done (took 8.790701876 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141706439 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103125542 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128867872 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119186359 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135175216 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10912409 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10888634 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128111269 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108731082 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102060839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170040157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10750278 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134403282 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115299079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106998897 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128514973 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107977516 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115167489 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124827758 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127160746 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128265431 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116331461 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114303846 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137514039 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118143317 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131684488 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10809663 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106864284 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128634539 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107500615 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134054183 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10803023 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116107774 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123762321 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116566034 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106971852 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129000197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113786981 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107299742 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133102578 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115384525 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142035089 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107838144 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108166426 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13938426 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107545073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128259142 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105396427 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107408669 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125122486 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120890066 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11840848 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140461356 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11568586 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128913043 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109040167 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108325152 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127857266 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10872824 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111292401 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137053941 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107771913 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149032571 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109628286 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108258217 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13716012 seconds)
  done (took 8.786547014 seconds)
done (took 165.621659286 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.14685127 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.186138642 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.142996845 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176470469 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094953121 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127401036 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148014538 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146459043 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091969077 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117720703 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095305322 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094297861 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181536937 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094110894 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093624345 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115828537 seconds)
  done (took 2.898851819 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192093734 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.302547805 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108338838 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117511383 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099478485 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096931928 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117665555 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100701929 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098259228 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125315189 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098710405 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093704275 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126384235 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096509545 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098362119 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.118377071 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107034674 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09778242 seconds)
  done (took 3.049533014 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119147357 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140454341 seconds)
  done (took 1.117885715 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128198715 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211416118 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279325304 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166296273 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119799046 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138758242 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146680687 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131685165 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.187032761 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133633077 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110869698 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096059029 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145430377 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105898171 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13493202 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09779217 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125850849 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133941254 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113741105 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100324803 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142082334 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102671967 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104777379 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135162352 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178089904 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133858753 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103668131 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.123189019 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.103794063 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11262689 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.126539962 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116496597 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110107867 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176462567 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122944791 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.152645011 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127013042 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101517414 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113164651 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119736098 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103346327 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101504268 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135060424 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096922693 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101977585 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126796608 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103976418 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.122657695 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107772459 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106352381 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.127512585 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106384653 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.172142887 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10659771 seconds)
  done (took 7.788441969 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.851589306 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140180452 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098914913 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.997487942 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148022231 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115238182 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.848835034 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143250433 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253623845 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.875129792 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115084905 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.138008625 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233934439 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256127453 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280488916 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35659307 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.711856001 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113630694 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12740737 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162638558 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107213105 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147257235 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119525258 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519691255 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100933691 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121229622 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10851705 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111585704 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176953681 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.121254261 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105057049 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196773135 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271186119 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204637815 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122549969 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099182416 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099207549 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182766783 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267923248 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215390491 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194421113 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097096634 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119187304 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110176968 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118389785 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117773654 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178615222 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170994344 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19010859 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103951469 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1352382 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110846032 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12965822 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.154798454 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120416886 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357115967 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359855733 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098739602 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131215704 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114301202 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263095092 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122652554 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234305144 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126427598 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210182679 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121205807 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837146539 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159819452 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122497942 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108553765 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127854923 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107616147 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108174643 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190121306 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.501570094 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113422068 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104746043 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121233529 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229403935 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102214013 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099113593 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180584081 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101595765 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129703018 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114705128 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132867538 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166083289 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.2690344 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132828247 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110666029 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106680031 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134554598 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102187524 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231369402 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224341657 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172370857 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227679271 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109724896 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178527106 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160858454 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129676576 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.1862962 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109109929 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116336187 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130976372 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219773206 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155459167 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10391821 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106170735 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132056856 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137545765 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124750932 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1114985 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187429261 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.556074143 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162923087 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119468151 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106277585 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10993168 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177887041 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106297801 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260515302 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133618742 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184663928 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10968588 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097719338 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129900579 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177778661 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112366257 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109041218 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130286652 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110014247 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280281795 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219447839 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113712582 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247293566 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198217598 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108735719 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190835413 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12936301 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165395919 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132329536 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109517381 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100720069 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852277696 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116003027 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108270541 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127386496 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184887623 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122385546 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103584281 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100888703 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118591939 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809191885 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104952992 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099536423 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102163196 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130621137 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108766421 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130075275 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107615625 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176087029 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243296458 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114792655 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130724558 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100938524 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177739042 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101769009 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101142517 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125164523 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102615502 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129387858 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107507311 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104134422 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189750828 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175073424 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227467057 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.632260786 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100165202 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.121284445 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23657054 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102264583 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322688072 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130817114 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234373658 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183643248 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100055311 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358358027 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187333191 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185427362 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127084323 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168502054 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12078857 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110303103 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178517593 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10187495 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129609259 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.153775238 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138057569 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11396632 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.276503675 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123553545 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248822817 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099749055 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185699442 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103178681 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108984065 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320825003 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123751464 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119672786 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179521146 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105127878 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123201407 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.675088528 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103063365 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113717208 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130014649 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232298912 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181791585 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111096917 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110235333 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137140771 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177594174 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205442331 seconds)
  done (took 47.563941623 seconds)
done (took 63.270318304 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29484182 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253928843 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.301332769 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.208342728 seconds)
  done (took 2.012407122 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.255266415 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160573166 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.227732996 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098573981 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.238702709 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097295661 seconds)
  done (took 1.963047313 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.481781317 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.363908122 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.302034887 seconds)
  done (took 2.03318586 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251339112 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239381162 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.328012661 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.412918782 seconds)
  done (took 2.227352171 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.261232091 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.124355021 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12449366 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.202539153 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.227322807 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210027859 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128280887 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177935992 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127735472 seconds)
  done (took 2.518546165 seconds)
done (took 11.641304214 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.335814768 seconds)
    (2/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.209880845 seconds)
    (3/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.274263513 seconds)
    (4/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.331262597 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.223561004 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.146160513 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.134009546 seconds)
    (8/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109901405 seconds)
    (9/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117287226 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125859672 seconds)
    (11/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.19790977 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.141695149 seconds)
    (13/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.112885945 seconds)
    (14/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148262538 seconds)
    (15/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.214277479 seconds)
    (16/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.244830686 seconds)
    (17/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.218069112 seconds)
    (18/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.189120724 seconds)
    (19/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.182965345 seconds)
    (20/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.313370695 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126518391 seconds)
    (22/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.252441592 seconds)
    (23/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.10834453 seconds)
    (24/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.294713866 seconds)
    (25/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.185704372 seconds)
    (26/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.150085483 seconds)
    (27/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.185537102 seconds)
    (28/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.137922534 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129837271 seconds)
    (30/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168205457 seconds)
    (31/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.130944714 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12469755 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.134466637 seconds)
    (34/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.168768636 seconds)
    (35/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.245218017 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.220143248 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.192622514 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.1118322 seconds)
    (39/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075344158 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.073964482 seconds)
    (41/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.128108947 seconds)
    (42/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.287931534 seconds)
    (43/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.299357808 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.26899801 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101806774 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.092183138 seconds)
    (47/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.2182982 seconds)
    (48/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.137530408 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.132554462 seconds)
    (50/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.192237917 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075669958 seconds)
    (52/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133502386 seconds)
    (53/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.1383913 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.129369643 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128246152 seconds)
    (56/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.160075791 seconds)
    (57/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.097767723 seconds)
    (58/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18370252 seconds)
    (59/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.171807677 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.210566984 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.134483525 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.082583193 seconds)
    (63/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13200089 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.13124524 seconds)
    (65/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229150813 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124443403 seconds)
    (67/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169964341 seconds)
    (68/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.157965807 seconds)
    (69/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143128302 seconds)
    (70/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.207411177 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10323752 seconds)
    (72/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158728963 seconds)
    (73/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.075352505 seconds)
    (74/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.099168926 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.139544205 seconds)
    (76/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076282496 seconds)
    (77/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.131812088 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10691867 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122421362 seconds)
    (80/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076679392 seconds)
    (81/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.105559549 seconds)
    (82/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17124062 seconds)
    (83/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075335445 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.128517805 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103623544 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.112508782 seconds)
    (87/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.142897679 seconds)
    (88/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.107283138 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100452122 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109293185 seconds)
    (91/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07627383 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124901369 seconds)
    (93/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.075122831 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099622765 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.149069158 seconds)
    (96/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172783562 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101166922 seconds)
    (98/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.190160807 seconds)
    (99/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07453411 seconds)
    (100/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110704585 seconds)
    (101/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.192692011 seconds)
    (102/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.158399038 seconds)
    (103/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.135736773 seconds)
    (104/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124305549 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102728586 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.082139511 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.123013253 seconds)
    (108/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110328858 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102776429 seconds)
    (110/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.127615659 seconds)
    (111/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.172152906 seconds)
    (112/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.075146663 seconds)
    (113/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.076568501 seconds)
    (114/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.165929514 seconds)
    (115/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075645921 seconds)
    (116/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.158929785 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124304813 seconds)
    (118/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078238856 seconds)
    (119/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085647512 seconds)
    (120/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102669278 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.075277862 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.098111352 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.076620902 seconds)
    (124/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084202759 seconds)
    (125/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.143283927 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074037979 seconds)
    (127/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136711853 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.144491468 seconds)
    (129/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076779818 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.163173783 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184467255 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122027679 seconds)
    (133/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.099812086 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11446179 seconds)
    (135/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077107383 seconds)
    (136/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082661542 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.126955881 seconds)
    (138/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134125884 seconds)
    (139/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112872174 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133993308 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.076693458 seconds)
    (142/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076624108 seconds)
    (143/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075288715 seconds)
    (144/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075230374 seconds)
    (145/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.099662268 seconds)
    (146/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.075561443 seconds)
    (147/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109893857 seconds)
    (148/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.086713132 seconds)
    (149/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075277879 seconds)
    (150/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.123857074 seconds)
    (151/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086442526 seconds)
    (152/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074920776 seconds)
    (153/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.075239611 seconds)
    (154/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.131971688 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104035783 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103023242 seconds)
    (157/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.075311405 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.125070537 seconds)
    (159/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076052789 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103437525 seconds)
    (161/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.150852565 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102707724 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100643369 seconds)
    (164/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112078019 seconds)
    (165/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.131841626 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109971488 seconds)
    (167/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077144957 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076222176 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.126338854 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124173678 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.076309406 seconds)
    (172/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.074503809 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.100593573 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104188654 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099471877 seconds)
    (176/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075134586 seconds)
    (177/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.100800148 seconds)
    (178/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077888553 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075511864 seconds)
    (180/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075521693 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076780659 seconds)
    (182/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.082912602 seconds)
    (183/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101449887 seconds)
    (184/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.07770008 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122274302 seconds)
    (186/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075142935 seconds)
    (187/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.100993332 seconds)
    (188/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078777599 seconds)
    (189/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076613685 seconds)
    (190/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077739648 seconds)
    (191/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107919143 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.127860573 seconds)
  done (took 26.061915001 seconds)
done (took 26.958854805 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.20794312 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126378741 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110110143 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109566487 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.196473884 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117241019 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148171252 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111265253 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119282904 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132024959 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101035079 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122500867 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.131130664 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.177282877 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111369147 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127374633 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101330179 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119380106 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148649689 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127456691 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.198281473 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103871038 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119394105 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124496592 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.174379098 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126527109 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109257776 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110462501 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.144384457 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110659035 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110196244 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125198367 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126212099 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124029327 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123520509 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111594275 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101468016 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083457945 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.13385074 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112344394 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122772925 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135095882 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11129407 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102253167 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134840066 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111147294 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101704465 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136664075 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101569141 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110756745 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127479489 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127859143 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109133903 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.122947571 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101476801 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103434673 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.142705512 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103740245 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124722405 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101299463 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.127447863 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10309333 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110938186 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126214635 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110385811 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103197798 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.133272657 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113985797 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110323442 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127831459 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103019771 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11107095 seconds)
done (took 9.764695846 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107855836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14714533 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198400824 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.209395927 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128857804 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140527226 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116365456 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124656277 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137539972 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120951665 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137940154 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157045864 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.182025775 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140772655 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116604897 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112916932 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137006822 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110494943 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.20504849 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126437784 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148848245 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117923097 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128344752 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141988635 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106013738 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135823929 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134011442 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114182025 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104970764 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139728549 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126214563 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104741949 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133358564 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125239652 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146287212 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118121115 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117250119 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137058149 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107112266 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106260035 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137221015 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122978363 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106599517 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141841643 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114926413 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120839956 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.13720366 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119357549 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107554264 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137165536 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10836072 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131097301 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143109666 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122579141 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117118425 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143461178 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120343254 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119189735 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133763006 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119060869 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106472436 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130834121 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108218244 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150409318 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110584981 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120073782 seconds)
  done (took 9.509336217 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125127586 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135944243 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140905324 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117261899 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11091998 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124719974 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100896683 seconds)
  done (took 1.79929965 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103393822 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182787423 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205843106 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206948911 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179278344 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.214689015 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148290275 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103452535 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13604786 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135905595 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183279692 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.233481689 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11062295 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142080334 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184487736 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126391723 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186266626 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126434702 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116919005 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210794615 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11779054 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157098264 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11468808 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102659032 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.203141362 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103933851 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259950338 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119487025 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135871174 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116343718 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116215216 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204784514 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.204539027 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117501038 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10976537 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.20655116 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.201605308 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116586637 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.217416604 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106168663 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.203631649 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116535941 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116494985 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142341248 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117339075 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.19300563 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121725188 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116212302 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140392232 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187745358 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138723164 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182099897 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138378662 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116266 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112390438 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142664034 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124311516 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116377349 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.21400215 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118501415 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.207246781 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.207536635 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180289392 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.208397103 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124860348 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209661765 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.200562346 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116245977 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110061018 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.142529366 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18609979 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.141025009 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117465887 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.198495906 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119562871 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210269373 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183087276 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13920818 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115324328 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10564534 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141115503 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103734297 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.198846041 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116207061 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114278628 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145161547 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11672419 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115982502 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.132525768 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125951135 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115702414 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138826023 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120864846 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140081527 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119203128 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.213547821 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113359317 seconds)
  done (took 15.570677877 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105997776 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103144269 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108608251 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129320993 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104573877 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103482377 seconds)
  done (took 1.613900986 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140266071 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117007736 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1504494 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118226119 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.184173054 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.189529615 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.215833719 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111493208 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157295609 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126641762 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.212347203 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191751421 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.213782502 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119589695 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219898801 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119001226 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.218814556 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115304288 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151297992 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11505572 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118028597 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146958772 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116460592 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.205680754 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117883581 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143016072 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112518685 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125842725 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.14982092 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113959881 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119726545 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144300923 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111232903 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112159138 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.220265378 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108588638 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139629751 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119554446 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119190269 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144538887 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.215765757 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116538478 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122816092 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144830876 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113131239 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110156985 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.145312379 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111717135 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.218994445 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120869994 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119807363 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.143554925 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118479651 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120353899 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137018497 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112525718 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145547282 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.195725422 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145229177 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111592482 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117585942 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.144243641 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11383658 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121478262 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14459712 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120084572 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109633701 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143701774 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115035331 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118131907 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146270564 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119144899 seconds)
  done (took 11.120399043 seconds)
done (took 40.550193763 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.445481427 seconds)
  done (took 2.399772501 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.903615025 seconds)
  done (took 1.858488773 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.183671668 seconds)
  done (took 18.172228732 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.509944083 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583022737 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.01519369 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14950294 seconds)
  done (took 3.214739077 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.039963619 seconds)
  done (took 2.016305747 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293217599 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266809415 seconds)
  done (took 1.522966754 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.705873234 seconds)
  done (took 1.682183789 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.513462122 seconds)
  done (took 2.478159634 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.347709378 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177947296 seconds)
  done (took 1.503744987 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.599686069 seconds)
  done (took 1.580345424 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.014383636 seconds)
  done (took 19.994154833 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248175118 seconds)
  done (took 1.233792277 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287127915 seconds)
  done (took 1.271049417 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.423908778 seconds)
  done (took 4.404814633 seconds)
done (took 64.300222848 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113673921 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116530621 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.13955781 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.115162232 seconds)
  done (took 1.45821092 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121438505 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117251982 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.162988615 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118141029 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12344488 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116393046 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141227291 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119977432 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116818226 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14375397 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118221447 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117071923 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145180453 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116704899 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113911136 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143720787 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120328675 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117057966 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142018557 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119141337 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117584317 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142951401 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.119706854 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117864303 seconds)
  done (took 4.016342335 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114083704 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10817433 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108678555 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131427623 seconds)
  done (took 1.449722808 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124881262 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128200892 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150709651 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125469351 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126966002 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.151798725 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116159207 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113842358 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141694662 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125045769 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134066243 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153837427 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128241645 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118946812 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15369835 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111928234 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116657655 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153888296 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124980626 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.14998186 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119156586 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123349929 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.147064171 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127797478 seconds)
  done (took 4.152217554 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191580611 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.12796681 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171778905 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162934906 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175243738 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116555361 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144605963 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147988889 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123724156 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.142668601 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121137895 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163253278 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148405122 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120998911 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116555868 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148087717 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12953372 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121580676 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18818328 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121133142 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150208169 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128977152 seconds)
  done (took 4.154291032 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120026116 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108817915 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127268022 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109018361 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120323422 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134515631 seconds)
  done (took 1.714790278 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.1068448 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102357292 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102332962 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125802032 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107137022 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102526753 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.125433176 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103700527 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102983187 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102655622 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127172697 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101783661 seconds)
  done (took 2.297028135 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.324986223 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107311304 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.1338897 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109976548 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113462834 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10445846 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145665916 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106316389 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265689136 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103121836 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.143515719 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195188328 seconds)
  done (took 2.848860863 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198409595 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14318759 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311587278 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.362550527 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160028 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184328153 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26238666 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187189038 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20106167 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136697366 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210645072 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157145777 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176208938 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18335938 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165017314 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156564609 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192356447 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226958407 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14052254 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236998537 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152570896 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198840552 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214279158 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146363652 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136269632 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184241262 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11707908 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151544139 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164212317 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187317773 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194600402 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148448557 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161415712 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188320931 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247789943 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195019131 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266666174 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131034573 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191251961 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190089217 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255341037 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165087151 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21096687 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150420387 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127136847 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212967783 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174630715 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.181155289 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.157739082 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14389474 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20269338 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176490973 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19808746 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134305337 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301955534 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156492716 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141961369 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187991868 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186362247 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223269076 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200186476 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122919708 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199067218 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191126314 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234324321 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164396719 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161672879 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147389008 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163926826 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229306491 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202485831 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158722764 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225227998 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129455147 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193922914 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192786495 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152736069 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224884884 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169335136 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144059986 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148983062 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155967975 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12486484 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.185124106 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145526838 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212030083 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156010486 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339529558 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178702282 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179288155 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184402993 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156456145 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186612686 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145484538 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09885643 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167007515 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160547268 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179346138 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126080012 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178723259 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137486182 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123707947 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174614896 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119920718 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190316598 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131263307 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186043674 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165053851 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156141206 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174631945 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170882023 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.159995226 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190573317 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214544531 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129331959 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129563083 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239966302 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191616782 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134989808 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198194837 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194610608 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172830075 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132909012 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185697127 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215472558 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141050196 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222628885 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135795231 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158247296 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136006408 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193290385 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157497111 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.176268523 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12680755 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16195564 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214422789 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151820578 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138569906 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202669672 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132124276 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122160926 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160429225 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134898835 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.165974746 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146654851 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136187189 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178189426 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162730024 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189593868 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177772677 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133527816 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192050801 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129620735 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165130672 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171389706 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118574054 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197505926 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219064599 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128988782 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203795443 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161534643 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208077433 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19657336 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129510989 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179904954 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15313116 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119372156 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184849336 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169700468 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186328573 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184049011 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204483316 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187350978 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184630337 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147214964 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189006631 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182721339 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177460952 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142699707 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195396198 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165658145 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.145767967 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123011803 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125941424 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16101838 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128452696 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134722597 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199798558 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186244772 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202504519 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165188158 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160409941 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191118314 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122792101 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183461726 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.196983401 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136452254 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213207973 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190093547 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202151657 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139122388 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184005478 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120405883 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150301569 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132121113 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184929826 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1368537 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133620723 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164721492 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189511001 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193892004 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170610702 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215411379 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16346067 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226046318 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119527679 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.158171331 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195910316 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190103242 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180172033 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131469555 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.181098338 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213265569 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140281832 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217203277 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165646298 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202203142 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216291236 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163734352 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12741121 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172276208 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158425444 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161953948 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16142363 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17213055 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12918842 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175610763 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136717753 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137543079 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206351786 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167440104 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175236608 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.184197855 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16659035 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151422058 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139013211 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200815763 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143340224 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.128134113 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168934384 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220563362 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147326282 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179727734 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172117668 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155220699 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310382123 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209231639 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200731132 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134124255 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135092348 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194259125 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184886693 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159560772 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209034533 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140652719 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229875442 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166145162 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167478547 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129666497 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171361031 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149536587 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.161600252 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14841113 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.184458969 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140881737 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208168415 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134089485 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193571262 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172257724 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.17052344 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146933902 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16191372 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223469002 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192221219 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195811992 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165818118 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191465174 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182640236 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148325943 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126465353 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130196455 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208618533 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129130692 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200743773 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192945344 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184049832 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19584388 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185500135 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140679064 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124992832 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192717998 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146399146 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212497646 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158126121 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137543902 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213448094 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126519125 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128739609 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187265173 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291924152 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146095724 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196914692 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105477652 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286985893 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127924874 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131065969 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188044702 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169909278 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.15788294 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179620421 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19556638 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138293015 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18830037 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132998024 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203583555 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184580344 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188092043 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195551022 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14312382 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185141366 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158236923 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199691352 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1440803 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.171909539 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155882173 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218675177 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179925275 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.157826133 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167564589 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193650038 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16813444 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196708586 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136646887 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209491612 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126334926 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188136175 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137813972 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150312641 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156312532 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193768308 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128718934 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200795946 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192681548 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130329247 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127602781 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169962848 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162876583 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164282399 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128087741 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206896365 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128092804 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203184227 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203823075 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155691769 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164228225 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170027787 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128365276 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134964743 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168126354 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129591318 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173482182 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202361973 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129052624 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203267155 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186399383 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162305035 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181194939 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140336488 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.359753212 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127384721 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214261702 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148013333 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219913259 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148182233 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19937658 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165957435 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174292288 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158956087 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172115042 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217232461 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187741869 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165318752 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156140639 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141067237 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163287357 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132035899 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150967171 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19377563 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138190321 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.162745672 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163123583 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170263343 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144086911 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167260947 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198266801 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176202277 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208121851 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185993062 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135131667 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19880147 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197439203 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128616278 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188478703 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168507931 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168950528 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148624509 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.158396073 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137477831 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234152491 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124991411 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157776841 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198379931 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165648567 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19789169 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131175031 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200488409 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138284205 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199918891 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125979768 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178534326 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168404228 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159970232 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125561537 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196605762 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156508539 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.189823088 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140966869 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174476128 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218722837 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122826483 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158499383 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265943247 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184138385 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21975626 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136209826 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134424226 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17111616 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157675615 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.191176638 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168982849 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.156754948 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129914845 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.170439755 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154249124 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.164401073 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167170588 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193781634 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16036905 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209116173 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133901858 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277025695 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141136296 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192224516 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114810565 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12742298 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165041443 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133530878 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139398557 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208737203 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234894714 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160910463 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.171463577 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132974058 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.151795993 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130023063 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163819685 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175248345 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191047541 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144967861 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101685617 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165363077 seconds)
  done (took 84.78898874 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158866636 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149756485 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165325846 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220476731 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191217826 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286686774 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22635173 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241957926 seconds)
  done (took 2.712952837 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118588268 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155568953 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139505527 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141215151 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109444244 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.435596991 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.130102134 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.143362567 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158202175 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148435815 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133563242 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.524509575 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114733087 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.140511529 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120159914 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131782317 seconds)
  done (took 3.911837828 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.876340338 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.989200423 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.483144288 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.287351262 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.245740683 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.200106882 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.699895268 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.185975738 seconds)
  done (took 12.041766448 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153540544 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143875182 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.408315992 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.246235804 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.199883119 seconds)
  done (took 2.235651745 seconds)
done (took 128.758914973 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122581838 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123629485 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121760754 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150105295 seconds)
  done (took 1.588591808 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.172055376 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090143492 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091191097 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.114180743 seconds)
  done (took 1.549506247 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.419524906 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088915242 seconds)
  done (took 1.615539912 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146419313 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136077692 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.161710453 seconds)
  done (took 1.539252067 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13745272 seconds)
  done (took 1.220086032 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120701359 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.11493804 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.230445912 seconds)
  done (took 1.554032681 seconds)
done (took 10.152614822 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117864051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.921620725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429600959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131848838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709311224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.422683924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.397438846 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171705528 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172448329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135227421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130422266 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686764833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.407993572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871623543 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.363169536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.897392595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692639958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10974401 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142810386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110224742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.376745827 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133252255 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110397594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109981222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71468485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.41808849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108321429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.910923146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10891884 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112146554 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423770957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109223478 seconds)
  done (took 20.734379598 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116513144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165663201 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143864323 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110900334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111223829 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135545259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121410579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122016903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200683181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108989741 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158070005 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109737882 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115040111 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136902554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13452588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108166707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138835686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111632654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117476539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137200737 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130761343 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107419927 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137700909 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111887517 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108260969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157249224 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11054021 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120343035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136139122 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113252946 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113411489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136365395 seconds)
  done (took 5.180300758 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157657628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1747589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143834206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145363809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18271668 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111455856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220385113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147514539 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199979147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109317715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129924836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13598571 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149296102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108963223 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161957266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109279003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111408862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.136795148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117274494 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.135531533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133555161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109327078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.134750175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112900751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109954254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156550507 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111399847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121769489 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13558248 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11513112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115893667 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135906314 seconds)
  done (took 5.471932492 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124675762 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124107727 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131183684 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.15960887 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120187925 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121702331 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149677337 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119764723 seconds)
  done (took 2.142664393 seconds)
done (took 34.618241538 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134655014 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129563155 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130988614 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151056971 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.1850648 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145011802 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127068562 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116539062 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150604364 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13065104 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109430932 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.117894142 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156489058 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119977278 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.214552598 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125862764 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.220770703 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188019522 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145446771 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127246817 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117653822 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.219424027 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121598682 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.145069376 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.190732318 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111879811 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.211931435 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12062143 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147222191 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111865191 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.215094346 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122791443 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117812104 seconds)
  done (took 5.965716034 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.204543542 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.120070246 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.14653708 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118881911 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119607697 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.144217337 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.206411437 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144813633 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118382288 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116217412 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117472994 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.218049112 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.12385756 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142520332 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121082971 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108117908 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.235095699 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119649497 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109865942 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.117894432 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114009638 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117974445 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.246943149 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113799919 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117257992 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.145940077 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121473101 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122303036 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.147439934 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120344985 seconds)
  done (took 5.322972454 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124973095 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131861273 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.16145824 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18452446 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147501622 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157826167 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138501361 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132152619 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.167431924 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112440729 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127330904 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175184798 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128300462 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121638063 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144196558 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130386724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133038896 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14012588 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12026027 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128395982 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.159588121 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129215671 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134827909 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.147343846 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110955296 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117591196 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.148796942 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126974816 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119360329 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15315892 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114907764 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11538827 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.139834315 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.146579806 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113564715 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.152714911 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136751029 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122508379 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.153304281 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.143720893 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115190415 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.140846107 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137934818 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165902277 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141103703 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12462206 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122419316 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155168299 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111794607 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130934465 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.181430841 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112708357 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.130980193 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.138709058 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112054611 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120551984 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.140029174 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117257289 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126838855 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.140811407 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137855094 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.11958274 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149602545 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114701379 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123041327 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110113566 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.139299006 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116680995 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13771698 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.147874715 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150044692 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111364408 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.151734851 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126458697 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122558666 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.15267124 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114126719 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123415064 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150703086 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119330293 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124884027 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14250295 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117744229 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130068514 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.159265686 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128286908 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124222535 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.152184305 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117269649 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114539361 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154928562 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11460254 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116956732 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124906846 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.140415644 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116534844 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125273644 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.151336498 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111131219 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136912176 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.143192167 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114456726 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136990685 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.143178713 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11973371 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123376226 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.180140865 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112789857 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123538627 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.152424716 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114416913 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.11946667 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.142768427 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112978072 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130776675 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127023712 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.147484354 seconds)
  done (took 16.736293587 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.312874045 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.270499705 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208569891 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.304419064 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125116267 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.234662057 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.297469535 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.300457073 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113348539 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179554104 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163250144 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.26789543 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142525718 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143198736 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.30212806 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.352544617 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172901416 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149844212 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179019784 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126977123 seconds)
  done (took 5.461372814 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13381169 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147639078 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163094676 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140192464 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123172127 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158063982 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11413987 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135480736 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151956032 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123083087 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11449514 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.155702775 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12671182 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128706755 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156446669 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145375933 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119739585 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145925808 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136081105 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117276994 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128829371 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138562571 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121516245 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.162703081 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131710275 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.149269856 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11359624 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118542602 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11843936 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149773132 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117927758 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130463894 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147640991 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103532103 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123428752 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.155724019 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120554211 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116121217 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117466802 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.144342993 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127561001 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126420978 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.149523406 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096676813 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131186513 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107724204 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155519311 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126294606 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10370594 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.160149309 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125827024 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127874741 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.14754754 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136466923 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119226668 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.158191737 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125516463 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126483275 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.146417367 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113872777 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110764828 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.142941965 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123209845 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127227904 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123921848 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162005878 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129096454 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.139053975 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119665892 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116863985 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116742428 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.156008774 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133217773 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.149491687 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122302433 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125431926 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121427455 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.120645587 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12418608 seconds)
  done (took 11.553813848 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138784289 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12456259 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.158365099 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.149498991 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126820916 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.146018841 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125150275 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132394009 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127471946 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160199532 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129546222 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125203841 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163132299 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123483683 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122085508 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156440235 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126736535 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.177273094 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.13331774 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141681475 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.155070551 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119400929 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126155459 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.151654791 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142912068 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125034034 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167349505 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.127324752 seconds)
  done (took 5.032954699 seconds)
done (took 51.173087263 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.243981837 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.432212439 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.221229789 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.218979916 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.22134952 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.252881667 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.218770218 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.220553085 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.505547018 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.193033602 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.218666272 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.218750517 seconds)
done (took 28.286067214 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.270049448 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.751625769 seconds)
    (2/2) benchmarking "String"...
    done (took 1.502117038 seconds)
  done (took 4.367145104 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.215242137 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.20852473 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.471650544 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.208875945 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.225149847 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.222953941 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.218265426 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.225970125 seconds)
  done (took 15.893501168 seconds)
done (took 25.860913406 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.255933415 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.401680892 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.455060586 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.211388135 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.214135462 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.217886285 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.214850128 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.229102395 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.225199245 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.216664143 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.603084769 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.475348122 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.212908853 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.567721741 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.21265914 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.245043598 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.210023498 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.42444138 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.222082328 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.237025268 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.191062785 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.192999276 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.258712814 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.21028078 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.212652535 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.213846334 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.236552192 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.21521319 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.375019221 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.236233922 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.242250851 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.216792694 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.231914341 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.216744845 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.217263555 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.219654384 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.386987767 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.217483071 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.193451471 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.233042381 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.377933189 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.224193349 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.212718902 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.212871117 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.221024771 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.228750575 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.192427478 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.336626231 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.240543523 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.22022255 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.247539858 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.573530247 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.218268648 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.229701829 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.227440769 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.413776171 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.233645884 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.247124541 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.237214853 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.227661331 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.212504937 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.211174976 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.241487077 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.231507592 seconds)
  done (took 144.107063935 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.212063933 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.215297914 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.215303239 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.227628263 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.215927107 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.216569893 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.210803655 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.212619396 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.21626778 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.217174275 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.215227186 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.21187732 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.230302577 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164136615 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.220974621 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.234100395 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.216654 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.212109353 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.237909597 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.211239749 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.213467418 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.216854742 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.227181322 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.211896513 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.236900852 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.270477063 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.215106287 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.226371064 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.225872198 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.213054925 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.240933637 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.217327967 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.759673686 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.083970317 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.218057861 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.240516172 seconds)
  done (took 80.445841029 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.210881928 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.21196584 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212437665 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.239868534 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.211841193 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.715141398 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.718926617 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.180532786 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.3429545 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.346390184 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.37680107 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.215182273 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300293436 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.222822001 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.212819605 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22586797 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.235862421 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217307994 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212472337 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.708306619 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.229879971 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.354680928 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.375645236 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.225795941 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238463012 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.600100529 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.212594646 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213385832 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24002584 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.529236211 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.255627354 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211348057 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.479921245 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.020062436 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317169142 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210223537 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239078419 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.209180726 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483059159 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211308389 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212828685 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.213371133 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.763421714 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.215547565 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.701591061 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.217619791 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.063222179 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.210496643 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210337721 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.006326186 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.711858802 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.214817082 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209852131 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21211484 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.211415187 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210619897 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.237974266 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.99948775 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299774086 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.210740415 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.214157206 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238144166 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210415431 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.297226354 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213797584 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.643961468 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.268063354 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.307039149 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.688640682 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214033413 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299557569 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323085738 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.211093488 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.209561056 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210518225 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209571781 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.315364588 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.210015503 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.824051438 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.20950925 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.369233185 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223456412 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.278469289 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30566815 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.210971326 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.445504372 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.215523585 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.211646631 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.827885376 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300516681 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209868836 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.210936042 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211046542 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21155106 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.210183853 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.827010338 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.689282629 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.350288911 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215962302 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.734612805 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215119004 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.003941179 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.680804497 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.770504969 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.216120134 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31577684 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.373935 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225456611 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.214187463 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.269187377 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217045833 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.266799507 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.217468163 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.608658975 seconds)
  done (took 370.803619014 seconds)
done (took 596.471757167 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.080754903 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.039112221 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.176329172 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.047583663 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.031095375 seconds)
  done (took 11.489822799 seconds)
done (took 12.604169361 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.383542132 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384262356 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266609952 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38862617 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241803345 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400005291 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368380305 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.230614766 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.312116659 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.28666202 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313535958 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260515308 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242144855 seconds)
  done (took 18.19310578 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.481537893 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.229107716 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2805935 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.470113269 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261173608 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486363631 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.513930917 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.226954496 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.366897557 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236210597 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23612718 seconds)
  done (took 17.90696486 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.472510202 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.226184023 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28365615 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.466618177 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.262138047 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.475030214 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.521895764 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.228049648 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.36633595 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235849631 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234551789 seconds)
  done (took 17.888084972 seconds)
done (took 55.10606236 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.250350075 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.30695421 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.247479262 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.235281508 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.231538774 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232036492 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.236936098 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232156045 seconds)
  done (took 11.089167654 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229769036 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228315905 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.229314308 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.228452052 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.231834391 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.230439956 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22979462 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.231775708 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.232066946 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.229696033 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.230439611 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.231857076 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.231446581 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.229983451 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.231017359 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.231370055 seconds)
  done (took 20.806666876 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23421204 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.229424765 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.232053009 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.231947561 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.232202777 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.23252074 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.231925516 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.231125642 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.230660673 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.228905195 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.231676426 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.232232934 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.231597607 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.232909651 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.233177651 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.235054525 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.232892674 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.232599747 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.236153444 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.23205842 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.233080483 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.2340145 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.234121637 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.233980338 seconds)
  done (took 30.699101412 seconds)
done (took 63.712235365 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.219061485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.22866157 seconds)
  done (took 5.567067069 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.290738512 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.293273292 seconds)
  done (took 3.705128468 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.234363198 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.232310925 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.233999398 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.234478958 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.234823209 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.23256541 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.234830715 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.232776126 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.233889093 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.233760179 seconds)
  done (took 13.458113841 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.234651934 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.234994002 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.233134699 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.233968443 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.233887649 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.234485819 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.233591977 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234166665 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.234044844 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.235179644 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.233878524 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.232427145 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.234475192 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.234379934 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.235760879 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.234815944 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.234764525 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.23282578 seconds)
  done (took 23.336342603 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.249459758 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.252391358 seconds)
  done (took 3.622707362 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.36249044 seconds)
    (2/7) benchmarking "second"...
    done (took 1.277180171 seconds)
    (3/7) benchmarking "month"...
    done (took 1.34011708 seconds)
    (4/7) benchmarking "year"...
    done (took 1.331323026 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.276261897 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.256151146 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.277694588 seconds)
  done (took 10.242188286 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.237898945 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.439871677 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.564300488 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.80940286 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.236038378 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.23976731 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.123188141 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.240433186 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.241716967 seconds)
  done (took 14.254253625 seconds)
done (took 75.30790639 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.220112179 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.262004331 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.25140828 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.237724916 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.579805603 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.245408512 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.226727079 seconds)
done (took 16.146930323 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.203954133 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.210465706 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.205991711 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.196399426 seconds)
  done (took 9.940218269 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.182070389 seconds)
    (2/2) benchmarking "read"...
    done (took 1.547483603 seconds)
  done (took 4.851972417 seconds)
done (took 15.915310188 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237603213 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.236671239 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.236642901 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.236004039 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.235587628 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.237700264 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.237414169 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.236052244 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.239018995 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.238026696 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.236114034 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.235201202 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.238999831 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236834449 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238134088 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237459587 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236594898 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.238310273 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237967386 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235902425 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237088233 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.238319743 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.23919432 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.237115162 seconds)
  done (took 30.818238013 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.238969439 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.239229842 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.237738323 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.238302054 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.239113302 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240264993 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.23965429 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.239524857 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.239958114 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.237204334 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239504077 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.239628505 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.239176456 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.239935043 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237751518 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.239667925 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240639538 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238728454 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238375882 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.239547657 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.238434847 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238648517 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.241690822 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240294756 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.239131908 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239973005 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.240606298 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.241352302 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240851357 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.238647039 seconds)
  done (took 38.307096675 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.242707858 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.242169122 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.240565849 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.240471788 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.240930174 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.241526327 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.24254582 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.240674455 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.240848885 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241571797 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.240317913 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.241030763 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.239068086 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.240345815 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.240664158 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.240239448 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.241418309 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.241808115 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.241866098 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.240384086 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.240996584 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.242064231 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.242512276 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.240502081 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.243263175 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.242792898 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.241390073 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.243440472 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.241548716 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.243199369 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.241684406 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242542325 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.240644349 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.241518428 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.24260517 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.239682322 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.242473291 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.243049605 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.242426759 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.241580601 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.241009037 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.242837344 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.24226336 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.241411096 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.242734181 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.241171815 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.243378182 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.243416775 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.242853614 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.243399718 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.244188276 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.242445723 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.243811063 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.243791136 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244174846 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.242177188 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.24202175 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.24381183 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.242259964 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.242959332 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.243604985 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.243615127 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.243842959 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.243553719 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.243711766 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.243226157 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.242994424 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.243022091 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.244792806 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.244340338 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.24174272 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.243759521 seconds)
  done (took 90.567155319 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.245354631 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244321584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.245179879 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.245569063 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244871992 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243980206 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243480201 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245243962 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243429023 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.245133034 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243746845 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245030481 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243296678 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245587592 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246296524 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.245820969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.244279766 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246220261 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.244584223 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.246217254 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24563763 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.245496987 seconds)
  done (took 28.519001698 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244832024 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244487483 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.247352338 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248300244 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246621476 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246908009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.244753878 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245677843 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246613245 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245826299 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245211676 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245758882 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247936388 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246871392 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245853472 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246712201 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24871622 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246041158 seconds)
  done (took 23.564795491 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246440566 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.246495241 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.247848937 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247375302 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.247300048 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247964425 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246034043 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249897867 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245107159 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247155427 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247375627 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246648168 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.24712851 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24779513 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248224565 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24771125 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.247915084 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247973194 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247369759 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249462095 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248271996 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248836051 seconds)
  done (took 28.576648192 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247472552 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.247565946 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.248060435 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247376486 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248433129 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.248196443 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249258516 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.247743796 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.249568813 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.247229541 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249335368 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.24958336 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.252331747 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.250060397 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248126189 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247949628 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.247768259 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250452146 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248384176 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24949222 seconds)
  done (took 26.10711667 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249715406 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250174119 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247694537 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249175069 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250324469 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.250099655 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249785824 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.249170428 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241567203 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242711484 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240909492 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240843622 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241636229 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240601737 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241627254 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243926347 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235374944 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233826245 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235042166 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234035537 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235297395 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235878949 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236229341 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234873256 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.227891624 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227724247 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229345743 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231170063 seconds)
  done (took 35.861406184 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228740202 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228852668 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.23033345 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.2271417 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.223759693 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222982171 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223429325 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.225047722 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225713951 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223596075 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224983727 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.222627548 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219337007 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.221040388 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219728629 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.221164429 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221710453 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220331488 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220470324 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220145456 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.217410531 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216252783 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.215813763 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216734194 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218241865 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.217769053 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215157661 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217872742 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213476632 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.212369468 seconds)
  done (took 37.750156842 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.231222947 seconds)
    (2/2) benchmarking "in"...
    done (took 1.233444801 seconds)
  done (took 3.568311577 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.213229152 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214551008 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.212226667 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.210171916 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.211483595 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21148454 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.212051519 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212187046 seconds)
  done (took 10.799883301 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.205136772 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.211775675 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.209790758 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.210662225 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.211863971 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.201741009 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210062687 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.213800448 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.203345225 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.20495564 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.202882356 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.200694585 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.204717988 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203525965 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.203029139 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.205804406 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.213520049 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.211025825 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.209924363 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.207438756 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209167228 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.202217444 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.204315727 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.21162523 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.199420245 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.208085189 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.209153102 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.212226317 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.200713183 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.205938452 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.204596565 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.210735679 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.208737043 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.209834261 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.209062945 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.210276912 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.208381647 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209072351 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.209545264 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215090508 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210214946 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.209124096 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.203404333 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.209346035 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.206634541 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.212727731 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.209082843 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.209344773 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.201338361 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.204229131 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.210527435 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.201301889 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.210757337 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.207261499 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.209516418 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212538958 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.216357654 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.200877765 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.203226615 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.208610113 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.215298186 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.207601937 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.205522912 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.210776349 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.203311542 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.206112065 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210573084 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.212612119 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.203373839 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.20295906 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.201399488 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.211689256 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.206020602 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.206270021 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202083457 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.203039609 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.192614622 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.202868206 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.202317224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.203389214 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.204539392 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.201605502 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197789917 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.197848364 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.195400608 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.202108285 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.200264804 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.198260929 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.190789931 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.20081856 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.20825794 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.197392596 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.191922112 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.192991307 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.198990065 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.199918676 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.192465364 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.196184151 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.203773979 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.200520907 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.199674938 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192748439 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.199785903 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.204512137 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202192244 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.199878247 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.207948484 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.193779121 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.204254631 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.209041213 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.199380471 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.191350117 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.198841319 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.204851412 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.195379958 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.1988541 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.208595549 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.197059613 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.205854878 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.202300289 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.197707538 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.2039886 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.207660025 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.202368122 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.19453476 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.20568763 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.199720655 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.199028409 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.210286781 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.203007276 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.201677015 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.197232368 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.207303039 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.196220074 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.205572443 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.195287375 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.204072681 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.203057872 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.202640076 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.199038461 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.20179573 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.199177266 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.201196838 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.204210327 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.209911416 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.197545905 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.208611636 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.203456123 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.200425902 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.204947856 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.207600083 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203186898 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.195975951 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.207084811 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.194142028 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.20473368 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.195228652 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.207474987 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.204069413 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.201523874 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.203035233 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.195149468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.197834718 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.207583406 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.203050169 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.203756674 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.206284321 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.201323157 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.203399306 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.194972634 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.205527554 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.197173388 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.197777837 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.206384043 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.204615725 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.205005015 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.202138475 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212202236 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.205594688 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.205041169 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.197434379 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.203003166 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.208860743 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.20534327 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.212147376 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.204239434 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.204021687 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.197669484 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.200372969 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.207130545 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.19824679 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.207153902 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.210945846 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.211739579 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.199418755 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.208228579 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.198395 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.20622774 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.205817423 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.215041971 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.204598882 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.205978444 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.19854354 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.208198048 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.20004077 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.210113099 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.196249418 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.209997296 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.205936524 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.206123725 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.205036686 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.199423177 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.202418673 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.211009709 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.206271164 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206200073 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.199775637 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.210523349 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.197681065 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.202590882 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.209112531 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.205923915 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.208961428 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.214871927 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.204360241 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.211238629 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.20678888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.201970299 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.206745457 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202899589 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.204576472 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.208211831 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.206299551 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.203671558 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.208111377 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.202862363 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.195996835 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.201425965 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.208834193 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.203005594 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.195769122 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.205389062 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.204428898 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.198268319 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.199439666 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.192367804 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203332805 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.202309297 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.207815161 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.189820464 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.199609603 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.195874349 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.20234761 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.195431563 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.201255089 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.196307213 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.203914952 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210243958 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.201431414 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194078213 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.202006997 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.200980476 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.20003865 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191367499 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.203223357 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.199933422 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.199998693 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.197103519 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.197638737 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.200532189 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.192262143 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.202034472 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.192032783 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.204862409 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.218844052 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.202559312 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.205489713 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.203682683 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.204440405 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.204116361 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.195611176 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.197569622 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.197760947 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.197867333 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.19516017 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.206540541 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.197614341 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.204877764 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.203007116 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.204441526 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.199810164 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.201136554 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.194650299 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.208090058 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.199537039 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.202831687 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.197460356 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.202223896 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.198118548 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.20289558 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.202946223 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.196369838 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.207432746 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.203817776 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.200474522 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.199573764 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.199659464 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.194821216 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.20079297 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.207012898 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.192456608 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.206494535 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.19540459 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.199245712 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.197729988 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.206234241 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.212707644 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.19844387 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.205837429 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.203180768 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.197200286 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.19971142 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.205734008 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206934044 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.214424221 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.195988966 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.207539187 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.203555754 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.205022912 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.205828962 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.201857738 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.20724456 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.204095919 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210100237 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.206127792 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.201585326 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.206794036 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.215684626 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.205433939 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.205791959 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.197338897 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.20597003 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.21195324 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.199095708 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.201752232 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.204488121 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.206046383 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.20358269 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.206435463 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.207629691 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.204359807 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.208851639 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.210630371 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.208277108 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.205718077 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.210467604 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.219245374 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.210021872 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.215283811 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.201944817 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.21280077 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.207051761 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.202785245 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.203652699 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.204217761 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.210040711 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.198585978 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.211515212 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.208098762 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.204194169 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.21159067 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.213862627 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.196746734 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206753802 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.216332471 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.200770466 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210682656 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.206992785 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.203366631 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.211240535 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.204780243 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.199162396 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.204094838 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.20274708 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.211988639 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.199481485 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.210617236 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.203054478 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212418769 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.208943728 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.207593709 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.210035331 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.208960945 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.203406353 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.21281619 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.211936296 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.220841897 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.203232601 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.207734159 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.205870747 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.214844541 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.219088188 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.202846319 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212837388 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.212643686 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.201840014 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.206137798 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.214190275 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200745839 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.211850524 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.201920158 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.203731204 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.202345953 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.209299941 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.213525705 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.21196738 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.203492994 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.202997627 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.213923606 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.20941942 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.207532825 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.206387894 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.217377679 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.200446096 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.202724577 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.210938778 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.200795871 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.213076739 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.203266814 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.205467662 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.205053027 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.211950376 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.210619913 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.21095227 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.203906567 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.2021543 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.214762101 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.217498453 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.205460021 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.208129988 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.209866832 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.204145915 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.209406181 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.20659187 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.206249668 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.204961007 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.213735299 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.206388405 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.208745422 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.207289508 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210323564 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.217175485 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.218705486 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.207222625 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.215351718 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.220983533 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22029578 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.205730661 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.206312477 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.206818001 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.212832324 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.213588998 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.20266261 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.218315313 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.220146251 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.214609104 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208866205 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.214231801 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.206704564 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.217637662 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.213062551 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.20868327 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.218343519 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.211381673 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.219685732 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.211874409 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.213281851 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.205516921 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.205197643 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.206101517 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.206019416 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.214490119 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.213069121 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.21645991 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.211533213 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218095082 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.214093307 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.211782768 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.213796958 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.206720158 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.213760313 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.207112423 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.213399965 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.216352174 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.2077828 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.212423693 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212921824 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.204455929 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.211366863 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.218462198 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.213769062 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.20571391 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.211413254 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.220102989 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226963232 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.216487457 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208634743 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.214493952 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.218138038 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.219083603 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.217986067 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.210088348 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.224581948 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.228221841 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210528061 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.209948033 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.220435485 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.227977319 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.216916928 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.21536547 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.211713876 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.212371477 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.215542824 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.216956578 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.218156374 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.218655152 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.213663022 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.219669021 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.211950509 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.214178288 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.219806951 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228614599 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.212736623 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.211081017 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.224876886 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.227189628 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213193845 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226921862 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.22736005 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.215362096 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.220095111 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.209961824 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.221887366 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.211216408 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.226547941 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.214189811 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216264352 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.216064603 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.208353288 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219143031 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.227359566 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.225183714 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.216883853 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.209860359 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.2106043 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.217253743 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.218419563 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.220335051 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.214519408 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.216877184 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.215057075 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.212209924 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228355348 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.232055723 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.223745268 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.218765105 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.220367614 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.220256011 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.222715046 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216297361 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.220298437 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.218796796 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.219781403 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.214251159 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228040713 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.217024274 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.212288322 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.215005341 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212870396 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.22202397 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.225779523 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236739597 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.223601224 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.224729073 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.218373845 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.220310341 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.21821077 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220164844 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219570626 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.213233096 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.217157883 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.21921355 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.224890906 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.223482762 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.21134735 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.22489521 seconds)
  done (took 720.71887521 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222148407 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219613266 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.223608386 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223104368 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219654383 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218832351 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220449109 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223225892 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.223730933 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.219969548 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.223988324 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220897373 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220458572 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222339949 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225758969 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221819211 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225938777 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219630202 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225138608 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219212867 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225374459 seconds)
  done (took 26.778055054 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.220515165 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.224925572 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220867335 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.22387152 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224252863 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220237861 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223405687 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222329054 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223104534 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221391037 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.222805113 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224004918 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.223461417 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.223401457 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225843213 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224280206 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219648105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226500838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.219630599 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223385669 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22550897 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222123383 seconds)
  done (took 28.015384729 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.218793552 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.22283422 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.21539863 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.225627555 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.222659936 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.224565552 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.222041776 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.224515665 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.224338045 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.218002934 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.219056435 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.216637731 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.220959977 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.228435105 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.220395846 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.229909647 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.22116741 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.223603787 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.220825718 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.222003236 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.227519458 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.236020137 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.225037091 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.216321301 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.227220037 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.226163802 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.226842079 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.225463139 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.216174315 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.22884703 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.225068236 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.214883077 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.225837783 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.22600774 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.220031895 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.227945247 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.226287738 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.22718585 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.223496711 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.22360813 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.236497473 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.229708734 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.228710286 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.241829782 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.223300021 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.219878718 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.229786952 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.227493376 seconds)
  done (took 59.884996274 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.227428861 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.227867469 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.227978688 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.22724081 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.228512027 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.224118879 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.226350986 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.228247399 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.226325969 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.226821425 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.229741419 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.227648505 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.227864364 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.228103451 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.230150753 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.229900181 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.228678697 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.229903205 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.22985444 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.231005185 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.228679879 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.230993058 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.22810963 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.230302355 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.229189409 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.227603526 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.230447024 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.229707871 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.226498067 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.230910986 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.229780378 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.231711306 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.230451298 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.232756226 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.232987531 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.231715702 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.229446945 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.228811256 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.23259622 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.229018009 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.231797509 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.231819909 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.232255874 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.231497357 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.233677483 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.230076789 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.230566065 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.231356285 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.232723826 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.230333432 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.233787543 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.228358139 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.230997765 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.228103567 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.232557908 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.231950043 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.230684954 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.233145397 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.231990152 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.232850302 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.234116653 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.232663 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.230895028 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.230962269 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.232574717 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.231754896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.232354215 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.232936994 seconds)
  done (took 84.772981867 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231167603 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.233189749 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233662753 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237016348 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23376276 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.233895064 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234060833 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.230925419 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.234721646 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233674558 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234179545 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.232025332 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.23367708 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.234596924 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.232880581 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234525136 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.235830001 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234607816 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233466486 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233599381 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.234654715 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.235228183 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.234731297 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.234348102 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236848847 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.234217984 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234847775 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.235001965 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233703617 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.235237983 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234202142 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.236164995 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.235260258 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.233339363 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.232984532 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.233890724 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.235494278 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230565388 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.2355345 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.2318652 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.234946513 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234619911 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235847364 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.238121427 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23670792 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.236522334 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.235755282 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.235183747 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.236416178 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237746167 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.237263685 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235216497 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232030441 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237372821 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.236074198 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.236866697 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233840953 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236301363 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238696133 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.238135498 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235460795 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.235469883 seconds)
  done (took 77.679888088 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238516548 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236058779 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.241678774 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.23917757 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238598633 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236897041 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238672935 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.239810852 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238140571 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.237354875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240404516 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239682331 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24000284 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240480373 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23886615 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237369941 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239207279 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238434901 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237140149 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235803231 seconds)
  done (took 25.897019615 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.23823824 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.238923084 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.237732997 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.239707292 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.241298346 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.238378509 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.239981127 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237857974 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240161593 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237365361 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.241194071 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23631751 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239289434 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.239278264 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.242535397 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.243269883 seconds)
  done (took 20.959455663 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.239382285 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.241377514 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.239443215 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.240181153 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.239480205 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.241752155 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.242271581 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.239475291 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.241743961 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.24173396 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.241241064 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.240479843 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.241207015 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.238379033 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.243409712 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.240040812 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.240717533 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.244359084 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.240189104 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.240562168 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.244439403 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.236318655 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.239565628 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.238214515 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.242135183 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.241379803 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.24371067 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.24044265 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.243072755 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.241647054 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.240441985 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.241993366 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.242870704 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.240169244 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.240727085 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.240553136 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.238801173 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.239846122 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.241987047 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.238948827 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.243488731 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.242931645 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.242382823 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.245823066 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.242494155 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.240020606 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.244912051 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.244642091 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.243777541 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.244822217 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.237841085 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.245635042 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.245389959 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.24766454 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.243860528 seconds)
  done (took 69.420693171 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241784531 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.242842171 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247164175 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.245338695 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.242779375 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.245470936 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.245305955 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.24613901 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242968662 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.240701252 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245103235 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.247996178 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241831591 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24779834 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.242946215 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244995346 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24528257 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.247495107 seconds)
  done (took 23.534866497 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.242585067 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.247639016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.242500086 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.242957903 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.244287787 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247412805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245786456 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.245562847 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243132848 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.248147531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240453432 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.246287096 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244908287 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.247032806 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247109505 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244704642 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.243990006 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248172307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244960041 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24647191 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247399148 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248973536 seconds)
  done (took 28.531496181 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.234673663 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.235156581 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.234781205 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.25008107 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.243611783 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.236780333 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.234204979 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.237807624 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.25156242 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.259024469 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.254436249 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.242129682 seconds)
  done (took 16.048965666 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246653536 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244100748 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248278703 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246951234 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247351618 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247957166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247816197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245303669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247344269 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248125673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244712368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24734781 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246802774 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247857549 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244600134 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247719272 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248469696 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244213334 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249426158 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247708721 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245884536 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247181633 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248127232 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247045224 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244805983 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249044319 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250448133 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247958235 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246824617 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246648757 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249245866 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250432758 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252833537 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248111684 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246837582 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247867035 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247269879 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249875338 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250169555 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248114789 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245939807 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250750796 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250448702 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249715516 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249220053 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248574268 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246934922 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249427733 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248224001 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24786357 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250024434 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250203376 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24949057 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24856145 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249184417 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249294237 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250674269 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249742316 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251763648 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252080471 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250175473 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25000675 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250228311 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249829531 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250782776 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247960561 seconds)
  done (took 83.526320678 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249612073 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250635164 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247742654 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251068056 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250332192 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251368118 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250754021 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250692834 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251700457 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249539951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250419317 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250180122 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253135648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251064802 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251173235 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252365737 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25153725 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251871032 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251278004 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252491974 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251556532 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252509903 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25514878 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249955782 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250840555 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250754629 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252553398 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251607623 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253418837 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251786571 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252837003 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251699533 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247604065 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.253319317 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252280328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251096722 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25019709 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252065858 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252481273 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251645349 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250413479 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251320399 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252399168 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25243353 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251359907 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254693322 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251806144 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248854437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252833294 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253351375 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25384825 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251880917 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254585648 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25220479 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253779492 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254355588 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254555802 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254610403 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252408057 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252152092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255237717 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252339168 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252601334 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256304217 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252940729 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255769753 seconds)
  done (took 83.772072148 seconds)
done (took 1705.105151486 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.410408242 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.365811174 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.245535316 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.258588188 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.24092719 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.241984557 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.253527421 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.243109803 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.243112784 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.244544089 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.242068609 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.432579782 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.280897751 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.242789514 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.244006886 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.340320154 seconds)
  done (took 25.672628686 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.26598373 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.260552511 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.359017909 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.255841384 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.279754654 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.431050234 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.311020864 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.259880848 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.409793782 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.277928817 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.247454137 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.291382291 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.258408961 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.257770861 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.275920983 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.430317386 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.50298467 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.248314506 seconds)
  done (took 27.762649562 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.655389706 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.261368532 seconds)
  done (took 5.065091552 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.274771984 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.256730804 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.259079639 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.254845034 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.251209621 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.246036286 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.254841885 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.257432302 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.258251662 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.371304725 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.26219211 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.270515166 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.255574028 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.259014348 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.264291063 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.302762258 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.417582293 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.263870763 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.267127882 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.267045924 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.253488936 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.350642767 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.29519182 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.269163775 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.373754173 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.249949306 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.25757141 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.263844064 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.370359821 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.265069259 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.258864664 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.258970872 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.261274197 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.167029723 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.785599706 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.250959461 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.280399876 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.267133279 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.267918851 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.40802944 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.264637519 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.26243091 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.254029295 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.781795825 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.358404381 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.372682753 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.251816725 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.259714463 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.264151297 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.323404854 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.259422459 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.266000818 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.318663202 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.024311954 seconds)
  done (took 81.084841404 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.308531503 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.253814946 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.437175121 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.270467966 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.252958162 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.252081437 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.253346659 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.515019629 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.302742949 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.250763738 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.555555648 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.861313021 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.258439478 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.321875369 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.289098816 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.312248587 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.269187649 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.25262631 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.257790217 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.258529687 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810213841 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.254238262 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.24811249 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.344253578 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.293126239 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771030492 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.256722785 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.254272131 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.277519865 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.253802901 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.819989251 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.265125321 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.303575867 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.253251078 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.531038034 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.615721438 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.584647551 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.264229939 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.293884325 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.25412871 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.278276389 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758308261 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.611670809 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.254668554 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.253049955 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757269461 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.25217041 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.262360347 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.255185134 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522795732 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.25396376 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.257506148 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.253457605 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.259924621 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.253835615 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.318621292 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.317695918 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.772424534 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.252377488 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.255635963 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.262291598 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.254659568 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.25745091 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.261711313 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.256650022 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.613933995 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.517071448 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.262092856 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.608016171 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.816411573 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.266981587 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.884210742 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.256401926 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.274816066 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.307481066 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.257740678 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.257010351 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767257551 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.264370498 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.257711838 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.588482719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.258063123 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.552834575 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.275721994 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.260810576 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832501214 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.269383121 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.299333514 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.256469804 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.252652622 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.273247116 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.261248612 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.538626252 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.306235252 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.256243813 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.258237514 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.288847906 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.257394795 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.274814734 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.266670304 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.882608798 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.262737537 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.260736669 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.275049496 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.261068534 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.275015467 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.255839142 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.25943043 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541121197 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.256967524 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.263707703 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.262722964 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.258467695 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.265924564 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.356155057 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.257764846 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.549818584 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.255829785 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.260757951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.262664073 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.259847766 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.280352255 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.258562002 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.260096229 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.260551269 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.552774739 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.276800633 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.257649021 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.261289614 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.259175789 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.274599717 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.264195071 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.314595034 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.266800191 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093159777 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.269371204 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.27687785 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.259477278 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.264073336 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.270452236 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.271549231 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.264470754 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55878912 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.5390247 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.512727597 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.262052245 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.261944482 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.080183486 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.275351381 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444821613 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.283170192 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.260557793 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543431068 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.490780608 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.258589376 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.259667383 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.259691015 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.537887641 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.264726528 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586250296 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854378382 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.26566789 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.270190952 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.090968778 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.069783862 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.262685525 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.263229864 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.548739244 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.275835316 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.26119841 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.26408011 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.263899637 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.261883783 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.266931345 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.274053012 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.259906292 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.261810781 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.556862156 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.458159672 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.27907741 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.271087915 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799125397 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.289567337 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.263665014 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.266917795 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.265079979 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.264838164 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.319303192 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.269451732 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.270098839 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.26443637 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.268449801 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806009889 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.265042 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.279597284 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456122746 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006004415 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.264369807 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.266479313 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.264004389 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.320024747 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808865092 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.30809481 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.55705792 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.271790757 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.300839512 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265688127 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.276299417 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812478304 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.270755176 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.283660853 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.99443785 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.268545885 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.74538989 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.26400445 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.261816906 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908041441 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.269897145 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.264292787 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.264056656 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.264277067 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.598424041 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.265251904 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.314242215 seconds)
  done (took 482.079770583 seconds)
done (took 622.80207893 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.270978841 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.266981547 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.247176368 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.265983778 seconds)
  done (took 10.212451125 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.286101092 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.277578353 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.284925755 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.277571072 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.285577511 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.275530555 seconds)
  done (took 8.851239654 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.267616432 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.26767684 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.270285008 seconds)
  done (took 7.969795395 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.483110902 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.291542988 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.60794426 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.281461761 seconds)
  done (took 8.829269435 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.285118684 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.286071996 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.286451477 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.285500864 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.290162019 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.288717543 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.288197266 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.286768983 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.284588538 seconds)
  done (took 12.746202822 seconds)
done (took 49.770719765 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.000281557 seconds)
    (2/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.416412417 seconds)
    (3/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.445200487 seconds)
    (4/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.272260718 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.340788659 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.373170283 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.309392299 seconds)
    (8/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.303822705 seconds)
    (9/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.294492741 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.372075404 seconds)
    (11/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.007709548 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.298301827 seconds)
    (13/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.30634555 seconds)
    (14/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.373053489 seconds)
    (15/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.345200005 seconds)
    (16/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.972532035 seconds)
    (17/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.250236811 seconds)
    (18/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.381995512 seconds)
    (19/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.029453327 seconds)
    (20/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.252579136 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.368630096 seconds)
    (22/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.251549074 seconds)
    (23/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.30785373 seconds)
    (24/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.508720352 seconds)
    (25/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.100168709 seconds)
    (26/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.350858095 seconds)
    (27/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.119237911 seconds)
    (28/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.307513396 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.377042487 seconds)
    (30/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.141244794 seconds)
    (31/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.308700249 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.359242541 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.273257936 seconds)
    (34/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.496161753 seconds)
    (35/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.301603343 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.505873928 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.962766902 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.342310504 seconds)
    (39/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.030850322 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.37293034 seconds)
    (41/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.451778993 seconds)
    (42/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.071330295 seconds)
    (43/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.264290547 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.388682089 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.509435081 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.418847063 seconds)
    (47/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.250888549 seconds)
    (48/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.501140721 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.307873619 seconds)
    (50/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.505648038 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.246852068 seconds)
    (52/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.305607252 seconds)
    (53/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.38664009 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.419211251 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.386263416 seconds)
    (56/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.24964305 seconds)
    (57/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.223287241 seconds)
    (58/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.238957774 seconds)
    (59/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.251187107 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.249331143 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.396620003 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.439721355 seconds)
    (63/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.309498075 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.368894631 seconds)
    (65/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.273890776 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.369293634 seconds)
    (67/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.417173271 seconds)
    (68/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.341161741 seconds)
    (69/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.250264788 seconds)
    (70/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.359536014 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.402733636 seconds)
    (72/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.523411309 seconds)
    (73/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.251597352 seconds)
    (74/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.250920417 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.356308262 seconds)
    (76/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.267860561 seconds)
    (77/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.306391992 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.385177753 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.360788975 seconds)
    (80/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.272376313 seconds)
    (81/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.386111939 seconds)
    (82/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.062929142 seconds)
    (83/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.250955098 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.335644332 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.372181468 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.43211914 seconds)
    (87/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.482026101 seconds)
    (88/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.25272839 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.40449413 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.305855352 seconds)
    (91/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.25188137 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.43028528 seconds)
    (93/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.410392473 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.373713825 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.346158265 seconds)
    (96/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.256944934 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.384012712 seconds)
    (98/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.084858318 seconds)
    (99/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.096013502 seconds)
    (100/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.347605194 seconds)
    (101/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.06150438 seconds)
    (102/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.253623543 seconds)
    (103/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.497971166 seconds)
    (104/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.392999814 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.29937633 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.610413987 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.343436428 seconds)
    (108/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.316566619 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.417563402 seconds)
    (110/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.351350978 seconds)
    (111/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.155294148 seconds)
    (112/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.490179713 seconds)
    (113/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.349799218 seconds)
    (114/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.252852589 seconds)
    (115/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.41196463 seconds)
    (116/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.25464974 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.421130178 seconds)
    (118/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.368403383 seconds)
    (119/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.254322562 seconds)
    (120/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.28096125 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.263544372 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.440217035 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.122055737 seconds)
    (124/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.255756405 seconds)
    (125/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.40657224 seconds)
    (126/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.46828698 seconds)
    (127/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.343564349 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.517811051 seconds)
    (129/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.362860376 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.405440529 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.126506459 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.366096997 seconds)
    (133/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.256925826 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.313464671 seconds)
    (135/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.358884333 seconds)
    (136/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.391520726 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.277329515 seconds)
    (138/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.438673027 seconds)
    (139/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.419778988 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.342238965 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.443554165 seconds)
    (142/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.273213549 seconds)
    (143/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.25433608 seconds)
    (144/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.095327522 seconds)
    (145/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.254664291 seconds)
    (146/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.424393324 seconds)
    (147/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.304667241 seconds)
    (148/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.445073127 seconds)
    (149/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.535608952 seconds)
    (150/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.452677506 seconds)
    (151/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.255819672 seconds)
    (152/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.970868477 seconds)
    (153/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.45995933 seconds)
    (154/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.317037433 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.275584936 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.525265775 seconds)
    (157/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.281286395 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.380472399 seconds)
    (159/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.462549166 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.303044294 seconds)
    (161/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.355595518 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.385400919 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.335732952 seconds)
    (164/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.34566526 seconds)
    (165/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.315549791 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.317123343 seconds)
    (167/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.259132461 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.282638077 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.410916168 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.391590708 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.07229025 seconds)
    (172/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.287789372 seconds)
    (173/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.258059594 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.306398284 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.369141124 seconds)
    (176/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.982028504 seconds)
    (177/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.324245953 seconds)
    (178/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.26246994 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.128525281 seconds)
    (180/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.457360697 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.258391909 seconds)
    (182/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.274560229 seconds)
    (183/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.278771295 seconds)
    (184/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.312384608 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.476324597 seconds)
    (186/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.427538155 seconds)
    (187/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.359128994 seconds)
    (188/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.353949358 seconds)
    (189/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.466506048 seconds)
    (190/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.404494138 seconds)
    (191/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.320581611 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.433033857 seconds)
  done (took 328.692490485 seconds)
done (took 329.86020057 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311812671 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.390369746 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.289693179 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.289980512 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290539876 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.284279425 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.311141289 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.293077745 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.298090452 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.302573374 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.283224743 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.297786224 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.307276542 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.302789332 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.325618064 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.28920069 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.292413673 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.301617796 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.302939301 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.310749858 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.294379706 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.291454313 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.317965183 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.286225338 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.299180061 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295946905 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.297704423 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.283528803 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.295496904 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.307228277 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.280180996 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.297719665 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.309156715 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.302775059 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.294655697 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.303965343 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293496567 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.388183879 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.312374322 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.302644122 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.298154901 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.306582499 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.299055102 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.299889615 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.303970368 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.320296431 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303026045 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.306473184 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.285032816 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.278193989 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308006003 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.302555847 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.301933968 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.282791886 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.297801658 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.307424525 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.300100236 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311758998 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.30409679 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292934984 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.331719195 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315111391 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.307914929 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.302758698 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.301888034 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.305691249 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.305294344 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.305370467 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.304017045 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296610252 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.298492229 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.302735669 seconds)
done (took 102.991446834 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.413851874 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.288665053 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.450927451 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.302001292 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.450401193 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.415095805 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.30152329 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.302014184 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.303529325 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.097455688 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.302095656 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.304246294 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.29397209 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.30137307 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.411958641 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.303198831 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.304296609 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.994306281 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.299429536 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.427834809 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.294448008 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.301952146 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.304874336 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.096180635 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.290108929 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.287186108 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.430473431 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.302830326 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.993561812 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.288627097 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.289157188 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.996722869 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.42917133 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.32010827 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.315396133 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.313785372 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.460177761 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.304370965 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.423707637 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.421806594 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.450179955 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.343164081 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.289142278 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.291280139 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.303780598 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.303379186 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.303012959 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.334473547 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.294193957 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.304603392 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.99488427 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.310691249 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.300868516 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.306047304 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.30590181 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.337334615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.306679475 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.308497454 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.432129987 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.306355083 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.424290825 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.098706267 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.099777282 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.307368339 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.294626299 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.30314695 seconds)
  done (took 105.964342843 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.365946552 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.37471013 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.405947518 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.293024808 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.346569157 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.409442538 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.298684034 seconds)
  done (took 10.677378201 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.303197059 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.303339903 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.33919397 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.343841985 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.302951028 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.469600297 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.305725581 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.30910544 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.30547399 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.349160691 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.310700464 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31015143 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.313612464 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.298116289 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.346473089 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.307601205 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.417072752 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.300024566 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.310432517 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.448722202 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304880785 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.318273812 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.349262817 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.309010247 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.310489192 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.303422889 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.086723701 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309775152 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307516958 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.309050319 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.309120898 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.364896249 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.307686681 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.300625708 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309199868 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416212175 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.308006336 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.30857897 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.308047282 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.300221255 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.309154256 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.307879484 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.308850136 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.309277091 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.309404643 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.323894405 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.310551517 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.307822494 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.31008761 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.310703517 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.349854601 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311339085 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.306479735 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.311237802 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.355504584 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.317991798 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.310209425 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.310138691 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.309914662 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.312078156 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.451654169 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.34845666 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.30928157 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.346859615 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312145504 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.309201141 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.311343293 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.310426374 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384550974 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.308388311 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.354929422 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.309684012 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.487554851 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.324100147 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.311539128 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.306717616 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.308219966 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.305941729 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.297145796 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.306807306 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.30975125 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.300974645 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.307137399 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.313223791 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310390148 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.461128368 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.407797565 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.309802991 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.317918095 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.307770315 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.311650813 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.351624994 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.311929894 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.312422471 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353872056 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.421727191 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.350939682 seconds)
  done (took 134.786835695 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.317798121 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.314962937 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.305436664 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.327786016 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.30381808 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.304941295 seconds)
  done (took 9.061556294 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.305302598 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.315651757 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.309589229 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.313122696 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.31422813 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.313835287 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.311016081 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303846836 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.313961811 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.312285494 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.315429809 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.314063582 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.313680003 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.312290961 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.311324161 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.309775178 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.316086781 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.314963854 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.317344005 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314250768 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.300845267 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.316362149 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316011019 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.305010063 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.32017658 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.313382657 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.329768283 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.316503238 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.314269753 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.310956266 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.31930507 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.313009668 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.309717391 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.308685504 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.318470065 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.30844971 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318707213 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.318741781 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.315638449 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.318461191 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.316422335 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317286614 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.313409968 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.31931222 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.306678665 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.30687545 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.319771424 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331530391 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.316751812 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.319854973 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.315739681 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.317023549 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.315818368 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.318751964 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.308604082 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309340887 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.32263614 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.314737201 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.312480789 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.308836964 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.317742298 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.320703492 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.310067041 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.319091881 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.321523639 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.320688545 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.30910112 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.319375808 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318317025 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.316792077 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.32021197 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.315424368 seconds)
  done (took 96.855191726 seconds)
done (took 358.525343773 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.700108729 seconds)
  done (took 3.891092867 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.57267497 seconds)
  done (took 3.763208115 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.057724447 seconds)
  done (took 22.50084319 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.328705727 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.33712394 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.326080186 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.302944624 seconds)
  done (took 10.483962004 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.686475254 seconds)
  done (took 3.883244807 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.310505826 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.313415214 seconds)
  done (took 5.821453804 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.465154723 seconds)
  done (took 3.657776505 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.535554942 seconds)
  done (took 3.728412309 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.324612442 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.316973106 seconds)
  done (took 5.843565446 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.281579242 seconds)
  done (took 3.476276385 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.388611134 seconds)
  done (took 20.584962518 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.324789552 seconds)
  done (took 3.517368684 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.356187763 seconds)
  done (took 3.549234939 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.742310613 seconds)
  done (took 5.938215712 seconds)
done (took 101.830244441 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.300316784 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.305636868 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.304050511 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.303589393 seconds)
  done (took 10.408654583 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.380695496 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.384771173 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.394770251 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.378167758 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.376127621 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.387243192 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.34419365 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.345703437 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.371759102 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.371235063 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.386736052 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.380519262 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.388340339 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.349069272 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.37128468 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.390052494 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.378289249 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.393229247 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.348850405 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.377484946 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.323992938 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.378384898 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.373260719 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.321521786 seconds)
  done (took 34.091607618 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.807555182 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.383078182 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.465518561 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.364500029 seconds)
  done (took 7.215046555 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.427186118 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.427664047 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445888799 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.480062952 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.52469968 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.447812759 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.345781829 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.342004514 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.33268691 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.427149925 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.511167443 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.427191192 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.640220593 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.321732239 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.642358369 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.324969024 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.317477481 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.427875625 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.474525669 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.503864946 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.322353707 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.425913979 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.428564116 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.426745052 seconds)
  done (took 35.593533568 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.329636344 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.340597478 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.324962955 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.342014678 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.325072256 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.327507062 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.326263759 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.333469158 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.323325582 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.324224114 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.323428582 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.340405936 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.325577451 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.327525531 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.334130997 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.326993844 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.329429857 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.332198943 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.334660879 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.323045371 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.323511923 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.334225375 seconds)
  done (took 30.451159222 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.312041579 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.306925714 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.659335714 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.562316183 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.311961143 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.309156065 seconds)
  done (took 13.657087727 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.381049275 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.517555609 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.317069332 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.6496227 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.739523302 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.314325311 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.319007051 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.551161842 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.827822216 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.825758801 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.370741443 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.381974814 seconds)
  done (took 19.391599946 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.322873166 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.312667522 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.322204971 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.327879069 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.363693937 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.322128965 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.325411258 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.31136469 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.369524036 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.369304267 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.318055843 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.372645051 seconds)
  done (took 21.238781269 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400795331 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.320696973 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322561435 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314191058 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319886332 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31876159 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319251276 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.005677727 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.325984982 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597607496 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322077506 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406097827 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.568371688 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322489697 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326225591 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.257443996 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550784474 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791151738 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326699092 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327384768 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356047528 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322544661 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326039462 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.524852119 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325609253 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321787818 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.590188087 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324296515 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590638433 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566000037 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565334675 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328939481 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601758676 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958224229 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429714005 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523184713 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330362268 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325365616 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.324126527 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.331995307 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329209096 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34731291 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567042809 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331138607 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326856203 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335944697 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024380924 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.330878127 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.327159458 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327663259 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564962737 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413162529 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.334747114 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326186429 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367643511 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321519312 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.335443094 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443482527 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966542253 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327497193 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340071318 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.332521714 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315524906 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324908112 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951869632 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.332608824 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.334551903 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33109973 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328554412 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32365754 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36667039 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325666051 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.346574144 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32531996 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069537335 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328534014 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330849939 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838219961 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327147343 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.332176084 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55385569 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328650663 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322816351 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.325423277 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326701612 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028883226 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33503159 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.296790082 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365405877 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.018656269 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.523655366 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350868968 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358161235 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.552060297 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.297731455 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330541002 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.340521721 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33346308 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347837184 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019877854 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326641891 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.332664423 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575340524 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.542360023 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322731877 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.277427247 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79014853 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330416374 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.358314607 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336369466 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.527506624 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.932804362 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577407446 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33420469 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368049248 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329190298 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09243546 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335079396 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.33971184 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330610347 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619768406 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.110870032 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335042107 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405524812 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339946109 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330660421 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330488416 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350264962 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329766213 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.506693942 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338477689 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578556419 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.334205742 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329505362 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.341440629 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338407162 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.336479511 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551842344 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330713755 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610225233 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333955412 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333174044 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331671171 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.546654557 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.34270925 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.338038585 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672012205 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332356457 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33516683 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574929206 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367609069 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444557461 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3683962 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.337405231 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583252237 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.335751602 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.334864719 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348458109 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336274856 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33643414 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.342336179 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33460367 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947577846 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314418009 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339395 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335034876 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.348910117 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409281733 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343059405 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535559148 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.345310083 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331754402 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.339021141 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.339601589 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55491825 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572764131 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.33653862 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5125862 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.791100328 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933340253 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347633687 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.332987732 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.335438104 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.33770921 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337971748 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336216579 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334089898 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529041038 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586078203 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342359918 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937860257 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335403492 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337668484 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.346677446 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577464486 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.345401971 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336059403 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.33608719 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34040407 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353374314 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58003944 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558518964 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.353753235 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333536224 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.857867454 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347410952 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336854459 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336403623 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362224304 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349172079 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170301917 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674847765 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334824373 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590536372 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343614866 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.357783551 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.336669602 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347140541 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349243303 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.357587267 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344416123 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.539977547 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341936901 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337913605 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973061094 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100206813 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886624087 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334524914 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.34599555 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340490717 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.069313539 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339934868 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338329363 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573570346 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033447936 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334692999 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804942325 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.34644644 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072695426 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579839345 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565557434 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34002163 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.341447544 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585031455 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55508948 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364554646 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347013795 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341850782 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.303513738 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872908073 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337592326 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522939189 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066465925 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351866226 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345074699 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.390223813 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.348320069 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728216242 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342749342 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342759721 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337297144 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344953533 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16834664 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342805221 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342491632 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964163413 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34080814 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.813974393 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340245532 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.540606084 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.589366059 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.56452069 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.35797911 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.344710223 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.585209699 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584214438 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3478126 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34611995 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894128143 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.196052555 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.354631437 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347395449 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109242415 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344589833 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618098577 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.360588774 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.357045014 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344979069 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343834963 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344189592 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.342907544 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354026112 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319852144 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810947149 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.336431503 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341561442 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357496677 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347463012 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.591382743 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.360273245 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.94639716 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57264329 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340481256 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378522685 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.353327661 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357873963 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.3174826 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345827395 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346264637 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383487075 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.561374082 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347480846 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.317922492 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346379369 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553091963 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34701214 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348221512 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562481502 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.349263438 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.359510236 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120739995 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378049941 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347094049 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349024347 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335911911 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381267913 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417480129 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550777783 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.591156403 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594314417 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730091704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347100294 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366780602 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.360929846 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428064036 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352366398 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.362243766 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.34565308 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941042175 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099007913 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.955089795 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598420993 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346329539 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354588666 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341513449 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584215344 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347334631 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618143604 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342514963 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.340435659 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369915272 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357304536 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361216653 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558655667 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619735268 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350108931 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358633368 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346068426 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.3428045 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592135131 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.562961611 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809907204 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870430189 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351986015 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35430935 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074526076 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625060159 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348005489 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343281274 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347199197 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.356283715 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.373225999 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.356098451 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35945831 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575209754 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587022429 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985475154 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588655299 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.532115738 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.343449151 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346355926 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596301651 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191271568 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.545624892 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949104565 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042985432 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601833031 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420021764 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544845134 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.34721436 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584891737 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.363251615 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347589982 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348510196 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349064933 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.348096591 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58681799 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949774774 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605116974 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.351199211 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.359581814 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380634709 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.546402989 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.573573915 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048362863 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569534515 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591596162 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360190257 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348935936 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958357306 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597315418 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349951026 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.35364138 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560630061 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35397383 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385927459 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.22633923 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.34656542 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866790962 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.560951077 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370816249 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363610751 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052757431 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944983837 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.358506723 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810938523 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350206147 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362997852 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63034907 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.354856199 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357972513 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634493095 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.35676017 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35417391 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550880185 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.943639767 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076116066 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.355828139 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375312149 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.356001849 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35187791 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359418535 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349371261 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358809205 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.730533321 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354188487 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354586781 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36290285 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.363407296 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358814637 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.351979538 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351973965 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.357064563 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.352068696 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.324505169 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364562288 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469689713 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881032467 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349121515 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.96606083 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.687415295 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600262162 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364208847 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.3232773 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.354716477 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355565453 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35252356 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344167012 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3457664 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874721399 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.363179323 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.596926133 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358482971 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.566535163 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562518031 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357301142 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555209788 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370510126 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375161168 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.327639639 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354518871 seconds)
  done (took 962.786085215 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.344186276 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.361531262 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.358350119 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.401897325 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.348000756 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.345836932 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.347936578 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.401765552 seconds)
  done (took 20.135205028 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.356628002 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.350439809 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.358193555 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.35504184 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.348009804 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.800555066 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.347524706 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.350065498 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.368441131 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.358085218 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.355974835 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.941474168 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.356701236 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.354862872 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.353782174 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.351966559 seconds)
  done (took 31.934672903 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.983672851 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.686848692 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.776935664 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.359018284 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.362746971 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.35236208 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.447699397 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.363023586 seconds)
  done (took 25.55996872 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.358148468 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.362113065 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.360930905 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.356447931 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.362312614 seconds)
  done (took 8.026720565 seconds)
done (took 1221.683958773 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.361009702 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.362028027 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.363591097 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.36281302 seconds)
  done (took 6.678861248 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.328049244 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.328404578 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.330184571 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.343106842 seconds)
  done (took 9.558201471 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.997149441 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.846700667 seconds)
  done (took 5.077173586 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.888526674 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.885825368 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.884272561 seconds)
  done (took 6.89003729 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.633225031 seconds)
  done (took 2.863727231 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.324959383 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.348506105 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.077499612 seconds)
  done (took 7.983328949 seconds)
done (took 40.281485588 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.347711297 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.108617906 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.526675986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.349762041 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.505390439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.506319474 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.595781445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.349366868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.347081624 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.346334398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.350585348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.506253555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.584870918 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.112266237 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.585743324 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.11521822 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.511664066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.359805075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.346465838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.34667595 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.599154292 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.350425491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.348237808 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.34807559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.506940454 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.503506986 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.348493344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.108688624 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.350766822 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.345951187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.574891554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.347461876 seconds)
  done (took 81.764918168 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.351600429 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.365495114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.349503918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.344994994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.371210454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.349440443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.347154345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.345663792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.347630763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.350387812 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.344140718 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.364964045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.347327637 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.348492823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.365554121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.34643973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.361281261 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.348091545 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.345117239 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.36299525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.349038139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.345288014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.367336261 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.350567154 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.345937156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.373195771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.356671422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.348206845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.349795533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.356320563 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.358552077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.34791712 seconds)
  done (took 76.539691353 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.351557227 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.349937614 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.374690897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.354351515 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.350331819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.35573079 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.350783189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.353219578 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.348989381 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.356578497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.350607988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.350276751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.354585483 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.365248624 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.349375603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.350939768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.353686318 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.361161702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.354985285 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.351462424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.356181144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.349442007 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.366030466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.350720332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.354780884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.351806125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.354349592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.350940591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.351411403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358064408 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.354803424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.37095571 seconds)
  done (took 76.592911872 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.596226058 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.372752479 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.373511006 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.361860104 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.372614368 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.368885687 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.363396375 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.596612389 seconds)
  done (took 14.642064192 seconds)
done (took 250.77304974 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.360191054 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.821896904 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.38399436 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.359077621 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.390566356 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.384148807 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.57036993 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.381170954 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.567293682 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.384106492 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.373201496 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.355100508 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.110939401 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.498415049 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.142033129 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.250437749 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.189585917 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.340289637 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.880577613 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.623745168 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.373477409 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.342491058 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.13452623 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.200474349 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.3269347 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.418172486 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.439800953 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.564923448 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.500724673 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.419488361 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.826276168 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.351699055 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.347846195 seconds)
  done (took 62.84937555 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.345826637 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.356814341 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.357052831 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.35732102 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.357260462 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.359071472 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.346048237 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.358231798 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.359451461 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.353729086 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.356869949 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.361042557 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.355150902 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.358738243 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.357972014 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.331247408 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.349293814 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.360753747 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.347277913 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.331798837 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.358186595 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.361313991 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.358267427 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.357550917 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.356091584 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.355318095 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.358321746 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.358174742 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.359143906 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.354933284 seconds)
  done (took 41.865409413 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.357362068 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.880276967 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.058437452 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.356000902 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.351473302 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.351102471 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.624553549 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.364342612 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.35524575 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.352523196 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.790450779 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.367039557 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.380776633 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.069536111 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.36551556 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.368736472 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.371052033 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.362453829 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.89554075 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.372422249 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.630805022 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.372785084 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.628337825 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.368027715 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.363222026 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.359609204 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.367088113 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.160837296 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.377099801 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.805834131 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.079768115 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.625657697 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.083650971 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.114731773 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.082199207 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.370751981 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.37014626 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.803164452 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.361748475 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.3629759 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.630770676 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.363238242 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.076590137 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.04164938 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.379546894 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.371741278 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.180539952 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.802343099 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.586716322 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.370377854 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.105890323 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.363771765 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.371646257 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.362968745 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.588855516 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.363817806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.364021486 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.187020645 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.367974163 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.630702888 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.374881748 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.360827224 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.902258264 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.365468839 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.893396538 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.366933283 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.370570448 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.366470587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.083737567 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.36985079 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.057310839 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.380052248 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.372937627 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.806972066 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.894551759 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.232242888 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.368888024 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.90041682 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.125393815 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.647669709 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.368121372 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.142550308 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.651446576 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.370718126 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.376185337 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.375579383 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.374563694 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.438089449 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.629064109 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.979024655 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.058319072 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.200894289 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.635280853 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.372430805 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.365511746 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.19253309 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.374964016 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.373978328 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.076357349 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.05765398 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.381628229 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.370885125 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.042831353 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.382928882 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.635594247 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.373929244 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.110707379 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.36536052 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.439826617 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.376607937 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.371848744 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.371170777 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.637134859 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.371709818 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.374709662 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.040843151 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.833422506 seconds)
  done (took 189.96053797 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.360072431 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.352971117 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.363582623 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.357549264 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.359234294 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.367287299 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.359472571 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.358383724 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.365018619 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.361788588 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.36000125 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.368392944 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.36769175 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.362317595 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.364822292 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.359752208 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.3634911 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.366439214 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.356991391 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.363478824 seconds)
  done (took 44.482025825 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.375129497 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.897627397 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.863022551 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.37954314 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.378076044 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.369279994 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.421495966 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.380562695 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.379757607 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.649204616 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.5298145 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.380197113 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.377576895 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.378410392 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.86236943 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.352565207 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.650625829 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.897262745 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.384409227 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.898137473 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.346915012 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.381219165 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.369042174 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.897192103 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.659258595 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.633257342 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.421933735 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.896095483 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.37735279 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.377968143 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.892848236 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.375895908 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.370561757 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.8817103 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.37500723 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.39248976 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.380967966 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.42400937 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.424356212 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.65681637 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.902526877 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.641778536 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.392879551 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.528087001 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.376459969 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.349410698 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.902479004 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.377300572 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.356118665 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.381579256 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.385152768 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.874138777 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.372463291 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.878115007 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.37707166 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.377892519 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.902276127 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.876746103 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.867883112 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.532480035 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.372911796 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.635279746 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.383147132 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.914109087 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.38057957 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.383707949 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.383061075 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.533427691 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.906220748 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.64245969 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.659158333 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.659084578 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.378057939 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.437637284 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.384668808 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.659915934 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434490346 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.747988073 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.656083508 seconds)
  done (took 123.787206396 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.640373116 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.480667601 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.739058345 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.936844391 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.857801459 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.506786041 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.484284083 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.612095744 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.374345912 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.481232132 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.003727798 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.462864339 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.100881745 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.426540151 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.473992756 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.494484594 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.754812916 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.303157374 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.99169463 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.976998493 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.378465297 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.479954547 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.880812994 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.557694191 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.364036305 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.932650546 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.292768821 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.881581064 seconds)
  done (took 52.118867006 seconds)
done (took 516.299166016 seconds)
SAVING RESULT...
DONE!
