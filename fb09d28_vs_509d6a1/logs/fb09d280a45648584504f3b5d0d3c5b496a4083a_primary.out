cset: moving following pidspec: 3523
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.447008198 seconds)
loading group "string"... done (took 0.506917414 seconds)
loading group "linalg"... done (took 9.782393845 seconds)
loading group "parallel"... done (took 0.178020597 seconds)
loading group "find"... done (took 1.235439609 seconds)
loading group "tuple"... done (took 2.200446845 seconds)
loading group "dates"... done (took 1.418013529 seconds)
loading group "micro"... done (took 0.19635723 seconds)
loading group "io"... done (took 0.524978876 seconds)
loading group "scalar"... done (took 57.539752136 seconds)
loading group "sparse"... done (took 14.002400815 seconds)
loading group "broadcast"... done (took 1.340604033 seconds)
loading group "union"... done (took 10.450738678 seconds)
loading group "simd"... done (took 3.575105844 seconds)
loading group "random"... done (took 13.29601017 seconds)
loading group "problem"... done (took 2.173100661 seconds)
loading group "array"... done (took 25.015154578 seconds)
loading group "misc"... done (took 1.157921568 seconds)
loading group "sort"... done (took 3.765744039 seconds)
loading group "collection"... done (took 21.821005653 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.609120773 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12402382 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202906233 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.339682988 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.232251431 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15774868 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138717645 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.240814487 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.612853726 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205097656 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134132569 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.482306868 seconds)
done (took 6.237881954 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25423245 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.243452212 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167901708 seconds)
  done (took 1.1146525 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074729424 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.153371297 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107269252 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092019078 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091822894 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107668568 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091550641 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107408807 seconds)
  done (took 1.458086737 seconds)
done (took 3.604441239 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492038023 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.854441184 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.502889898 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.138102243 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.299908317 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.282510452 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266858829 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200169041 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089424264 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087944008 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171101863 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.388154503 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.39236713 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.929635224 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090941668 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092808574 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130742205 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.754203443 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078181474 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.124392464 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.486434937 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.184143381 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098598224 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122934202 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184885159 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132313327 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160791587 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099943342 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664363794 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130866555 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.181593628 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096586672 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161439513 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.180776185 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190057174 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10964612 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685092897 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198033481 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.088034986 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099095126 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669092286 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117203341 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185030288 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102649121 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087443039 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177955931 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.090896791 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076974772 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.108671905 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084390654 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166490986 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.433115314 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104060019 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171248836 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091640964 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687364227 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095650988 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272610699 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123599795 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092643489 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089900379 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086290638 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158556026 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093311099 seconds)
  done (took 19.735760486 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145661806 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162005456 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077611226 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155364677 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119678359 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079587883 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100732603 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07786883 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12371027 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174884918 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135356119 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150436306 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091672611 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089755481 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126815479 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24588246 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103929818 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120234103 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088739781 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088884618 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139230108 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096179919 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10759342 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091716529 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167507786 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201356978 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108846941 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122644559 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089913747 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095427019 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141198957 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143840852 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090993788 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088590336 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.183797426 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105911689 seconds)
  done (took 5.154454461 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19820488 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123021708 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.199641195 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.153292034 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142878515 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161524223 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123790082 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.272151401 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.274165942 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177135216 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112737604 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120059716 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079218887 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079623026 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094165349 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.44836919 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.133184754 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161212455 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125392566 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101936821 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080686846 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.393518436 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085534367 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093816082 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081788074 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065537503 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.18919501 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079957637 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.071078757 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082136744 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104289309 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1143884 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215809472 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.12004328 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10024819 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111225653 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140315968 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082053627 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076479218 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215110908 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084490189 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095143705 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107257474 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131703892 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112666118 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093653918 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084328556 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216506133 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078669978 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111789812 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 3.858713681 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195648124 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122062735 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076028519 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281858294 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115715602 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08003804 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077051469 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.686985864 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11376427 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080255978 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095942006 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081878774 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077638021 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.427937877 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098301759 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.022741484 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080997186 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156093111 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079941161 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096503853 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.134483983 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101338315 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085560636 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098505455 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095209327 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079542427 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077889533 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07692861 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09970062 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082743301 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.127818238 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084780256 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078805406 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1608194 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095823724 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097133157 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124718061 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081001301 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093283776 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112421328 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095556311 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081131178 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.164809869 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080595342 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112114604 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097305227 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141639281 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080779862 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.249551759 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09751835 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121442311 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096729972 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112188939 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114722477 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080230055 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083021301 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095616505 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080191537 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145508263 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093682589 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0807279 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07944054 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108321481 seconds)
  done (took 27.14869797 seconds)
done (took 52.742071672 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.436318306 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081471021 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081137744 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099749598 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080478348 seconds)
  done (took 1.565168367 seconds)
done (took 2.314435604 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32352339 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193895806 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098250325 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190159595 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0839778 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192977688 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181996118 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.091728681 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207161743 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082521844 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187445204 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082448323 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101996127 seconds)
  done (took 2.801735085 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100855798 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105980724 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097896089 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115301132 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080235524 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097348526 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112504811 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107724931 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096209408 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106306592 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082823497 seconds)
  done (took 1.857958377 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098973658 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10291698 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093670617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113224282 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081660711 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094657514 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111570725 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104866095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095144953 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108856137 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081652928 seconds)
  done (took 1.843134585 seconds)
done (took 7.255379726 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.077371428 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.475949243 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.16470217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.206600971 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347143091 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.234570966 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.569634209 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152307112 seconds)
  done (took 14.135205955 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.12753209 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090176898 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.154027769 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094410989 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08946841 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.112530105 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094324339 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089896743 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.112484366 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090675436 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091863916 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107726555 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092854243 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091700405 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104661804 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090751932 seconds)
  done (took 2.456932294 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.151342332 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141045108 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095503421 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096489864 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110330394 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097525838 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100526443 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113396146 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092397641 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09339938 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.116375823 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.097535551 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096104319 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107349715 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.096180529 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.122822826 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.107105583 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.096619479 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.121228442 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.110802565 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098582398 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09545155 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111141189 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097454529 seconds)
  done (took 3.407940227 seconds)
done (took 20.75790965 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148473701 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099912053 seconds)
  done (took 1.012084896 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.138876148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151529261 seconds)
  done (took 1.054074834 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112598533 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088784073 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136743166 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101875626 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088289771 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105217711 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115165823 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10388726 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08950838 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090539066 seconds)
  done (took 1.796452769 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095436734 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093499716 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120705909 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.13488917 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114277262 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09491409 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094247812 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09063685 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112228647 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090347109 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094067787 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124991102 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093950364 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123762135 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09494732 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094711697 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114317117 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094347221 seconds)
  done (took 2.643587903 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090830348 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090850801 seconds)
  done (took 0.950535736 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094284498 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08970735 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092164693 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109032905 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089127676 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088557519 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105419031 seconds)
  done (took 1.433366393 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48855194 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26371042 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.365223552 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10578979 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14397484 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350300855 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144576828 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.221134146 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101389755 seconds)
  done (took 2.985264087 seconds)
done (took 12.641760423 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092477498 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.219658064 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.603962606 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111551656 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.087961355 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157286641 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.283779641 seconds)
done (took 2.330664484 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34642975 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.145832231 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083492715 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08613482 seconds)
  done (took 1.431129151 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08263245 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096528688 seconds)
  done (took 0.955168453 seconds)
done (took 3.157508053 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090078066 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087148041 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087095778 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.137322098 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086664149 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087169143 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.10506465 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087961224 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087322381 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106139551 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.087746693 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.086650923 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086274686 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10426531 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088075344 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087587097 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102672692 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.086465146 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086664553 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086910184 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.102696392 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087498705 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086819969 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.101882133 seconds)
  done (took 3.051619849 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106142071 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089711602 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106935237 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092829909 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091702981 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10785242 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092063512 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090002235 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108105506 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090304365 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092160738 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106854804 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088820327 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092612954 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088333493 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10825492 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09316567 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088221485 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104963132 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091149353 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091613575 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105484047 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092650619 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090193634 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107791898 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091773662 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089143627 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105292525 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092792266 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091345471 seconds)
  done (took 3.663403812 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097462032 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08556662 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087565451 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113113277 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085824337 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088602981 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100305064 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085444239 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088490151 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086820297 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.106839935 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087684459 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085427782 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105582316 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090834471 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09171624 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113869963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087477995 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083564142 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089622509 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107798365 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08570969 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087374446 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.104491188 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0872026 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084303437 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087529409 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.104857328 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088364708 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088949459 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10704055 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.091312067 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087857562 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.113240916 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092683645 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089320388 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092683247 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.101133142 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.0908806 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085258568 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.101610546 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.088404467 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086041403 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093812327 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105293897 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088607516 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084966358 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.106103919 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.089909287 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09056361 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.099990871 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.085964741 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090300629 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089550425 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.107119742 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086311214 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08864551 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.100470229 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.089022567 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.087846994 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08535183 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.102211405 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.092854608 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088277156 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119115376 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096167163 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085011129 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.106758813 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.089110064 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093802906 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.107074771 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098600132 seconds)
  done (took 7.546624286 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.1038721 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09783787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087930325 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10595968 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088802119 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087473486 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110717666 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090287338 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088693552 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110657279 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088668793 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089433854 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105503348 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091046062 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088694585 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08888953 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111016315 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089055431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087562008 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106221176 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089390343 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091002048 seconds)
  done (took 2.886753093 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.229682215 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094259464 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137956308 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118097281 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.104684556 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118843725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093537267 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09298993 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109081395 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098457131 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096973119 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109625518 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106108429 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111625359 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09932267 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097566543 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108469517 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099454612 seconds)
  done (took 2.814085146 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.108577751 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090895894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128240862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091922607 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090380949 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09020506 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113770949 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110759574 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107400092 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091210648 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09725168 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109071291 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092108778 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091095436 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090260825 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109054143 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091353353 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090409792 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113410077 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096286572 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096118239 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114048164 seconds)
  done (took 3.005185965 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106565824 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090229021 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126024868 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094616933 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089405212 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106550415 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095212819 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090550806 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111643714 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.090449734 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090982585 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089128197 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121210158 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090208236 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095704212 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108246343 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091497205 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089620823 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107268528 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090759467 seconds)
  done (took 2.764707647 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168258287 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123018978 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107464789 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113907575 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123266038 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106813103 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114215473 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123708928 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106270003 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133786844 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106642636 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106064482 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131563987 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111903405 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122476876 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114151183 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112610705 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131736533 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106432855 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121863615 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119459805 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106456812 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13179489 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107770427 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105728653 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12442247 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10671866 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128207609 seconds)
  done (took 4.10967043 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092035352 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090099481 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088485513 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106023938 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088305083 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088224351 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088785891 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106246143 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090116608 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087860872 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105871882 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090027125 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089755072 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088509116 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107314894 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089256632 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087253661 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106914463 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090046335 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088934158 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089405067 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107479104 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088675546 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08881175 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104975762 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.090177671 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089431073 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088634895 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106267249 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089176536 seconds)
  done (took 3.604636405 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103436441 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098857794 seconds)
  done (took 0.999385014 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099644819 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104589506 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088152414 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107160907 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097338458 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089401828 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114245948 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098082117 seconds)
  done (took 1.594797963 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141192659 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158650346 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094647368 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102029715 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159622203 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150031904 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134837059 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09622505 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107598018 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083398635 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.151993168 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083623448 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091826065 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104302502 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091406902 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096875654 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108711673 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10198044 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097124715 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091728698 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112963553 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097175201 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110870344 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100780697 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085308618 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109902748 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095580662 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102032137 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106251685 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09365763 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088960501 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090487991 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.113144138 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096134925 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090065725 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160237431 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097907472 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106199133 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092675015 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095384365 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144648764 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090869433 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09197745 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109022052 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096682924 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09549151 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114225757 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09152007 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083700822 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103854526 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092430164 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086326723 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090108361 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111693415 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091348333 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115372189 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094590289 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087839511 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087189461 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105539329 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090768097 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086765519 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112163211 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093856198 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091907864 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110989425 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091454398 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090337176 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111891725 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093263364 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090059802 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123705604 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093123319 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095764651 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113400389 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093011726 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087753797 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115343402 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090116459 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091567992 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.112895013 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119540574 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092847569 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104136865 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088635766 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096597044 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112442219 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095262509 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083776033 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117884221 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093698457 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.090403058 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102384584 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090630408 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087182474 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09422941 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.102716907 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092136864 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089316271 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113246997 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097136458 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089118528 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111124479 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097470337 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096493349 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108847661 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.136214034 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105676981 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088639249 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093087192 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095570908 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104270638 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091506432 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090233767 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106790088 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087459462 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095375987 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108823448 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.092785917 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095242194 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111386417 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093694857 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094379815 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.108079328 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089257949 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095353214 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115931187 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095179765 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093467578 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.110073291 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092982092 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091607345 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094909181 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106923945 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096442254 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08736716 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.108415401 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09266535 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.095130172 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109711129 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087838831 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.089834539 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109681749 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091675164 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.093828221 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109867007 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088428386 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083521661 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110891107 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087704402 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091607556 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117555823 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089100079 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.094490404 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104576699 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099876664 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088416043 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.095533885 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11258032 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09843424 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095653188 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101708457 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09051582 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093267468 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112391163 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088846445 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.091069316 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.107465201 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099992788 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084827239 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.113305661 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084786502 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088677721 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.094458676 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.111537647 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09459339 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086809151 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150248723 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104954692 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095359449 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108907741 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091406297 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094608779 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111916596 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096207673 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096634725 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.115396167 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090793222 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090165117 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115492539 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089413957 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093910255 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108666623 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094610838 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084594626 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.109502608 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085472821 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09625392 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092412166 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.114809788 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09728619 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093656574 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109423008 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10063878 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087178782 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.113733023 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085073504 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096757597 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.118120622 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097863568 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098182632 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110677661 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090837406 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091542811 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117005355 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094341453 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092168654 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092376192 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103921007 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085911687 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09722493 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.113357164 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088018748 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091129166 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1113454 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095540678 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088754374 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103291358 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096877311 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095209784 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104754302 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092540997 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087765408 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107979641 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102230087 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084092626 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105672487 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095619544 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096763783 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.107670666 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092857712 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09492161 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097234633 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.113813756 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094489264 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089239713 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119141052 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091112939 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090074175 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106853149 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095251237 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085607381 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.109242215 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093294216 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089604123 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087280755 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115046152 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098250818 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.095798016 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10886194 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095330136 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.098064112 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.116946368 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090135661 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097263249 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106004401 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086249109 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088406507 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102444392 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.093524742 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087527426 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114256756 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091692637 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090511174 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.113543989 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094457273 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089693129 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116412842 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104127858 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08572858 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103138392 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091485057 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091128765 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106819348 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089757598 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092481548 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093510932 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.115596448 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095688077 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08693119 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111397026 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09872242 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08791526 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.116010467 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098405961 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098014649 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105762392 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098322163 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08861295 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11440955 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086194304 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091135665 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116684598 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092837908 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088722426 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107719742 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098219123 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08485108 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106524323 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099368017 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090815002 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095299802 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110589989 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090625666 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088429114 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106483805 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098448239 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09025776 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.116156126 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093637669 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085448875 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103720856 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098370589 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091368435 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115410819 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089656698 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095971676 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097343623 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.114876589 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093559868 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100555603 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119012585 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098493223 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096981165 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104876482 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091244401 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096491599 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.110366148 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096875827 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095604685 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.105116735 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09743904 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.097431297 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112568395 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092734333 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08546995 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.091550941 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.118127122 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097111891 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095970574 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.11181983 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095741807 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08778587 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114699102 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099712349 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092106814 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116681892 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094002111 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.094985503 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106197758 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098720204 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093343071 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087032527 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105483077 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090219428 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.097951767 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105824924 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098264902 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.095966744 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107986871 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.0911318 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096549011 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107198019 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097809003 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097486107 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108623009 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104163703 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094104248 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089331232 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.115852202 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.09796055 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08544107 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10987205 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092648417 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098543539 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110941362 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098747895 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092847692 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116592817 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095864779 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097895858 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.11627786 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099176036 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086880157 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098637683 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117458314 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.093914142 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089196674 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110115797 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088094283 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090657648 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117652036 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090479548 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101102564 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.118157858 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092243252 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091068702 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.116852166 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094071403 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099005216 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108053252 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096572728 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086952672 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112959259 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093298135 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09940912 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10874809 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088548301 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09832789 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.096865586 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115809281 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096590366 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099030064 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105645741 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087958081 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096316494 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108844724 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103796236 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096360358 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108924863 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092486662 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095069944 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.111389378 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100956125 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087949069 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088816303 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113780268 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095280313 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090497761 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107221279 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097009846 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091887272 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114375817 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092692345 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086958049 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110935146 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099810774 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090858919 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107406931 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091969246 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099395168 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111129676 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091090389 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086727682 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116919472 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096568508 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099003046 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108100783 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095026982 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089834651 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.112700029 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102007647 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091821576 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092588654 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112125292 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098994919 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097386037 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10869208 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090957476 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101823615 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117504486 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095685089 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.094958673 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112470207 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099962822 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099135397 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.114558348 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088877231 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088038526 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109743158 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089380695 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095100522 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116672512 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094311291 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091386192 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096479871 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116708102 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095962635 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095028301 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107171498 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10026185 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089911542 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115594236 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088948649 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087778557 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093549826 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118285701 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093020025 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092443656 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.115147364 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0956113 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087627259 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109723206 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098337393 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096021947 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.117844597 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094051685 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091556564 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.114832734 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104703418 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094532044 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109901668 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102806065 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099382777 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111729126 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095002873 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097220004 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.11861361 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097047132 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.100087985 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09025237 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.112275229 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100467291 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098323166 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123211604 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093429337 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086562326 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.118547005 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092713803 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087596346 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117071635 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101790229 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.099746848 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112232253 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09120338 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101190481 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117479341 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095704032 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090457125 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109632567 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099317164 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090968808 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.116639857 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092219039 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10110797 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099823888 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120329246 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102657376 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087439582 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1191443 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09671192 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101254122 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.114666738 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08905397 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088299035 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.11524795 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102194122 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099172676 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.1162162 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099132454 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098275669 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093580622 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114157153 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091808262 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100120237 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.118250854 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095558361 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095263839 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111376716 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095197487 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095417894 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.118793431 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102086101 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094816867 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123027795 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101475268 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092035639 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108712093 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095948412 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096624051 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094226814 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118587106 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091345064 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087278619 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118814604 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102200757 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09264253 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121272161 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101580059 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092763222 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116034415 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103043452 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.097907474 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.114123527 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097007453 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096858691 seconds)
  done (took 60.550948069 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147233094 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102195109 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114638976 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096980964 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11280487 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11723439 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096725194 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096913687 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116416836 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106076534 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095785377 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114705797 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11247486 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135017969 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114468258 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104906801 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117045106 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098950904 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096301927 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115285202 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110828482 seconds)
  done (took 3.167455358 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116150669 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109540938 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126480859 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1103801 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102096451 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126780804 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106583127 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12732185 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110161078 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103766362 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130220073 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107041038 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12468214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105339246 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104866513 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125342294 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111282574 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121879327 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.10934434 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107369875 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124233829 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107862809 seconds)
  done (took 3.365996161 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129785697 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099847505 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094481477 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115507791 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100334583 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096058095 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119506814 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097592956 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10500352 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.110778245 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089376404 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092630329 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094910633 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115321362 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091980427 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096922664 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123171639 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100859168 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101831405 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09466738 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107089263 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096393054 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096850534 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.106453767 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103142776 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101743796 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.115235998 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100377157 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087699469 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098833726 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116032907 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091053864 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087662532 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.106551189 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088317494 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.099714944 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098282139 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.116260692 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097300519 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087084138 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.116229946 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103224203 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087358027 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.116233033 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096820809 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091360681 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.098428413 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.116654178 seconds)
  done (took 5.747284371 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130395059 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162912327 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101876287 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135120068 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131823506 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106194719 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.121164539 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136763982 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098975919 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121412944 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111967344 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.130900169 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102626099 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103983264 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.123534414 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102366942 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101423156 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11908633 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106179816 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100919386 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12550771 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103846034 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109015851 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130036081 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.339646218 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099480367 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121136247 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105281591 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.127209749 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107244077 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10348406 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123191456 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.110960047 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102513499 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119148764 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101788591 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110962106 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121677481 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.101451652 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097602958 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120116068 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103151255 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100986582 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132266759 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101822802 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.122457787 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102627402 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098396065 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126911294 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10258176 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.105299814 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.131703184 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102569275 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100339017 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12278326 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111317096 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100586291 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.121297057 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.101887465 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127609728 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099343437 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104402386 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.130774673 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101932336 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.104710536 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129902738 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102468913 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.101861366 seconds)
  done (took 8.88743817 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135067475 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104890667 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131375561 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112235567 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102940418 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125288758 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104150668 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.123432413 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105627591 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108782326 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12245613 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.194921086 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122123858 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108872973 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102213057 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125373815 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104185596 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103271045 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124802424 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104219638 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122403543 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112299327 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104570721 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131705837 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11583563 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101309112 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124538263 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104740872 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13104071 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106221979 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114571308 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125149469 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104821408 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131489954 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.117377629 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103302421 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118610379 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10569218 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104529737 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12357129 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10208622 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111650751 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125854599 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103108814 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104339365 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12505151 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114297738 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13541239 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110188203 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109844016 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.124549533 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112928174 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124157473 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106347441 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112352701 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140611341 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111574084 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132393798 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105465497 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112670747 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133300025 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.119144761 seconds)
  done (took 8.10813274 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101611205 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097595989 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096766148 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118311414 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099591174 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097790108 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097212787 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119527451 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097086742 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097332716 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11831892 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098231758 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097714426 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09777531 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119288022 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098127901 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097529663 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117874822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09893906 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096659828 seconds)
  done (took 2.926137448 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110967036 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115212324 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119402354 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106722092 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099876497 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126176332 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100932439 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100615533 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099615481 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12130977 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107198371 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126613575 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101572618 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10582491 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128724422 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107678488 seconds)
  done (took 2.6427657 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120742831 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115931602 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185209961 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103966751 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.120996881 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109329701 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099097122 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123255049 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100895228 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106361539 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103763377 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124938135 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10067732 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101343037 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12235925 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103562868 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099350177 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125514316 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100669433 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.182285894 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105031602 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102921108 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122860298 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105394431 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101181106 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.1258359 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108250487 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099626999 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123202537 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103440388 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102437993 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.127792111 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101378671 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104959842 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10164996 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.123345839 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100681955 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101284118 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124773485 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102800775 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102065793 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123885622 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101178976 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103911907 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.120236299 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103194527 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100147611 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127047836 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104044486 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103871184 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099785473 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131360898 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107452996 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129806806 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109503415 seconds)
  done (took 7.072736129 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115370597 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101236764 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132866424 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100111171 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101466035 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101683026 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121952671 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102716388 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102130453 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12021436 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103170887 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102244578 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122367312 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103385245 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101407728 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121797502 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100039257 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102398001 seconds)
  done (took 2.824915135 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109832367 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100389232 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104788205 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121900022 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100784633 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099977209 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121954772 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100655172 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099442966 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121950658 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102339144 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101223838 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099020141 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120718125 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101887562 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099864546 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121098554 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10161818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100583972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119724047 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102745781 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099400059 seconds)
  done (took 3.223806885 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115155083 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180662546 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107426453 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.18990349 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097956892 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095142175 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128574621 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098239407 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113055707 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117959573 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096656957 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095497334 seconds)
  done (took 2.307041254 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132234346 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13920828 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123422386 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102597945 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109112784 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126097932 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104872819 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104052323 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134663045 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116330915 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12650397 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113781777 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112259487 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134801057 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109272592 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130428197 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10683859 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105817639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12260421 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120862731 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105631468 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133868261 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105782675 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126484175 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107036946 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112481683 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133162434 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117089627 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126161302 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115249204 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109783484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126756702 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113595021 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136020532 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10311966 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113024387 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125210269 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119752707 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110042422 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135380689 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101311118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131012369 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11403386 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109042039 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133813432 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10587189 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109856023 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127186936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105637635 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146044676 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11039675 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133415826 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111477468 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113630969 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135077656 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125280265 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137745976 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114502835 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10897501 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138641328 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11451485 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1313599 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113346716 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138013469 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111430009 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114061334 seconds)
  done (took 8.761920903 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14379491 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101992809 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126863143 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117577857 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134647195 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107795427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108239846 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127195891 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107166795 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102325386 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171987602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106183739 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133259503 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114787662 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105801403 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127428576 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107611751 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11440163 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123753143 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126655317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127072482 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115697778 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113065748 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135637444 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117550845 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130633141 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105731246 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105668696 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127280875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107399231 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110955147 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129450588 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114328084 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122748485 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115969426 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106185793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127682628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112877865 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105258701 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132127985 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11416304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142132052 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107018713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106657307 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138758358 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105858634 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126801994 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104610717 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107047704 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102935592 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139256246 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118063141 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137942024 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11439838 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127459546 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107084674 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106956965 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127400607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107007728 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109663449 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137148722 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106262942 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147867521 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10586758 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10614934 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135757889 seconds)
  done (took 8.746109303 seconds)
done (took 165.148737302 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.14801241 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.183899496 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143057504 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176332856 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.0935553 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12746559 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146845739 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146156452 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091968536 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114209996 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093569433 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094598309 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181475911 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093708667 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092545879 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116783686 seconds)
  done (took 2.917905339 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.188415503 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30433918 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108289074 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118179516 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100124786 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097963244 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118891575 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101028578 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097423948 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126249024 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099103645 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093844303 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126291631 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095191345 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097708125 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.117919933 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106075135 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097575685 seconds)
  done (took 3.072732115 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120957178 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140497097 seconds)
  done (took 1.142084198 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132183543 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212324035 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26928437 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168550369 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118803341 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138013552 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14853338 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131082176 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.178098212 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13205091 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110767303 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096199829 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145423781 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103649598 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134650952 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097387814 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126831438 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133630227 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112153491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100266139 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141129862 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101775161 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102471088 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13580862 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.166875426 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133247757 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101769681 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100269284 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123152664 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11224376 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.125737992 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115211667 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108932651 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175641073 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121784939 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.151653397 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.125424657 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.099777278 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110915594 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119871621 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103520866 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101610857 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133115123 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096535057 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100895038 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126204902 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101834334 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10042098 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.127834636 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105478553 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128201917 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10561265 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.171030098 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106127286 seconds)
  done (took 7.753954018 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.835848544 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141969949 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098678497 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.98452974 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149576429 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113677131 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.827303142 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142841098 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248313366 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.858642902 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113945854 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131883045 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232176195 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.24572195 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.176423808 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343358259 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.696852894 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113448571 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126953 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161631433 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106417962 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147048736 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118170694 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42764875 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098335581 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120281773 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112351004 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110694061 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173189435 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.119404867 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103913661 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192594098 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.256667903 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201339444 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121218436 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097831467 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097106202 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17979682 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266639003 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212714408 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184091446 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095038861 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118581846 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109196839 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116877022 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116134742 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155317663 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.18589678 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186349021 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102185294 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133410781 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109078594 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127192513 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152541096 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118445473 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343714735 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.348038226 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096822959 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129025313 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113281199 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263161421 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121608769 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231193997 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12385389 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.207261726 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119358607 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796017261 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159477826 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119622348 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106112135 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126187343 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105468851 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106133578 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17822002 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.379350406 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133887831 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103475114 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120434583 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221867812 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099952096 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097750163 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17812487 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099253154 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127541455 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113993085 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131533147 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164088215 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25773944 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13212523 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109042181 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103326983 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131778283 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100798096 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.227002586 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223092677 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.170897358 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20598561 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130535645 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177638467 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.157343591 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128723391 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183611899 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10759366 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113959514 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128572811 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21722452 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151935175 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103541483 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103275759 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12826124 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136515143 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1020675 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130770903 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.183822967 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459580427 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158787616 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.116959535 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104721556 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108552721 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176833621 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105059812 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260066654 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130821118 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.178312748 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107943255 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095130438 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126920919 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156228466 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131097651 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107364403 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128018518 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109406889 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.267605577 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218316328 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112288185 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237405017 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19010893 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105935425 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188845016 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10566893 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183691392 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129426317 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108290452 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099240218 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789527098 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134858929 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106384729 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125697482 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179162803 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098480354 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124133299 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099938905 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095367602 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791373292 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124909848 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09799625 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101515554 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128527596 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107794647 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105547341 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126348111 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173767069 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240661043 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111128744 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128192663 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100529924 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.174747245 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100867932 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099218318 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121178401 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101491452 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107517925 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125586838 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102795377 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189228624 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.171789527 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223820243 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.551920548 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100067654 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098598239 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254029704 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100115748 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310227927 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106305225 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.247904099 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160664171 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11815578 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350359767 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182525318 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.180631057 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.123387536 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.165208218 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118502242 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109568756 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.175589766 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100830157 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105911372 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172704153 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13405365 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113185488 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.189565654 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120658669 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223251051 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.117993698 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.162961574 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12219076 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107955316 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3141462 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119899807 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11964003 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17646368 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104268158 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.098595972 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.708064813 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.122303966 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1114902 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106085392 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.248643232 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.158145264 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130310399 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109136806 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134589587 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.153885582 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228299626 seconds)
  done (took 45.313389993 seconds)
done (took 61.078229235 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294054449 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253581064 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.299022811 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206915853 seconds)
  done (took 2.037468633 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.258318104 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159472259 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.22872902 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096769747 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.238085392 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09640712 seconds)
  done (took 1.99321921 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.485144057 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.361223554 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.299396537 seconds)
  done (took 2.058664077 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251498755 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.241630122 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346233944 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.409844302 seconds)
  done (took 2.282249217 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.262536599 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.124508558 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125537474 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.205472844 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.224795914 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209582984 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12753862 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176582856 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129159585 seconds)
  done (took 2.549868381 seconds)
done (took 11.830840152 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.358350735 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.205312953 seconds)
    (3/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.242495585 seconds)
    (4/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.26822072 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.200318504 seconds)
    (6/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.265783595 seconds)
    (7/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.142863854 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.190381591 seconds)
    (9/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.251335691 seconds)
    (10/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.184226198 seconds)
    (11/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.33401094 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132378631 seconds)
    (13/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.178710591 seconds)
    (14/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.23202767 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101371897 seconds)
    (16/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.105742886 seconds)
    (17/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.321557171 seconds)
    (18/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180853339 seconds)
    (19/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.290634674 seconds)
    (20/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.182086701 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109796491 seconds)
    (22/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.173215721 seconds)
    (23/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132892944 seconds)
    (24/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118425334 seconds)
    (25/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111120347 seconds)
    (26/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.261336809 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.19756905 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.10047889 seconds)
    (29/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.128606526 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128017456 seconds)
    (31/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.150749381 seconds)
    (32/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.166226918 seconds)
    (33/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.204261518 seconds)
    (34/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.205461744 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.337004396 seconds)
    (36/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.324263304 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104984004 seconds)
    (38/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.292313103 seconds)
    (39/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.076990266 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.141209155 seconds)
    (41/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.220082885 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.104132228 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.154523436 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109736507 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.213827894 seconds)
    (46/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.183741133 seconds)
    (47/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.139993616 seconds)
    (48/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.103633801 seconds)
    (49/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079629446 seconds)
    (50/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.183291693 seconds)
    (51/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.128056871 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.0784316 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.133741857 seconds)
    (54/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107164612 seconds)
    (55/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.222986134 seconds)
    (56/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.077017541 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128168151 seconds)
    (58/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.229946134 seconds)
    (59/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.200188851 seconds)
    (60/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.133979904 seconds)
    (61/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.146178021 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11138233 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.125599246 seconds)
    (64/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.1799174 seconds)
    (65/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.238329984 seconds)
    (66/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077557363 seconds)
    (67/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.07652372 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079078032 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.127173549 seconds)
    (70/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079003187 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099797865 seconds)
    (72/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086196338 seconds)
    (73/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.084450912 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.100519348 seconds)
    (75/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.177723571 seconds)
    (76/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.076780448 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122312579 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.125541724 seconds)
    (79/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.143114472 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100643365 seconds)
    (81/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.210229757 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101135293 seconds)
    (83/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.252866917 seconds)
    (84/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108708772 seconds)
    (85/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.20591739 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1226664 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10469687 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.145040926 seconds)
    (89/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.203892237 seconds)
    (90/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.17150682 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.126441897 seconds)
    (92/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.077973589 seconds)
    (93/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.078995868 seconds)
    (94/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108465358 seconds)
    (95/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.210457104 seconds)
    (96/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07824541 seconds)
    (97/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.077172234 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.077425591 seconds)
    (99/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102734097 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078202338 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102025819 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09842946 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.131811479 seconds)
    (104/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111415151 seconds)
    (105/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.150388998 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.170148445 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102261124 seconds)
    (108/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.169271095 seconds)
    (109/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.13449618 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12624332 seconds)
    (111/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089007973 seconds)
    (112/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.088188804 seconds)
    (113/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.134745955 seconds)
    (114/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078619365 seconds)
    (115/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.172650747 seconds)
    (116/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.122488657 seconds)
    (117/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.08620495 seconds)
    (118/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080068271 seconds)
    (119/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084878944 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.078297579 seconds)
    (121/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.171107266 seconds)
    (122/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080136584 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102061385 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101636952 seconds)
    (125/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.103511309 seconds)
    (126/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100195927 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108830617 seconds)
    (128/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.081480528 seconds)
    (129/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.132029973 seconds)
    (130/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081148347 seconds)
    (131/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.077466443 seconds)
    (132/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086710435 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.077218787 seconds)
    (134/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.133363401 seconds)
    (135/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102723493 seconds)
    (136/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079277443 seconds)
    (137/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.084859396 seconds)
    (138/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.103271521 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.141964799 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123992504 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.125647761 seconds)
    (142/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080100303 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101887387 seconds)
    (144/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107463911 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.134439391 seconds)
    (146/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.183773039 seconds)
    (147/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077889059 seconds)
    (148/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.159036952 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103448383 seconds)
    (150/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.080379361 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.226755475 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102491044 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.107756217 seconds)
    (154/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.100817852 seconds)
    (155/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.1479501 seconds)
    (156/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108751857 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098106881 seconds)
    (158/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.103779294 seconds)
    (159/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081032245 seconds)
    (160/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080600094 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109252037 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.137527533 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125685656 seconds)
    (164/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18553618 seconds)
    (165/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.101165494 seconds)
    (166/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087508691 seconds)
    (167/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10249719 seconds)
    (168/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.107952496 seconds)
    (169/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.101170243 seconds)
    (170/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080448671 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079733296 seconds)
    (172/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.148675302 seconds)
    (173/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.077374605 seconds)
    (174/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.101370298 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078379951 seconds)
    (176/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080193368 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101701506 seconds)
    (178/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.125735373 seconds)
    (179/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080578093 seconds)
    (180/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.078317616 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121427537 seconds)
    (182/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136026463 seconds)
    (183/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.078176351 seconds)
    (184/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078220623 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101453307 seconds)
    (186/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.079565742 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.103719064 seconds)
    (188/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.078760552 seconds)
    (189/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.079701051 seconds)
    (190/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099633349 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.122963235 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0787235 seconds)
  done (took 26.901955004 seconds)
done (took 27.825998046 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.208111456 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125874488 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109043987 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107573497 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197763798 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113951331 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.144410356 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11109079 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116488566 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132570385 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100073994 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118600864 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107355527 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.198075449 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110488489 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126531618 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100445348 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115797012 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.145437463 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121844377 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.198693334 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103138914 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.1154208 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124969312 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.172967877 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126477789 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107152707 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107722028 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.141500575 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110394112 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.106573571 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122844959 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.120408429 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119432352 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122694704 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11058863 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100111312 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086418671 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.133970064 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11101759 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.118237785 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133732499 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.10945859 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100634447 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134696386 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109268922 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10097986 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.135706044 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099413077 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.107608897 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126639425 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121412639 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.1082959 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.121448614 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100495339 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.101509286 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.139802951 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101893775 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120953047 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099641967 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.125992652 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101544043 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111113267 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124140198 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110959214 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10074858 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.133485809 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112955727 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10814723 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125982365 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102134941 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108433884 seconds)
done (took 9.66734906 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108666964 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145574098 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.197785228 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.205925189 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127091551 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.139174372 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116048034 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124826469 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137502574 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120277293 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136689508 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15546772 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179550364 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140804509 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115910044 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.110984263 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137109827 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109461548 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.204194066 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124772989 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150444445 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118706577 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129383049 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142219333 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106097907 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134212847 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132922194 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112221145 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10346448 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137747256 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124714323 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103095576 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132484039 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124321107 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.145350717 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117053816 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.114796849 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.13600706 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106034508 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105091418 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136587844 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122811431 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105273583 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140327221 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.113242495 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119466061 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.135574857 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120065234 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105146165 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.135102247 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10680222 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13180453 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14194854 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122860276 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116174836 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142601408 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119361195 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118043879 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132175309 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118366606 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.104122697 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129633764 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106947146 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126070789 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133551472 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119014923 seconds)
  done (took 9.475974958 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129308552 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135203974 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139408475 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11601981 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109990226 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122753947 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099333443 seconds)
  done (took 1.825217073 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104785702 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181378602 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205491525 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205120539 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.177011091 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.213986974 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147923516 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101318335 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133057564 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134899011 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180839073 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.233548168 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109794658 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140575808 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.181752405 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124764742 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.209168669 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101694091 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113525343 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207094979 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116983726 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.155322111 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114793303 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100314431 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.202023123 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100937383 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.258561324 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117782545 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135112617 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115131659 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113608457 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203540204 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.203163294 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114200776 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107883434 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.206844231 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.199237949 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114247415 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.216860962 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104537828 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.201334183 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114371111 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114830531 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.139937862 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116231702 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.191006485 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120032278 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114510689 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.138656904 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186411973 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.135782662 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.180460401 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136685607 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115175168 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110589666 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141104873 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122639379 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114784003 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212431158 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117334746 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.204536642 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.207071441 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.176398991 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.206113501 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149216727 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.182131834 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.199643401 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113489661 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108020578 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.142395402 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.205541443 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115412388 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114422234 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.195595492 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118324636 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.208166931 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.205224243 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113097656 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11255824 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.129060825 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114777898 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101422157 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.197977841 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114363929 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11250161 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145485235 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11265487 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.140634628 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.10769652 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.122707522 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.139056621 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113127596 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119135039 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.138577262 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117325646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211483364 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111172878 seconds)
  done (took 15.434915363 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108474189 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.1024315 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106119279 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12845682 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102762403 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102101479 seconds)
  done (took 1.642076045 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144457646 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11578278 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150427214 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117314933 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.186272079 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.187624542 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.214352145 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109617177 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157430134 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125825526 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.211564662 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.18825082 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.214254457 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118080736 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.215761272 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117608523 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.216073963 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114575749 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151941479 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113562084 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115935071 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146638917 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113206247 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.203870144 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117414955 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143078534 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112035919 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125126787 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149437736 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11066017 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118862107 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141379762 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109591406 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110050713 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.217170712 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107724368 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139058547 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119143735 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117963469 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143237408 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.215080732 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115865457 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121907101 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.143561335 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11134361 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.107768385 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.145345055 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111047805 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.218475348 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119450203 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118306081 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.143365568 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118493805 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118303055 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.13547792 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111235283 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.143969746 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.194238888 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.143378581 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110612343 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11692663 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.142047491 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112260996 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119800165 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143032017 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119067238 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108589658 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142882106 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114032187 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119117941 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145217014 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118516674 seconds)
  done (took 11.077407144 seconds)
done (took 40.414900107 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.543072736 seconds)
  done (took 2.532390904 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.91227454 seconds)
  done (took 1.90150372 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.554677115 seconds)
  done (took 18.57208061 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.51508777 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.587977598 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993047871 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146595748 seconds)
  done (took 3.231995501 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.988979211 seconds)
  done (took 1.993821636 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290006641 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259151831 seconds)
  done (took 1.54436877 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729961292 seconds)
  done (took 1.734681254 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.524140096 seconds)
  done (took 2.519019574 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.344606047 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.172420217 seconds)
  done (took 1.528136755 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.605175437 seconds)
  done (took 1.614745993 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.411120536 seconds)
  done (took 20.421155073 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233658769 seconds)
  done (took 1.244011118 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285622471 seconds)
  done (took 1.297472199 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.511434156 seconds)
  done (took 4.52224999 seconds)
done (took 65.659083075 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115987728 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115888476 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114758994 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13796035 seconds)
  done (took 1.487643387 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120580152 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11579565 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.142903439 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.115513768 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121675769 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115815777 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142008844 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117394927 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114919212 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143250685 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116546552 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115289686 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143909232 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.114594634 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113729086 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144230771 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119567995 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115506653 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143184662 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118426264 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116060848 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143017295 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.119504361 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119039506 seconds)
  done (took 4.007004675 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116509541 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106972633 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107965627 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.12992476 seconds)
  done (took 1.480145141 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128023612 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128572894 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151458748 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12462442 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127394219 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153707151 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114747295 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112254931 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142308324 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125247962 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131344477 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155643146 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127024668 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.143008692 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128653643 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110099373 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117140382 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152590968 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121548196 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149202383 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117535098 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122488368 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146462288 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.12634684 seconds)
  done (took 4.174421468 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190951055 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125278458 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.165494429 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159088113 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.167661463 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112020399 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.136251633 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147581157 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.120503557 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117081643 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144859361 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161869706 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145972515 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117107793 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115092325 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146876022 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12845398 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119901718 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.182848835 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.1208751 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147645644 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.12709168 seconds)
  done (took 4.121952451 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123216423 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107968414 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127310335 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.107943085 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117365447 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.13338463 seconds)
  done (took 1.738775799 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111063294 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101285155 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101213739 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126751706 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106632424 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101341376 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.124019852 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10225555 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101672763 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101264375 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127098158 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101169167 seconds)
  done (took 2.324542454 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.329529582 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106431583 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133677357 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108972066 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112271201 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103685956 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.143910248 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105078541 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.266302608 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102340594 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141816518 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193114134 seconds)
  done (took 2.869442043 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20568208 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143262677 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312665746 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361303982 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160678774 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182901249 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263775451 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186215379 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201659209 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133356007 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208396122 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152943696 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174273275 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179068655 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159845234 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157214427 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195731164 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22445813 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139503058 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232707279 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150305588 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195865594 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207669332 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146493858 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130725746 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18571465 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116502837 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152146472 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163867836 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1864287 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192623252 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143827023 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16229167 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188077997 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253480492 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193635629 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26391308 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131951945 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191936562 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.183971569 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255434197 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162867116 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208401935 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148685972 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127447924 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209818882 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174603369 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.180563367 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154268649 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140657791 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202874122 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167462445 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199818733 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132331836 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306404393 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156761538 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14035261 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189637029 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180133234 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219920086 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196327545 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121150565 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199629175 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183334755 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231281348 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163074934 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163474341 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14773461 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160506128 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224968371 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203195638 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153521397 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224824865 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127245705 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190032646 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190194847 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150956644 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221298688 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161093982 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.141861163 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147118583 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15595579 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123686026 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188196504 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143800719 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205483207 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155046152 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.335989304 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178623109 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179521565 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182445939 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156450974 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181845053 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141294081 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102306263 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167251553 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157957359 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178810297 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124670351 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177377007 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133550143 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12210107 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172773781 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120040422 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186502567 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130143224 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186992222 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161617825 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155570415 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171409164 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170494676 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153021064 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189673982 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209803152 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129102181 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128920645 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232317531 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186036221 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130181935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197611664 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193018264 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172830207 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131541063 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18757911 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210049961 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140574143 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217182384 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134685885 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131175548 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.163612581 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189786718 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156555758 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.174428733 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124816449 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158868189 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212864359 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.14973128 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135325841 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196848721 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13227792 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121296463 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157570536 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133007988 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136566944 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.169972416 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131262027 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177270385 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157463739 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184714377 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151216844 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156670923 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191408542 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129037015 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.159703429 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170407583 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115542477 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198879365 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214890384 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127004296 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170826712 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186118547 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208801853 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162891385 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153740376 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173588125 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151787378 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117600136 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185359024 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166568417 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185329738 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182684889 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205855918 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189938394 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158127529 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171357038 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1891327 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.176554906 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178488307 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141367172 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190814949 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162604045 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.14244903 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121005974 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125294859 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158168338 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127708306 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131742714 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198114097 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184709053 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202866621 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160451472 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132247132 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210536794 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121224699 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182678509 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.196493116 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135030242 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214766486 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18000637 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197521788 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135675705 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184503739 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118427938 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149340139 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131978553 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184490604 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13289613 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13162926 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16434874 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18257464 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194777968 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16856157 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191020953 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186183605 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22139027 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117905171 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.156838424 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190839154 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185142571 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.17870788 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130205669 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.181963507 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182888114 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165709789 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210786889 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159173427 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19571186 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187498151 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.185371399 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127641323 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172089525 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154062944 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162219257 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15964208 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170789393 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127273373 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173356478 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133694423 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135670705 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205697582 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165790199 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173772492 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18269598 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16390174 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150495937 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137773878 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195221478 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140050845 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104507133 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192777268 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21766201 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144139336 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18042344 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167820956 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154348445 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315649893 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209743106 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199200211 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133687512 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133906545 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19084719 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157190851 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184633378 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202910516 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138453524 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223710856 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161136985 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167340125 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126642072 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170544953 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147383402 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162030448 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147112187 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.184847455 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138248744 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207730743 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132286009 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18727201 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16734905 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.168048118 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.141818004 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132306935 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239630969 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1877547 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16789459 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.183452975 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187097224 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175645488 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119919496 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151377656 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129681962 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203747215 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126473721 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196424868 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.170768613 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209803062 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192298624 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182030534 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136872032 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123745361 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18594323 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142140307 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211031084 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130700744 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161049824 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211797577 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127711537 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129330355 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184951602 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295581619 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143190923 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19315405 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107589611 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268104683 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151020044 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131363002 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185651316 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164752883 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.157666361 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176797282 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191390417 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134757124 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15792846 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160657241 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20389226 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183236512 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189930909 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19324371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141187007 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184902091 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156685344 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198965046 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139263821 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.169398231 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157546637 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213112236 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.17751255 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.156891634 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159762268 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188151204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162401754 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195035182 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133689364 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201513747 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123092974 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187218677 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135724024 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148432515 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153679666 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197694534 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126181986 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198933078 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163199464 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15601937 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12348823 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167923616 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158777012 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162385584 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127873864 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204609127 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124953511 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197309794 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194987186 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153851139 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1595375 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16734356 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12730711 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13409405 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165617518 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126661122 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167260059 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200119413 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.125890874 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200082058 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184793667 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15878371 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18131897 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139508784 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694658595 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125365677 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208917798 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146233831 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215315236 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145988536 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194084994 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161752559 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171058352 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160434635 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170951813 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.225426581 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18671992 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.162267525 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156310914 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137086197 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131743069 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.15775632 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14829086 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188288371 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137764478 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.157878336 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164025427 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166252628 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142073545 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134900011 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218949925 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17257848 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179684382 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206022321 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135107411 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194832447 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194821385 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126225387 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.186094269 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167270216 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163309524 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146959373 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130447274 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.16179162 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197372286 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.148856092 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153998581 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194709295 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160386784 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19173679 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130068193 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197630272 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136578327 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194721233 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123877839 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.17829096 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164139586 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158781372 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125592089 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189498924 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154342234 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.181752884 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139516637 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168350807 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211195237 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.119734653 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156704586 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264277675 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182096994 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184158109 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163719077 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131987922 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168069218 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151884007 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.189203093 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162861867 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.154593427 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126776323 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140411153 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180859735 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141796032 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189326894 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167831107 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182740516 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202521279 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131412041 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274918656 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164860455 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162144941 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144504559 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125512998 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135364497 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159323797 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137361631 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208697204 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227404459 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.155096166 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.170352363 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132260529 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121563594 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155590587 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160877595 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173916746 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161214886 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170289584 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104278277 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135576583 seconds)
  done (took 83.081375639 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162849866 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149171774 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.162916436 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218287572 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192014791 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.284849945 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226040467 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250951556 seconds)
  done (took 2.756604639 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120959612 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.153602272 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137352983 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.140799407 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107279399 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.42588097 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128771874 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144524033 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159817932 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.1485663 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132889569 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.525183325 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113961819 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.141132661 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118601387 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131428684 seconds)
  done (took 3.929245456 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.269900214 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.066048906 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.973526167 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.295085177 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.251763847 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199127399 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.765822008 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.185614303 seconds)
  done (took 13.10878162 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149738938 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134901175 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.356831204 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.254044625 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.147884695 seconds)
  done (took 2.153776482 seconds)
done (took 128.242390342 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126320226 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122117414 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121953742 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149741134 seconds)
  done (took 1.615756849 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.183103286 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090991951 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093579116 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117797338 seconds)
  done (took 1.59212701 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.434918978 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091193094 seconds)
  done (took 1.66095915 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.156146762 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135137834 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164169979 seconds)
  done (took 1.575303678 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136748202 seconds)
  done (took 1.244177463 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123624178 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.114154551 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.232349389 seconds)
  done (took 1.582534872 seconds)
done (took 10.385848868 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123123591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.403739295 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430067056 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131423255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709256938 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.422992338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.016559335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171248498 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170861414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13472495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129309985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685487385 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.06406508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.353329051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021930091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.4758843 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.690840748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10886386 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142366279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11011759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.995275349 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133956217 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109568325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109052551 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715358915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418077313 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106369807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.485362114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106862696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11011785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424253757 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108780238 seconds)
  done (took 17.420528396 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122607192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165735511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142928376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110320768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111590334 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.134882563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120098714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119381845 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202337038 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107660162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157163226 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107739308 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1126144 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135925115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132972806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107158459 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138498722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111397067 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115303422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136614337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.12923191 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106861617 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13675312 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110626514 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108053655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157146146 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109317631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11964109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135415522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112785109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11285817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135615829 seconds)
  done (took 5.185440877 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161090201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171364369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144918536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143451974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183391936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110503911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220315022 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145520173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200513564 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110112885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128668052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135924917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148251327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.10913399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160652271 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108931041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110361244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138908706 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116821743 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110040537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157127142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10777587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.134298778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112616844 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109616578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157081837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109469582 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120119938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135635833 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112957911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113279709 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135494343 seconds)
  done (took 5.483912867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12793341 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123646868 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131599623 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160123379 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119264271 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122941023 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150351706 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118249345 seconds)
  done (took 2.17224973 seconds)
done (took 31.376174655 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.1386624 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126837139 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126410356 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.14963587 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.184162612 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.141071222 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124794015 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113317949 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148390957 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128916924 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108127163 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.113307692 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.153939238 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.117288397 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.215144898 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.121458409 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.218617492 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187202786 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.141872314 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125426134 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114405742 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.219809816 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118183641 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.113623602 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.22149592 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111849786 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.211148257 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.116413746 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.144144112 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111201878 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.185071773 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148281075 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113209774 seconds)
  done (took 5.925716566 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.20683068 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.11838579 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146515418 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117817356 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.116883079 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.143951371 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.204091288 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145282702 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116636578 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115940743 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116062102 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216548574 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122014291 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.140852906 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119632368 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110739116 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.232449656 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119585236 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108716095 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120533464 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113340603 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116129502 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.244190972 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112704469 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117719896 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.145721823 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120547065 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120478696 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.147407958 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.119915955 seconds)
  done (took 5.327015212 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129584638 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130136432 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.160509911 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182313587 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.142719176 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.15736538 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136116589 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131016001 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1669539 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.110710034 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124402236 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176116006 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127559538 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.119900176 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143164483 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129956496 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133062589 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139769697 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118414765 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127908914 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.159469465 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129049077 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134334533 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14742831 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109890809 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116928946 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.148823171 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125326774 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.117603372 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.152166121 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.113400059 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.113331393 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.139958491 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.146029332 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111673887 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.151949619 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137323061 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122134873 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.153295681 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.141300241 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.1137404 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.139611179 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.1367555 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165554911 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.140679144 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124752221 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121818186 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.153121583 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.109880422 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128903753 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.180601823 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.110663301 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13053241 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.137631285 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.109396707 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118417042 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.138537055 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115150831 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126311424 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.140277862 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136509626 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.117645108 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120880379 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.141848235 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.121549525 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.10913925 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.138116189 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.114412237 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136370169 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.145707701 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148287498 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.110322451 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.150539672 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.123623172 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.120120144 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149216905 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111792021 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121223765 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147481272 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.11838529 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.122663014 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.112517012 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.143001525 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128010161 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.130813392 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.153334288 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122594845 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.123984415 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.142786101 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11250387 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126466034 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.140069806 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116276488 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.123171785 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.139279997 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115566815 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123530734 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.150173304 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110136215 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134754867 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.141844175 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111972821 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.134583353 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.113221096 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.145476634 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.120694903 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.178851769 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112130933 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123247021 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124270207 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.139919806 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119071794 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.114304842 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.139254064 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129950123 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125100636 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.14502966 seconds)
  done (took 16.614553253 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.317639518 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.268969213 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208148247 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.300374001 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124096739 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.234404212 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.296583582 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.298168739 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110675002 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177709744 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162905567 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.267396207 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14113038 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.14043857 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.299716711 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.351651652 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.169971797 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149174086 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176371076 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125631007 seconds)
  done (took 5.463416562 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137276644 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146356953 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163710873 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141720496 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121287168 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.155268081 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111921348 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13281819 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151423007 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12110776 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113855348 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156633846 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123557534 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127039814 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155617909 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14971324 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118658635 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.14554802 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134223923 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115091203 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131739272 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137985302 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120056634 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164652571 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129338678 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.149838441 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.111797089 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.116614805 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117887132 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.14911268 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.116016092 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130053321 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147472443 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105623241 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.121839882 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.154986622 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.118699221 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.113919738 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115806157 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.144107116 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126867165 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12467913 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.149253782 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099942767 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.129729888 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112161574 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155130193 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124817933 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10634864 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.159306479 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125765209 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124324966 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.147575607 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134397423 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118516746 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.155330103 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.123821074 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125634996 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.145211228 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111976811 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.109493053 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.143652379 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.121733461 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.125433857 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12193028 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.16002217 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127933627 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.138472984 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117331954 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11568194 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.114449985 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.154687278 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133233223 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.14782961 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120045804 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.123722025 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120747236 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123462889 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12214267 seconds)
  done (took 11.52206382 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144002632 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.118563626 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.157486083 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.149098796 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.122074003 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.11697847 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.147880252 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132350923 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123738144 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.156032544 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124616272 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125028663 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163255055 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.121632461 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117429725 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.157166561 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123516717 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149588441 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159488681 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141074802 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.151789755 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118520695 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124795988 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123098089 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170702711 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123432753 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167469618 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.124909328 seconds)
  done (took 5.014635189 seconds)
done (took 50.995422494 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.302661461 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.466876803 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.248672722 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.246862869 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.240932015 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.269149861 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.243847627 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.252601161 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.575345353 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.217425293 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.248129902 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.248597889 seconds)
done (took 28.710575169 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.316855825 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.81242866 seconds)
    (2/2) benchmarking "String"...
    done (took 1.543132493 seconds)
  done (took 4.492030879 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.243322903 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.236190889 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459668706 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.238928753 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.238865228 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.238890468 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.240630686 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.253854708 seconds)
  done (took 16.04546976 seconds)
done (took 26.238180895 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.282198426 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.405332405 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.471766386 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.239772814 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.237886258 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.247676545 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.240103082 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.251691455 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.246669794 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.243842166 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.625879031 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.498847179 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.252909318 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.615926984 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.236379972 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.261014608 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.250390715 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.463611266 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.239701373 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.277483276 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.218397147 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.229935939 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.266717795 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.240679973 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.242272487 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.246713628 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.259470791 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.236565053 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.409213686 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.27754039 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.269761752 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.240748081 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.249402321 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.243120276 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.238569083 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.25316649 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.41530952 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.243865928 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.22609821 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.24960425 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.409482223 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.259399832 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.239427367 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.24968208 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.239438422 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.277873258 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.2291103 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.34429887 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.261447936 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.260442572 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.323748183 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.599079191 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.250175504 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.24042589 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.24668126 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.446053695 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.243704889 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.277903837 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.262087764 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.241386318 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.240665854 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.254100004 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.288113228 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.249817829 seconds)
  done (took 145.92396747 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.241980846 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.245064716 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.244213811 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.301065487 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.244001493 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.244392383 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.240212448 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.242576527 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.242926943 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.243325365 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.245231006 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.241521322 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.242306834 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.187777376 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.250918179 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.255238618 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.241343269 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.241331593 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.249551343 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.24375438 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.241712548 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.242808853 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.257176065 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.241673125 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.276951182 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.307728254 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.253798188 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.259386087 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.251037528 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.242265181 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.27044052 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.242641718 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.805441975 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.111863162 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.252636193 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.247074694 seconds)
  done (took 81.534219883 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.243147931 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.242738952 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.241807437 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.272410834 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.241908063 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.764539129 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.765487159 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.945175033 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.292743817 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.422368582 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.444177684 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.23788467 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333414418 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.253351044 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.24325582 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.256352365 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.268723138 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.24255299 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.24139935 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.762051347 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.254349354 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.438109615 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.406781809 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.253507494 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.27105906 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.633347724 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238572049 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273749559 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.56594211 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.282129812 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.239108941 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.541020086 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.600659014 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.239954844 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.241773738 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355124904 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.242034282 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271566307 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.24172236 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.52184628 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240582545 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.242961276 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.246253767 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.837356078 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.242767091 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.757924783 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.243008278 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.123749531 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.237450178 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.243118738 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.606717648 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.772808517 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.238995042 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.240588582 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.242786077 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.241272926 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.241765018 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.271229145 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.560852454 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.330936455 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.24327081 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.243579785 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.272751969 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.238975329 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.417196547 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241170589 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.072729707 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.295191789 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.477502047 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.741167815 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.239943676 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.242209754 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332708239 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353502603 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.235689668 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.239163163 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.241381314 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.239961941 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.348119381 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.23789495 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.24077444 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.652133852 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.399145856 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.251571742 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.35170126 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.332831623 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.236514242 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541433636 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.238574341 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.241373047 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905236682 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328651877 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.238251841 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.240474816 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.241531539 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.656628405 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.735782488 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.393528 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.239846899 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.849402576 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.242245683 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.067188339 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.726418236 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.838822056 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.240334161 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349666999 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.402714078 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.250985606 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.240782123 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.342654249 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.242416246 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.300862649 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.241510841 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.637419845 seconds)
  done (took 378.52906655 seconds)
done (took 607.126966058 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.096830869 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.041116601 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.192328006 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.053421337 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.041690348 seconds)
  done (took 11.561471515 seconds)
done (took 12.703212234 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.415957101 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.413407954 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293008459 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415183254 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.267432851 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.435548822 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401644444 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.260385968 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.347535345 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.311233524 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.344109497 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.291828842 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.269405047 seconds)
  done (took 18.606879665 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.504719785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.248662536 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.310954348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496429508 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.288983796 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519577042 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.568018747 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.25356169 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.394471387 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259420633 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259481752 seconds)
  done (took 18.242144322 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512380433 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.251404447 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306337433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.484295862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.286826159 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512286085 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.551287278 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.250958154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395396938 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.289899899 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.263441679 seconds)
  done (took 18.243425154 seconds)
done (took 56.230129622 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.276147608 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.328684652 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.272281507 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.259155056 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.25999905 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.261994114 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.261872717 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.258355556 seconds)
  done (took 11.316913657 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.259923059 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.256166485 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.261352919 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.258084729 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.257838579 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.259470715 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.258604947 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.257674038 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.258179199 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.256754063 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.259496292 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.256086128 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.256584782 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.259270099 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.260362221 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.258151605 seconds)
  done (took 21.276093711 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.260132058 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.256947781 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.260707842 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.258411651 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.25851141 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.259739045 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.260283093 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.261008485 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.259155968 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.260415159 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.260218903 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.259060737 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.256969135 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.260361909 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.257198348 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.262018265 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.258572079 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.2583114 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.26461333 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.260490253 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.258596941 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.262103149 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.260983809 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.25967192 seconds)
  done (took 31.374593511 seconds)
done (took 65.10985156 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.250847111 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.24504318 seconds)
  done (took 5.63700612 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.317995707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.322181895 seconds)
  done (took 3.786198477 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.260612159 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.263021477 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.259642823 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.261448063 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.263121526 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.257478807 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.261023848 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.262374364 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.260474428 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.258991206 seconds)
  done (took 13.751019633 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.260405716 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.262404166 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.261065053 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.264475946 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.260973457 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.260200288 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.259719643 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.260830626 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.263216148 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.261642105 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.259707752 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.263295166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.263114254 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.263131864 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.261017729 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.260261886 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.259590019 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.265118936 seconds)
  done (took 23.854841962 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.274556096 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.281024082 seconds)
  done (took 3.698698525 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.403711275 seconds)
    (2/7) benchmarking "second"...
    done (took 1.303238632 seconds)
    (3/7) benchmarking "month"...
    done (took 1.381313761 seconds)
    (4/7) benchmarking "year"...
    done (took 1.369102511 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.304402863 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.286356643 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.305369392 seconds)
  done (took 10.496479331 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.266123359 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.471152382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.590348297 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.842354439 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.265236261 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.268632764 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.104824166 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.26531151 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.2710369 seconds)
  done (took 14.491428693 seconds)
done (took 76.85906928 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.246450303 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.289139461 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.258027012 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.2854071 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.603899795 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.277920132 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.250992865 seconds)
done (took 16.358338797 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.23546149 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.237915383 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.236833999 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.235338422 seconds)
  done (took 10.089921561 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.240325281 seconds)
    (2/2) benchmarking "read"...
    done (took 1.571915948 seconds)
  done (took 4.958170875 seconds)
done (took 16.195103902 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265643877 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.266793875 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.263609061 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.268304429 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.263487963 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.265740961 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.267151716 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.264586976 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.262720372 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.266413154 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.264607582 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.264168606 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266491123 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.26441224 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265868812 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266243024 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264259775 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.265331184 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266833792 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264656893 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.267084025 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263195324 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.265195769 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.267867629 seconds)
  done (took 31.516557244 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.264454585 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.2636063 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.266816141 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.264619511 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.266106697 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.266732736 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.265315142 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.265973468 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.267837632 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.267866928 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267072109 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.266981627 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.266216052 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.266393629 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264860587 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.26604721 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.267353077 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265443207 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268165522 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.264624039 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.269563265 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266293838 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.268275102 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265251405 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.266935807 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265996113 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.267240504 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.267504454 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267744006 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.267772775 seconds)
  done (took 39.145264785 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.271328882 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.268841391 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.267439486 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.268081805 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.269873342 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.268429013 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.268258973 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.26749328 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.26810028 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.26887715 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.270463453 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.268915828 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.270479221 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.270062074 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.268315456 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.265676883 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.268694865 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.269298868 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.269876737 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.270699153 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.269807858 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.266460319 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.26799632 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.266551612 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.269731573 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.26956465 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.268678173 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.268376353 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.267398699 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.268041336 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.267116512 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.266860081 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.271087747 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.268489721 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.269736903 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.271092679 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.275243161 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.272939011 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.270730445 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.267644124 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.269418256 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.268294274 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.269092758 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.271046566 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.268223471 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.272879385 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.269450137 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.270315494 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.270821016 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.270027592 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.269076847 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.270281988 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.270948678 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.26901469 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.268930007 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.269474149 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.270319143 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.271980249 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.272236111 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.270250664 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.273830033 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.267347856 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.271416587 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.268111704 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.266970996 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.268287325 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.273589815 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.272662506 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.271504249 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.270698065 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.270426594 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.270171764 seconds)
  done (took 92.559088262 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.275749845 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270906446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.270793691 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268392164 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272582379 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269448224 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271220939 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273939452 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27112338 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.271207191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27219734 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273298977 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273567156 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2744901 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270964814 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269216342 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.271018474 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273535706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.274915815 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274406435 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272356161 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275015686 seconds)
  done (took 29.14189968 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275432556 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276218932 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.274317841 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273955735 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274380827 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274690263 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.274354268 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274630969 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27307617 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273817637 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275651618 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271883166 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273860759 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272121542 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272715105 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276355796 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274485005 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278876441 seconds)
  done (took 24.09378276 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.274039813 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.27109417 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.272916433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.275924768 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.275816227 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.276762862 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276555996 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.275462575 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.274262335 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.275279695 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.276037924 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273258874 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.275790748 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274480807 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274555856 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.27283594 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.277143792 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272121675 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275445168 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27788831 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.27564913 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274480209 seconds)
  done (took 29.204278718 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2757316 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274170921 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.273115043 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270605451 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.27286726 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277363798 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.276663477 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.275953066 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.277854244 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.275912937 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277167054 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.277731654 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.276743465 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27720621 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.275300638 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27502149 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277660663 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274462558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278355281 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278532359 seconds)
  done (took 26.674349762 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275907282 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276457961 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276089948 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274596592 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277144959 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274486392 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276967072 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277931542 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27436757 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277955292 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277939371 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276935936 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277968148 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279272219 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274522107 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276387327 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276847193 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278758068 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277145134 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278174707 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280083761 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278690332 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276720911 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276631368 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276511063 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279734142 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27808813 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278392982 seconds)
  done (took 36.918797438 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279473782 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.275866758 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.276214977 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.278627188 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.276583482 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.282221875 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.279790761 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.279218725 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280357734 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277567354 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.276225179 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.277332373 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277326916 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.277440059 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283177917 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.268490696 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267755001 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.26787951 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270725768 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268758121 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.269881689 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266459036 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.267746672 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259247292 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261799417 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.259585321 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261007534 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261349875 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256741975 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258995114 seconds)
  done (took 39.304725091 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.273020049 seconds)
    (2/2) benchmarking "in"...
    done (took 1.271851475 seconds)
  done (took 3.692462979 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.252122137 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252262386 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.249809088 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252406931 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.256395434 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24413157 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242868307 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246004514 seconds)
  done (took 11.135235765 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.237774921 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.245433144 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.246717283 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.247954396 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.240415079 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.231198545 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243526632 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.248868773 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23484392 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234309864 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.240153811 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.237060597 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232624644 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231230889 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232103637 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233733942 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.24008015 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237173462 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236374582 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238274981 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237967444 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225931465 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228448626 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235036581 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.225947785 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.23622695 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.230952031 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236626837 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22490664 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229458864 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.223628966 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.233016915 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.233034918 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.231269087 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.229723683 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230642727 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234397163 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231135857 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.230572133 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23246527 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231758537 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.229960804 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.226276635 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.228318663 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227089283 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.234302777 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229945669 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233498561 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.224313779 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.228828833 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.236227263 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225845608 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.232664732 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229386475 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227639933 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233234641 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.238642581 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.225986653 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.230524402 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.23292635 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.238556093 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.234798412 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227932122 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.232936311 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233118353 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.238945606 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234287086 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.237831369 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234974065 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.229732554 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.23076334 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236747185 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.231633368 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.228490486 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228553819 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.231324993 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223112007 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230686646 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226156678 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.223795151 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.228361479 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227132878 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.226253387 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229495387 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221732862 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.226012666 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.22385076 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.224054705 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.214966622 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227669021 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.225603942 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.222594153 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.216160607 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.214010449 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.21693616 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.221497897 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.21198907 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21541078 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.221769196 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.221709768 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220936357 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.214526898 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.218995177 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.221375068 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.219796473 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.220788969 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.226284079 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.213590828 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.221541012 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.224917519 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223252069 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.214760778 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.218536564 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.224570055 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215590639 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.219302752 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.222591812 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.216797531 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.22311032 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.222264998 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221519592 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.231931482 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.226240199 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.223758734 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.21760086 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.231135745 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221693457 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.219462209 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.225998308 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.222206169 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.222047959 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.218031049 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.224206292 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.215507844 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22301488 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215480479 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.22529289 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.224588255 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.222427238 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.217790288 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.220100669 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.21952353 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.217942745 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.220982757 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.22412956 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.220028457 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.225950667 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.220186281 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.219330203 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.222318261 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.226362157 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226534141 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.220469872 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.227421265 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.217387607 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226455519 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.219222497 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.224330839 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.225022192 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.225943933 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225392793 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.220503763 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22092677 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.223890362 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.220447798 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.220473789 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.224732725 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.225006666 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.224754187 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.218456816 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.224865493 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.217689591 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.221104695 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.230725831 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.225950754 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.225863046 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.220423717 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227359374 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226614553 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224513124 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.218527374 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.222410462 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.227015498 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.223014191 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.229090855 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223794822 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.227795362 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.220724729 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.220181823 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225977666 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.220268358 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.231957888 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23027657 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230126948 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.220148909 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.230947748 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.221962492 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.230033578 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.222266646 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.226121123 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.223700379 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226155807 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.21983825 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227209127 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.221016262 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.228363182 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.220153931 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.229394556 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.227487868 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.227542938 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226704813 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.222411972 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.222054615 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.228808094 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229881116 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228039835 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.219726656 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.228439501 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.217330798 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.221628795 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.230290296 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.227541622 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.22616224 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.231768878 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.223658458 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226475191 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.223555125 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.223096217 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.230046697 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224027669 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.224431267 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232449556 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.227712373 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.226131787 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231111075 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.228779077 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.224598648 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.230913983 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.232560839 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.229633767 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.22277473 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.231568339 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.228991702 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.229313209 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.228951853 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220207626 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230742075 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.231245345 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.231599212 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.218369597 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.227756423 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.220472919 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.227542891 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.219402586 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.221358867 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.221104119 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225286544 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227430779 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.227279203 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.221439214 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.227258596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.224949243 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.22763074 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.219339859 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.231458195 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.224006434 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.221885291 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.222678312 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.222747476 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.23066552 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.218059543 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.226891898 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.219929007 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230261197 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.238528235 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.226600627 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.225751439 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.229320631 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228956181 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.224498526 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.223705948 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21955653 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222986717 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.221748392 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.223552439 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.229084926 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223039764 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.226848191 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22296981 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.22602523 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.231492629 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.228675039 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.222020573 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.230769194 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.228564447 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.227930293 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.221669562 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.22804385 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.221808314 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.22361301 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.221781127 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.221903523 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232622291 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224374198 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.222794793 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.224730196 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.223335265 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.224779026 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.224473334 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.228458972 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.224630241 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.233302672 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.223633482 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.228030929 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.223495499 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228658573 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.231870025 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.224054713 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.235377987 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.229274964 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.222622166 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.222674263 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.230067201 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228838188 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.231033778 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.221294136 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.232406875 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230197834 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.229642206 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.229274582 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.230569439 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227805088 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.228789616 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230309632 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.22875526 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.224339744 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.22397162 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.231538631 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.230849267 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.229356321 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.221926645 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224579814 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.230644806 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.224879232 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.226829439 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.225386317 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.23158834 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.231522962 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.229509469 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.231407062 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.231314448 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231939426 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.229093224 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231781573 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.231144378 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.231637561 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23588413 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23201399 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.235775693 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.223921612 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.235048012 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.231070093 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.225777659 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.225781961 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.226788503 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.231524124 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.224469048 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.235961521 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.230445876 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.225916867 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.22781975 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.233842509 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.223066066 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235668314 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245451258 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.224500662 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234619475 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.231935953 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.22524411 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.233296741 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.230938566 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.225051635 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.227772245 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231751802 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237007882 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.225629506 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.234940928 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224402586 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232668386 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.22956048 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.232532582 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.234972926 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.230377377 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.229257172 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.235736242 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229185512 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.236063638 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.228180419 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229644899 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.228973463 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.235875401 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.236909542 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.226994559 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236824174 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.233350471 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.227600626 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.229409091 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.234365746 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.227335868 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2378213 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.228191532 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231356411 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.229526033 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.231420428 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.230387855 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.236465875 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.229581362 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.230343048 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236657854 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.237335528 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234944311 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.229065436 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.234556209 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.228370633 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.227039666 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.237882561 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.229597632 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237634277 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23120459 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.234600396 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230736743 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.238175631 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.236370786 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237099431 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.227848212 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.229789948 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.23628409 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234176024 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.234653333 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.23309054 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.238003046 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.228604523 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231611436 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.236811732 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.227726132 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.231033763 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.238422751 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.231661247 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.232231151 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.232564516 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238551092 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.238058292 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.232455864 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.22916895 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239084103 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.237428244 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237831044 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.2312175 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.234200362 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.231208684 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.238294749 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.238309667 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.231070411 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239046634 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.237865444 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239246317 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232506988 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.233220125 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.233262639 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23914536 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239782666 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.233567944 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.240038578 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.231910466 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239147158 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239852193 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.240150982 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.230910856 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.233032491 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.234322582 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.23546565 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.239756366 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.234362267 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.233685599 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.232827021 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240379128 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2389217 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.239073727 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.238026623 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.232707957 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240861759 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.231457631 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.235419052 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.235699393 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.232840554 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.242714052 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238930034 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234632109 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.239138258 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.245543096 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240691354 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.232869889 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.233387417 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.236797973 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241777926 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.238403812 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233399585 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.236470028 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.239371849 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24185444 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.239540854 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.236983 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246625986 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.246006978 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236529078 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.235647386 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241227537 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.244587629 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241314084 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.244240568 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.237694672 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.237313917 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.246449209 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.240314538 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241505175 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238441771 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.237090537 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.245911163 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.237242134 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.238978585 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.239670367 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244650688 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.242442805 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.238712033 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.248080565 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244819399 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245499366 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256641511 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.239991519 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.238857349 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.242766562 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236536234 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.242460868 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.23684751 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.244829903 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.243793567 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243164525 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.241961087 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.237301373 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241816732 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.240023427 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.245297129 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245016519 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.237383193 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.237826651 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.245802241 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245575712 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.244741393 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.24316458 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.242642686 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.242371848 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.237476296 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249984505 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.248036495 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.248249496 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.247249873 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.243773358 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.241414386 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.240522189 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242721876 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.249736077 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.244610864 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.244002828 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.241284427 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246895475 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.24702168 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.239150536 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.237786048 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238417078 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.245631559 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.249301994 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257435507 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.24381278 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.240595846 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245376187 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.244501707 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239234873 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24721889 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244540899 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.23904345 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.240774627 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248139863 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.246476667 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.247144605 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.242113453 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.251186258 seconds)
  done (took 734.721116552 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248332824 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247123413 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245857552 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245622791 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247206081 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246588935 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24675529 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246439543 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246667196 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.246540647 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.246165996 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247032147 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247413673 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248381592 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248626391 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247685022 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247460619 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249093207 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.247162206 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24903725 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248056033 seconds)
  done (took 27.327435366 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.248841714 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.246041512 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246980185 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248360622 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24824847 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2458407 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248824755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248267898 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246430016 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249757352 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.24708233 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248720204 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.246734493 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.248763694 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249311805 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247081563 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248684614 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.248053574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.248485297 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248349083 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250269417 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.250954464 seconds)
  done (took 28.596031544 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.247394577 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.246699802 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.241363473 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.249084635 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.249718939 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.249032071 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.247647662 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.247820909 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.246370423 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.240941967 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.24259814 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.242679795 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.246288993 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.250748561 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.244711272 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.250512027 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.250241862 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248910561 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.250518291 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.249920837 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.250217367 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.254088247 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.250300071 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.243104985 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.251258329 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.25168545 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.249284768 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.250469403 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.241653324 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.251253021 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.249168 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.243543454 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.247888688 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.244922187 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.245314889 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.25453645 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.251799757 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.249577401 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.250543371 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.251060649 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.263450001 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.252522196 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.25147793 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.254892012 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.251158966 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.245935016 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.254679336 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.250471448 seconds)
  done (took 61.087754965 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.250674754 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.252334214 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.252814425 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.251829205 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.251290382 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.250431443 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.251295836 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.252019852 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.252970378 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.252116274 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.252424179 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.252937582 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.250395971 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.25244872 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.25173344 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2548727 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.253995994 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.252279942 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.25430367 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25251474 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.251313032 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.254357776 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.252494165 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.251921415 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.252672139 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.253767196 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.254030847 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.253621417 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.254075482 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.253687394 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.254826171 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.253121572 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.253677105 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.254143528 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254428305 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.254532392 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.254059216 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.252076406 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.253058459 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.255469962 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.253688832 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.254139033 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.255485984 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.254769509 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.252590786 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.253614899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254275149 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.253902062 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.256500553 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.253239448 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.253338064 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.254498006 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.25586711 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.25609223 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.255007129 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.253183824 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.254817071 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.25238763 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.255620975 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.254935563 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.25808945 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.254879796 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.255022439 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.256832111 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.255760473 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.25581789 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.255620001 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.257318555 seconds)
  done (took 86.39307059 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256324739 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.255248235 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254879961 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256529967 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256446408 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.256248866 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257959758 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.256167129 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258278346 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256657204 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256946584 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.256277715 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.256429568 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26039496 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256858619 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257859095 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.258059933 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255488104 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255516934 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257069851 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.257351264 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.255767725 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254463997 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.257748134 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257509934 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.25699684 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257619899 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255941848 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255829101 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256341723 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256225449 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.256220085 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256597521 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256218833 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.256500717 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.257023584 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.256467339 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257769928 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.259594031 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.257499681 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257954864 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259533573 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257449591 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.257702711 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259924938 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.25926971 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.257757786 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.259727182 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.258330967 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258151667 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.257423565 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259030334 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259296218 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259263151 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.260602632 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.259160033 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259822507 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255836601 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257800174 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.259317536 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259983259 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.258756407 seconds)
  done (took 79.104432494 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259461685 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.259719011 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.260261388 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.257279458 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260201558 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26336668 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259244696 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.262059763 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261692559 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.261750545 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262602713 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262464051 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263924605 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26065793 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26176777 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263618503 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260809673 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261958413 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261700577 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.262646757 seconds)
  done (took 26.371263919 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.260961611 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.261191466 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.261978046 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261114933 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.261801328 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26218923 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.261257196 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261622832 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26136946 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263526654 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262067119 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.263216879 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261220938 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261002282 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.264074777 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.263569314 seconds)
  done (took 21.337996768 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.263900342 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.261793162 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.263939968 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.262808784 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.262768552 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.261418792 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.26344991 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.261515794 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.260704823 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.261629219 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.261622386 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.261251847 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.262816625 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.26423379 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.260811126 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.262541879 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.261781582 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.263206181 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.264452681 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.263712295 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.265856603 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.264857695 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.26152852 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.264761954 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.263818789 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.263984198 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.265888932 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.264246489 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.26386779 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.263511073 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.263173917 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.265696862 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.26440195 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.264982155 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.262893372 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.263408421 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.264156946 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.265472765 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.266015801 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.265385437 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.264891021 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.267101799 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.2649412 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.265882474 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.263772665 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.267009546 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.265338226 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.267025733 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.266276673 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.265253668 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.266430094 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.264508145 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.263699864 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.266850739 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.266835875 seconds)
  done (took 70.671955061 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268223473 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266088664 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.264660046 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.267731515 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266671931 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.267830969 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.26747346 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26976955 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267155487 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.266056112 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265768765 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.267822748 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269357729 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268598617 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26647582 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267874452 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.269514639 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268108832 seconds)
  done (took 23.964168672 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269027076 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2659858 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.268646081 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.269781064 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.267551562 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269083853 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269360427 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.268811789 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267864859 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271480504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268703191 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.270788654 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268207795 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.269415622 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268520628 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269309434 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.270096131 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268183365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269155935 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26832976 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267432439 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269857567 seconds)
  done (took 29.06551337 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.260352539 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.260987194 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.261031541 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.275503263 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.273936339 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.2612479 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.262557833 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.261417639 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.281177978 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.302283681 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.296173665 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.272080266 seconds)
  done (took 16.420736617 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271222429 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270082547 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270575275 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269639939 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270396522 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27153578 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271843589 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269616474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27157865 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270210546 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271058839 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269724796 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270665474 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273715293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269820815 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271523673 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272245639 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270687016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269560027 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270699647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272505954 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270163013 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270393995 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273915674 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272296696 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270691341 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270567309 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272669008 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273222266 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271865529 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273672978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270292455 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271323934 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269378181 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272545462 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273427498 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272747376 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271735929 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271657104 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271691357 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271967662 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273703311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275042987 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272313703 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272782861 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274946776 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272679513 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26861948 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271987508 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271772825 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273742131 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272682688 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274841027 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274375055 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2766528 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274978759 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273093963 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273377513 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272777585 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274230678 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273144975 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273750191 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275968975 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276811974 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273123947 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274094332 seconds)
  done (took 85.122299907 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275030672 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273640307 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276168008 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27660533 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27564749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272853312 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275684861 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275438993 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276043076 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275929755 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276351869 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273663603 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274019415 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274934238 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27401904 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274961496 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27634684 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275808356 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275763124 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274926103 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275416177 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274166568 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274521727 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277117824 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276783183 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275275073 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274606788 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275812056 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278781044 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275065035 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274313871 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277486873 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27585295 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275770584 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277969233 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275965892 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276897642 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276451092 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277807405 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275396674 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275263995 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276524969 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277687117 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278305849 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277931292 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276892709 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279643701 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275292624 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276670087 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275891217 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278932058 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277412989 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279877366 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27684232 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2771408 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277779825 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277673495 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27858324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277703972 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278368167 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277894499 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278210651 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276730998 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277261125 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276666063 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277294653 seconds)
  done (took 85.39856777 seconds)
done (took 1740.113898555 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.436028781 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.396201585 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.269124171 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.281809965 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.266821707 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.268320652 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.275061495 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.265174026 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.2700798 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.269521626 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.272418096 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.465066512 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.305994631 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.266773076 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.269286503 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.366912468 seconds)
  done (took 26.106782055 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.292374442 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.289856854 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.391797225 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.286418942 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.311982115 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.461758447 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.340562965 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.289929042 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.445251586 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.300169707 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.279080869 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.303278779 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.289283851 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.278310224 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.303164741 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.462910419 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.521011154 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.28152846 seconds)
  done (took 28.290047708 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.698896765 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.278634862 seconds)
  done (took 5.147564357 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.304520043 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.286933849 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.288392896 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.287301554 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.279208746 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.278136498 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.287477904 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.286557061 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.278986561 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.404013567 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.286366897 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.301666608 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.304858848 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.288252367 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.295746146 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.330384274 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.44553032 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.297533268 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.296395138 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.2950428 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.290032019 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.383965502 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.32735012 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.297913133 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.404094576 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.281698281 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.292409602 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294766357 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.411973541 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.298024456 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.291868321 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.287938019 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.292787547 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.283629103 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.799557516 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.29349663 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.310626369 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.297743115 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.298466135 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.429770194 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.288332147 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.297847366 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.28696305 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.783998702 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.433727159 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.405686794 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.298801271 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.291381309 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.292687496 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.358771252 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.291305383 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.29338768 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.349307025 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.098347098 seconds)
  done (took 82.937878327 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.332264413 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.280342144 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467942744 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.299888422 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281021195 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281739804 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.2865789 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.550293039 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.327415808 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.297179785 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.564121506 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823934034 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.293887994 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.298613141 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.217783955 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.386767236 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.285299442 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.283397963 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.284975465 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.281460787 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842335552 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281831202 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283072602 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.39894307 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.322251265 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806658338 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.289111334 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.281055346 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.284763117 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.281558579 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.787598204 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.286799079 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.35785171 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.28418455 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.551385179 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.656680783 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616455141 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.291344888 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.288201761 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.285950728 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.295826462 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799537197 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.644570393 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.281492087 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.29730018 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799032978 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.283019093 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.296683494 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.290123021 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.540192383 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.28440566 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.286485069 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.286807663 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.285033621 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.285088506 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.306566874 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.411137065 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805612851 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282403741 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.28482657 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349626162 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.290239611 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294924799 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288165291 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.302402046 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.641905667 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.463864341 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.291551885 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.641015867 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.774814442 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.287900618 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.843773187 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.288790005 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.301590315 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.292642115 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.302543805 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.282176913 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.810139252 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.31169648 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.283590886 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.624458981 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.286991278 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.567906784 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.300290992 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.287634174 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867479448 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.288975173 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.300649285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.289181791 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.289353605 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.284099542 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291672676 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.556641405 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.30537212 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.289377106 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.287630802 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.313580008 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286125732 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.303995891 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.297268264 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.844417221 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.302110431 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.291223395 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28767555 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291147262 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.290829336 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.288800913 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.294111994 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563824029 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.288900395 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.290331362 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.292064171 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.286952201 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.295198137 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.379814717 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.2989947 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.588055883 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.29294819 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286118694 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.287292432 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289513105 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.320821403 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288874943 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.290986198 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.147814113 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.587002297 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303100936 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.288174261 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290505697 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292838786 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.287549433 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291236982 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.365761426 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.293631695 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056542393 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.301157036 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.297782122 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.292735454 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.293695332 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.293225251 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.292178346 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294553713 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584872104 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.557767983 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.470059039 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.290163998 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.293264812 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.055761308 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.305290742 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471947844 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.308209085 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.291731625 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573863849 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.486314013 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.295710002 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.290380586 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.296639188 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553291929 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.295158614 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597400605 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818693232 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.294403768 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.293822613 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.063606562 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.998460438 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.292312828 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.297721855 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.569431078 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.310384184 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.293489298 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.292331269 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.292988444 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.288876926 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.297906391 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.2949141 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.291836307 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.29427613 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.344472988 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48923519 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.309408036 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.292723153 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813565184 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329290263 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291521963 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.292748764 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.295657146 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.295026289 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.296611638 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.296946523 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.336151186 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.295059538 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.296127823 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848752894 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.290702166 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.29730433 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489608971 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976110663 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.293914379 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.296763579 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.295647446 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.297849006 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846098767 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.35381592 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.591955409 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.298566693 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.336316531 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296171457 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.387015202 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84411368 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305853745 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.294098992 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.946331879 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.295660737 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.817571576 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.294990075 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.298085239 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863243028 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.296930846 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.297475154 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.292552873 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296344531 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.608965928 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.299336458 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.346484951 seconds)
  done (took 487.169767399 seconds)
done (took 630.810876074 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.298505277 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.299687843 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.278009649 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.298202714 seconds)
  done (took 10.361975693 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.316792347 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.304582194 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.315704241 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.305834833 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.316048172 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.304677874 seconds)
  done (took 9.054513634 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.300305433 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.299384654 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.301003628 seconds)
  done (took 8.092125069 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.508628138 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.323263979 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.640004699 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.306809314 seconds)
  done (took 8.97178627 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.315650883 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.314412366 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.31479978 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.315095706 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.316482654 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.31815265 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.315510618 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.314789819 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.317164482 seconds)
  done (took 13.032358672 seconds)
done (took 50.702049662 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.287070522 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.417422157 seconds)
    (3/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.469556555 seconds)
    (4/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.443729634 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.370971513 seconds)
    (6/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.444098098 seconds)
    (7/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.358584123 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.473718071 seconds)
    (9/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.428366674 seconds)
    (10/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.365261872 seconds)
    (11/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.430319947 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337195768 seconds)
    (13/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.282542927 seconds)
    (14/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.107353576 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.448116463 seconds)
    (16/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.463564972 seconds)
    (17/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.282331603 seconds)
    (18/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.41363375 seconds)
    (19/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.509793478 seconds)
    (20/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.280203627 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.411489523 seconds)
    (22/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.379101995 seconds)
    (23/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.340594756 seconds)
    (24/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.300777863 seconds)
    (25/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.382736654 seconds)
    (26/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.284600079 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.147815691 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.480840139 seconds)
    (29/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.367449445 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.375533137 seconds)
    (31/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.391265516 seconds)
    (32/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.522122247 seconds)
    (33/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.402216716 seconds)
    (34/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.4411983 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.280527608 seconds)
    (36/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.418989238 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.391187294 seconds)
    (38/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.421463723 seconds)
    (39/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.106404524 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.394966209 seconds)
    (41/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.303668953 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.406951709 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.407030337 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.367382635 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.282608258 seconds)
    (46/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.441899191 seconds)
    (47/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.384591922 seconds)
    (48/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.332375262 seconds)
    (49/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.290306752 seconds)
    (50/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.193149017 seconds)
    (51/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.373432344 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.055065339 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.551266454 seconds)
    (54/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.341348434 seconds)
    (55/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.283076846 seconds)
    (56/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.055560229 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.460439119 seconds)
    (58/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.456756656 seconds)
    (59/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.298151905 seconds)
    (60/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.332576109 seconds)
    (61/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.511770585 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.400970713 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.458018814 seconds)
    (64/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.283384162 seconds)
    (65/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.285585744 seconds)
    (66/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.058717046 seconds)
    (67/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.013901205 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.287371723 seconds)
    (69/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.409712346 seconds)
    (70/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.343990421 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.39736127 seconds)
    (72/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.552220813 seconds)
    (73/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.521910377 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.584254553 seconds)
    (75/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.284324016 seconds)
    (76/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.449680565 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.39839794 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.409772127 seconds)
    (79/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.370594686 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.306177003 seconds)
    (81/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.289248038 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.410998937 seconds)
    (83/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.339982915 seconds)
    (84/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.343681657 seconds)
    (85/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.519842157 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.398537525 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.416149625 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.391452472 seconds)
    (89/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.106857992 seconds)
    (90/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.559387647 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.45966491 seconds)
    (92/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.11434248 seconds)
    (93/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.001429131 seconds)
    (94/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.335163001 seconds)
    (95/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.182018826 seconds)
    (96/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.306997086 seconds)
    (97/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.141056008 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.493942151 seconds)
    (99/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.286155404 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.104540967 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.560123059 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.425214691 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.340696811 seconds)
    (104/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.387979795 seconds)
    (105/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.284987586 seconds)
    (106/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.498537852 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.40801583 seconds)
    (108/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.284533151 seconds)
    (109/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.341794022 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.380742035 seconds)
    (111/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.285992356 seconds)
    (112/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.253870148 seconds)
    (113/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.390599953 seconds)
    (114/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.286991808 seconds)
    (115/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.30230163 seconds)
    (116/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.476511393 seconds)
    (117/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.522473457 seconds)
    (118/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.286688409 seconds)
    (119/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.433265119 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.295421942 seconds)
    (121/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.421485974 seconds)
    (122/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.288588441 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.411889042 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.307857055 seconds)
    (125/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.288750179 seconds)
    (126/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.42390725 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.352636131 seconds)
    (128/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.370509511 seconds)
    (129/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.354957453 seconds)
    (130/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.286901947 seconds)
    (131/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.031036101 seconds)
    (132/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.300890017 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.054907178 seconds)
    (134/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.347959826 seconds)
    (135/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.327531323 seconds)
    (136/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.288789066 seconds)
    (137/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.475176004 seconds)
    (138/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.287602766 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.443291762 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.400242369 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.43471707 seconds)
    (142/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.287839154 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.436253235 seconds)
    (144/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344554536 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.373424281 seconds)
    (146/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.411143822 seconds)
    (147/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.290769314 seconds)
    (148/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.531418487 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.414793584 seconds)
    (150/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.390731343 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.483116217 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.560159048 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.335000252 seconds)
    (154/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.112282919 seconds)
    (155/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.433904823 seconds)
    (156/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.343652989 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.368385471 seconds)
    (158/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.384891643 seconds)
    (159/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.290130662 seconds)
    (160/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.451205997 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.35089733 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.307221375 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.432551042 seconds)
    (164/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.961293511 seconds)
    (165/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.492210123 seconds)
    (166/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.630786277 seconds)
    (167/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.30355959 seconds)
    (168/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.346785551 seconds)
    (169/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.020178802 seconds)
    (170/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.288079611 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.286035212 seconds)
    (172/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.559535819 seconds)
    (173/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.151306072 seconds)
    (174/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.421190963 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.161289384 seconds)
    (176/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.292023747 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.329740962 seconds)
    (178/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.335268807 seconds)
    (179/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.428359283 seconds)
    (180/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.96434397 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.507851692 seconds)
    (182/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.501115542 seconds)
    (183/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.238538848 seconds)
    (184/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.291634977 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.456438238 seconds)
    (186/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.342011137 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.291216468 seconds)
    (188/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.323112465 seconds)
    (189/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.343068214 seconds)
    (190/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.370454995 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.426557816 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.484515394 seconds)
  done (took 334.434473359 seconds)
done (took 335.625658691 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.332430229 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.396841648 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.317202611 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.319364842 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321902965 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.320816411 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.338410577 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.320642533 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.333689577 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.334819495 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.321260958 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.321591263 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.330245656 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331943798 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.351242626 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.322915707 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.319207763 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.330045197 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.334727352 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.336837863 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319308705 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321337511 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.34214855 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.321021585 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329732527 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.330672668 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.32687033 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.321453716 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.322808776 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.335517997 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.322187979 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.324815441 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.337502299 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.328218939 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322675929 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.327859746 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321645571 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.399330542 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.340422745 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.330783009 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.328817281 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.338294595 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.327463633 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.32583891 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.330888382 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343926267 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330437999 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.33809208 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.319933813 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.294678172 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332851394 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.335120037 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.33046511 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.302359181 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.309211408 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.338924329 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.330994657 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335007209 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.326607368 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.323740458 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.355188718 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.338226705 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.332680311 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330590717 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.32843611 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.33365518 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.333112352 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.339237392 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.330616228 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.326183402 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323618692 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.330419779 seconds)
done (took 105.012285242 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.451258238 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.322796222 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.465179944 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.330564417 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.485849251 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.456009405 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329632693 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.331728596 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.327411712 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.149530921 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.329245945 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.329647188 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.322375653 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.33081242 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.453685203 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.332999566 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.330482101 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.075618634 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.332316035 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.464992391 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.318477552 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.330466824 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.330451358 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.156243207 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.321676011 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.318811844 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.467671995 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.330947464 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.073385342 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.31801003 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.322337847 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.045125772 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.46971648 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351116906 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.338559161 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.340361237 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.487663354 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.334372363 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.455152962 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.455686074 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.470880739 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.370800165 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.321261918 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.323051928 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.334469826 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.333864176 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.334008257 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.363777646 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.324440042 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.333702972 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.049808275 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.344021769 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344257117 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.335672531 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.330559683 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.350117469 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.332778636 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.332837423 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.469176477 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.334239597 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.456180514 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.184413758 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.186475386 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.333635306 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.323149013 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.33322017 seconds)
  done (took 108.272953879 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.392097762 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.400962391 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.433526276 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.323845789 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.377431975 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.434480486 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.326212815 seconds)
  done (took 10.898181109 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.331471458 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.332617798 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377738384 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374121113 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.335462146 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.501654748 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335174397 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.339232904 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.333489572 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.383807056 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.334146686 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.336951013 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.342470324 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.328457093 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376040429 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.338270155 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.442613661 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.328466668 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.336470463 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.480204804 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333916535 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.343372642 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.378742405 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.339216038 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.335380309 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.338651298 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.151479184 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335718019 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337943236 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.336976163 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335946927 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.382724114 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.335952961 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.326981625 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336808066 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.450333491 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.336310906 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332751635 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.338316953 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.329372751 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.336078487 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.337466378 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.335618071 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.334508292 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.335751547 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.3514058 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.335438126 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.336126629 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.334540671 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.338033483 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.381882309 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.337439256 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339461041 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.337910003 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.388010781 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346222288 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.338394404 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.335178942 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338335152 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338188057 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.483293759 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379937342 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.338442301 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.377113088 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336312605 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33886141 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.337405496 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.337621711 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.422226422 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.339738669 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380952315 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.337519141 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.518035511 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.35653435 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337954186 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.333550637 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.333797157 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338487439 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.326772507 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.338644085 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.337958012 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.333588564 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.337916853 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339111938 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339148868 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.491572079 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.447013598 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.339961567 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.344984942 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.339221743 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.334173897 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.377158202 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.33204757 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.329258286 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37853845 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.443338417 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.37728041 seconds)
  done (took 137.609460279 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.337187368 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.338979952 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.330862948 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.355443732 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.328679069 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.324830548 seconds)
  done (took 9.22779614 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.322149214 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.333101159 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.328688329 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.329766913 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.326477621 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.328642106 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.333560121 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.323867533 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.327935813 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.328607747 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.328905785 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.330328913 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.329443935 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.328350922 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.326748714 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.33008039 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.326795919 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.328118799 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.328792367 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329433142 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.317732136 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.329314257 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.326156754 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.323127158 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.331846437 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.325701558 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.345015266 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.328205097 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.329090411 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.328103924 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.328884895 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.328421624 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.324286611 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.32681201 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.333807472 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.322350341 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328407947 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.330493428 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.328226185 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.327022033 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.332832986 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.327347718 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.326934061 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.33002052 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.320212223 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.327307379 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.334321616 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.346646746 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.328807591 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.332044071 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.331482968 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.331200255 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.326449668 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.33125308 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.324291754 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.324727287 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.331827056 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.330617901 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.33234758 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.323483036 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.329475156 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.330821823 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.323554066 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.333362024 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.32939175 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.332195446 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.32410309 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.333241291 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331687726 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.328414499 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.335287209 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.328170891 seconds)
  done (took 97.900831391 seconds)
done (took 365.11356735 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.595828116 seconds)
  done (took 3.803114981 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.325440526 seconds)
  done (took 3.540415367 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.758542023 seconds)
  done (took 21.973893349 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.329107766 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.37984902 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.344593523 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.322037322 seconds)
  done (took 10.589020609 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.576124454 seconds)
  done (took 3.793466324 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.341054615 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.329236481 seconds)
  done (took 5.886497395 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.491914413 seconds)
  done (took 3.706297686 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.550500747 seconds)
  done (took 3.767930772 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.343289096 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.3468526 seconds)
  done (took 5.911327721 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.307105889 seconds)
  done (took 3.52504463 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.104730814 seconds)
  done (took 20.320841924 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.360620325 seconds)
  done (took 3.580336979 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.375798582 seconds)
  done (took 3.593676474 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.74554092 seconds)
  done (took 5.960833653 seconds)
done (took 101.160434785 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.324969814 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.328920216 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.32958093 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.326578398 seconds)
  done (took 10.523940813 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.39347327 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.391367409 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398132614 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.39415398 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390212937 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.393619193 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.381211442 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.37793198 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.39247818 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.39010276 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399518509 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.39285426 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.394250358 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.369408434 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.390394775 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.397214347 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.393010605 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.39827757 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.380153344 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.393285423 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.342622668 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.390880204 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.394199801 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.341067845 seconds)
  done (took 34.496809708 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.849697042 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.405404341 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.487247107 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.388143794 seconds)
  done (took 7.346763705 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.419849632 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.423591727 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.440426436 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.477906681 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.509578873 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.438589413 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.367706674 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.360804802 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.347724324 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.423307245 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.473840646 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.403398834 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.523834068 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.339233851 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.635764668 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.34217197 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.342776936 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.420800565 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475837512 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.49101958 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.342388103 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.418670663 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.424506753 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.404320205 seconds)
  done (took 35.467031144 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.350556037 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.362956137 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.345424995 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.359170119 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.344959986 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.344643866 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.345990224 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.349355072 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.34066868 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.341870185 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.344005068 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.355632323 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.344834355 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.342765545 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.349348595 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.345497366 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.346687928 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.350839048 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.352261219 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.345218765 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.340766556 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.348891545 seconds)
  done (took 30.871809322 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.32856926 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.326212668 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.680703952 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.5846143 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.329111256 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.331049069 seconds)
  done (took 13.798200872 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.40178777 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.534956063 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.331525765 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.671138263 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.755930953 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.340721163 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.338701279 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.574029417 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.857472742 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.850807365 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.388031703 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.405108513 seconds)
  done (took 19.671232576 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.336485137 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.334438629 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.335324475 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.348467466 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.390843361 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.341147794 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.340323266 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.328172677 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.393806768 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.392227914 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.344053072 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.38905252 seconds)
  done (took 21.494491943 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429598263 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337871411 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335982153 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336065733 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336966998 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180537547 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337559564 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015770445 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.344287365 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614917364 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34019112 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433959138 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597896589 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339258303 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346768589 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.317170487 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574617243 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806298787 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344493636 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345639189 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373279196 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343614981 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346639076 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.541378155 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187508129 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3403863 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.604556599 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346892113 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61315626 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587048647 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58719121 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343323485 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619021613 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97611743 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440729017 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539182712 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341588878 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348350725 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.318378694 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.36103797 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362804194 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348748108 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589958981 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342675465 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34450482 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357913392 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038246385 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.350854138 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.343675893 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343972414 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58827446 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446872835 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350144708 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341912727 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409860078 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346246155 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.350878561 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470238665 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97718363 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346887939 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356132091 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.350193459 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3515333 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349889054 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99020989 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.355816742 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.35460191 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349679304 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347372517 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356586165 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372802882 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343833527 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.365844169 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344870252 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088411377 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351470084 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348394582 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875498477 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347433434 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.349558549 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576176287 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346024129 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345552422 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.34663501 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347526592 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053787528 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3528894 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.317690037 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407064558 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.032254023 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.540759638 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368784685 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378973298 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.57046976 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.31834645 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347673472 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.356445458 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349468762 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368331898 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040318913 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345712951 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.351788471 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604034323 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.556075274 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353040219 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.322006399 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802370498 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346450418 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.37530589 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359080276 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.546717113 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.953862817 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598196583 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355341171 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387852865 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350671418 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11246183 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346804878 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.360571003 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348514803 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618383621 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.159062099 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347054542 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417571285 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350426227 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349605937 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34719609 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363689678 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349292334 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.527776442 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358621902 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599267388 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.351744684 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352204535 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.347308332 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348356284 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.353641804 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573114741 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348204401 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631801111 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349571406 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35019042 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349963074 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.571500047 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.356236735 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.360935132 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6134187 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362425861 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366924014 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59965473 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38589973 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461824619 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381337815 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.350498362 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627687204 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.356331733 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.357464353 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367091734 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354919725 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362204508 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.359054095 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349988703 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958545094 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331540074 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352596525 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352708021 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.367668696 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420622149 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359498056 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54477262 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.357885537 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349216598 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.363017983 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.351895284 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57921387 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597559768 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.35287902 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428993477 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.802858343 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95263466 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372833825 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.349306632 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.352370636 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.351672275 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354656192 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351218532 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352646648 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547943001 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604671039 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359128639 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958681837 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353588028 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361205789 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.359356516 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599210637 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.362337396 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352132857 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.35442942 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358049645 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362924549 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598221237 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492440358 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.372072683 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355043954 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.889618832 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366195166 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355860951 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355731131 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385704287 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363898713 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17492804 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616376213 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347143188 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604295462 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363454201 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.369253264 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.352497887 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358717149 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356425639 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.361639085 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384234553 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.553683074 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356606744 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37631811 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914227349 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116306017 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90650525 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356904013 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.356315987 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359687483 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046683555 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351067352 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357258967 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586935523 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044929561 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35650647 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808147852 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.366186213 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10099406 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606627657 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590247991 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356806192 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.365408178 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605069239 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57328139 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393273291 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362219771 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361271129 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.329399874 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886100339 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360034067 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443019205 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050531286 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364145637 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357271688 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.425983423 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371412038 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745253674 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355823373 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359737053 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369488865 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361716087 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18497464 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358483945 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359410506 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982073992 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371993294 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.814008578 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35751661 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.556834362 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609927586 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.588558148 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.364939948 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.366601665 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.619370592 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608585498 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361004574 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365832213 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909959756 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.2301661 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.36442234 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359571818 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133184197 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372969337 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633611973 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.360939036 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.368961937 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366019 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361407437 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360974503 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.359794791 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365811527 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340278092 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828979628 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.373474606 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363978114 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382156976 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36543114 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615297923 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.376221624 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.967340295 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589311784 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350067907 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396607204 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.36637746 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374955963 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.33751959 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362124716 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360884337 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401671185 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.586420898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364807958 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.331574385 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381480985 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571995236 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361742712 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36055393 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588112499 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.366152533 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.359443382 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133216228 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398347566 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361567512 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379285863 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356484693 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406453022 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435299359 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562688433 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.612511626 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615271156 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.746298592 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374498389 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362158805 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.379828461 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461859431 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36506881 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.371620629 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.140895866 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972723075 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119010548 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.977855673 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61549161 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363164415 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372243611 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365121737 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499173496 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365428926 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641725473 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365251455 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.362690351 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391367773 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379749012 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365696927 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580405195 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643136549 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366364855 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379316948 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366986113 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.368182759 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622118682 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.577893304 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839438109 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904403576 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367704194 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367527421 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066608581 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64283671 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368654546 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367544059 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368796009 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.367493443 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.379210127 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.376907906 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367164369 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498165243 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613792764 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003148052 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608558382 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.406842978 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.886142296 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368884539 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621424536 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13781406 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.56640143 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980033811 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072705302 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63719761 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439117313 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566427563 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.371236854 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506332023 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.380870349 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369363999 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365480431 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368343512 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.370462653 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619670723 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980942181 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637626744 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.375019274 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.369745464 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403202869 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.56763435 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598184735 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091798115 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593427171 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61807884 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37780107 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372060428 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984485697 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626359011 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373374109 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.375244535 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581545044 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375272419 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399922048 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.060446757 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.370063697 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903610219 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.293483268 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392156915 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375069174 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086633676 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98680475 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.385500607 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840311673 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370999221 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369673889 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65010041 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.375793041 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374956283 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651659435 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.376908733 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374623899 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572276598 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.981594231 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117276692 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.37150568 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386090104 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.384291559 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371493458 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446089831 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375397075 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377477316 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.762763645 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368471395 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373881168 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385679919 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.378083989 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377565995 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.377345765 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371458428 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.380381986 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.355472567 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.359884806 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379159329 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497828396 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906961562 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376621279 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.052340511 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.70066423 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630449326 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380553956 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.348108387 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.379667878 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374702451 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376512687 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371921202 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373122732 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906034363 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.377425019 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.627472314 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380855835 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.586987414 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588540083 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374488584 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574149784 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382397039 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3995296 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.345727561 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373704801 seconds)
  done (took 970.91842778 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.373886309 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.382233059 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.390178387 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.420087692 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384447486 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.482847814 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.372503065 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384929822 seconds)
  done (took 20.440857627 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.368376733 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.36939904 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.382716241 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.372540713 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.374186109 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.839199388 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.375589944 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.370947959 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.391985935 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.382481803 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.381911836 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.979755651 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.381645741 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.381213488 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.373480001 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.377818272 seconds)
  done (took 32.355745345 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.405929394 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.537274563 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.211367063 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.399795814 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.387667568 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.377214956 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.581923656 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.396773885 seconds)
  done (took 26.552922001 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.383188343 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.381185459 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.382136187 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.388787785 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.382324917 seconds)
  done (took 8.17192775 seconds)
done (took 1233.327343464 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.38421572 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.383395748 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.385881157 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.383941286 seconds)
  done (took 6.792329431 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.349812543 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.349063317 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.3517961 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.364290265 seconds)
  done (took 9.667494895 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.056095441 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.897469956 seconds)
  done (took 5.207804413 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.903093918 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.904317497 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.897269754 seconds)
  done (took 6.957769961 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.647322529 seconds)
  done (took 2.902807188 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.347704776 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.372804221 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.079463018 seconds)
  done (took 8.053159668 seconds)
done (took 40.837068808 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.377285908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.612994437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.527327309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.385709131 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.52907202 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.529405335 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.109468921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.369399335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.377092647 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.367925054 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.37190613 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.528684579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.156692855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.623181206 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.162512982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.710543135 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.530881419 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.37342043 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.383873093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.366692295 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.107696485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.384525846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.368748227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.367959621 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.545759731 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.513540974 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.371919234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.73103064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.378854029 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.366953396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.515036786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.382981106 seconds)
  done (took 82.684967009 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.378204034 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.369494338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.385430579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.369330997 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.376814033 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.384230632 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.367866386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.367381275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.371504244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.371942501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.37345112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.37067988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.371351871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.372267762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.384757237 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.383033722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.374528816 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.369947006 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.386593226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.372405226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.368457149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.370722564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.372627763 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.373415659 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.370082761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.371205971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.387398585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.372809181 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.370476427 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.372968158 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.374483425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.398957677 seconds)
  done (took 77.262875328 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.375712407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.378307677 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.371575078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.381046741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.380866067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.379038071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.373328847 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.370277926 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.38175458 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.375296142 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.374177654 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.387903145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.373303917 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.371937924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.388290404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.373608114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.378180966 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.37712431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.370761657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.37263726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.393842269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.375984777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.374371714 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.376914535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.37891941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.372071715 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.375465377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.37297923 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.386960184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.372206809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.377890343 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.379909437 seconds)
  done (took 77.332242823 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.618343592 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.393559576 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39729419 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.388030407 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.395419373 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.391769907 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.384890115 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.643273832 seconds)
  done (took 14.870590518 seconds)
done (took 253.404560263 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.399038945 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.892155592 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.412336191 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.386114441 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.404044301 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.415312112 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.606848667 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.414632297 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.602354287 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.408399451 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.396095953 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.38616593 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.157439926 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.536603631 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.212288656 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.317488988 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.239747184 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.377421308 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.934955118 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.668950836 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.408160655 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.378686629 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.214052391 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.252017499 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.370040582 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.467321576 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.482174295 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.610540062 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.540668261 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.462777217 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.885821073 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.388764481 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.397988494 seconds)
  done (took 64.286938935 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.386135454 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.397297269 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.396687453 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.396547532 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.394753641 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.397929495 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.389378057 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.395405186 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.39173359 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.396345587 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.397833131 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.393539818 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.397272871 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.394665222 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.394086138 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.376331662 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.386779607 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.396179246 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.387115187 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.373617152 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.396267622 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.397719276 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.394182151 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.393550016 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.396227 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.395049774 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.39537204 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.394295611 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.395778457 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.395932321 seconds)
  done (took 43.057763603 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.397860133 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.958924957 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.090710592 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.397056584 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.389167792 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.389513892 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.669273537 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.397463902 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.394451448 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.390224831 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.884494831 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.400513851 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.422069704 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.102325869 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.395291921 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.396393376 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.398975061 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.389515223 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.962096049 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.402188367 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.670297213 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.397169241 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.667801103 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.401103937 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.395209189 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.388455863 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.395400347 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.191578853 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.406277466 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.865826212 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.137379086 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.659005031 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.14398562 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.153919182 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.140370934 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.402087348 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.398616705 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.884499965 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.391059458 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.391026007 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.667487549 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.394617923 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.102049368 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.083009081 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.407967393 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.403192143 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.22912812 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.868940111 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.627881623 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.399433843 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.149240822 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.393417785 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.402252381 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.394655326 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.627149856 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.395732393 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.389588116 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.230900026 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.397253862 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.666214178 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.403473948 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.39324537 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.96345512 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.394516306 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.955916576 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.395035416 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.402239417 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.394643378 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.112405953 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.393705562 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.088530493 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.404630263 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.397778025 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.871383397 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.959555405 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.309607008 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.393032408 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967852761 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.17745055 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.68542573 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.400717641 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.2278135 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.688977694 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.397596175 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.405805957 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.405565036 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.401052217 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467601907 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.663093686 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.021465074 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.081533455 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.236827613 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.669940468 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.401286811 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.392779559 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.235291475 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.400440576 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.405728782 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.117750507 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.08272793 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.40724284 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.401449254 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.080082169 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.409098576 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.672738515 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.405105088 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.146113837 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.395209116 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.468301567 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.402853215 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.40595803 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.401197336 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.67240695 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.401478926 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.405148853 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.069572927 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.906591671 seconds)
  done (took 194.425572459 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.393009388 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.405312237 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.388706109 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.385880741 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.388464723 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.399905591 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.389071425 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.392487332 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.399216214 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.393958506 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.390301645 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.401927064 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.397781301 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.388489288 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.391345791 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.389006375 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.39243493 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.413926728 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.387235591 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.392202772 seconds)
  done (took 45.153429171 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.407875433 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.943204598 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.904127316 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.405861732 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.408827454 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.399470799 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.455082718 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.410627131 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.406407447 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.690039035 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.567230053 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.408614074 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.410188119 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.406296522 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.905709405 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.383549096 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.688084351 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.945461825 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.407307542 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.942869165 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.383519453 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.408205999 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.400246011 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.944723954 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.704865144 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.676105145 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.457950142 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.941105797 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.408381247 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.408264185 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.946471611 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.407767727 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.400108505 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.933136799 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.411351668 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.423653695 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.410951799 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.460769377 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.456912968 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.687877715 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.953696748 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.687862643 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.419573312 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.566661067 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.40934482 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.38608681 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.956483404 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.41068177 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.385618902 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.410414622 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.41341263 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.922503881 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.404366367 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.915598039 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.411426414 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.40903708 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.947632939 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.921841959 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.910159986 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.563788107 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.401498263 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.675320528 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.412446401 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.956109023 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.40877438 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.410649387 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.411662399 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.569676555 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.945457369 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.679830131 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.69623095 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.696659211 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.412251833 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.470903362 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.414840906 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.696031955 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.468094832 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.797542901 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.701550315 seconds)
  done (took 126.671334743 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.654639133 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.518299034 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.774095701 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.98343838 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.899446325 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.542775531 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.51354798 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.641869936 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.412649014 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.496866876 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.032715936 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.500897351 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.121677021 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.472207195 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.508364915 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.538026672 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.802758418 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.389450758 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.047277428 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.994795914 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.405591055 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.513884738 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.909209965 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.587151792 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.411013055 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.99823367 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.331328176 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.910205636 seconds)
  done (took 53.188555604 seconds)
done (took 528.044994417 seconds)
SAVING RESULT...
DONE!
