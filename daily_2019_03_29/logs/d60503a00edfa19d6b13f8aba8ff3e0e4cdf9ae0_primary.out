cset: moving following pidspec: 3346
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.27041296 seconds)
loading group "string"... done (took 0.561906242 seconds)
loading group "linalg"... done (took 7.017710729 seconds)
loading group "parallel"... done (took 0.162206664 seconds)
loading group "find"... done (took 1.122167592 seconds)
loading group "tuple"... done (took 1.949998911 seconds)
loading group "dates"... done (took 1.241982829 seconds)
loading group "micro"... done (took 0.232900324 seconds)
loading group "io"... done (took 0.945563421 seconds)
loading group "scalar"... done (took 38.256340449 seconds)
loading group "sparse"... done (took 12.291545926 seconds)
loading group "broadcast"... done (took 0.96688023 seconds)
loading group "union"... done (took 13.217432699 seconds)
loading group "simd"... done (took 4.498700943 seconds)
loading group "random"... done (took 9.050372336 seconds)
loading group "problem"... done (took 1.90781398 seconds)
loading group "array"... done (took 21.505970195 seconds)
loading group "misc"... done (took 1.929062043 seconds)
loading group "sort"... done (took 3.287215604 seconds)
loading group "collection"... done (took 18.302575374 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.530846757 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137716401 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114926996 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136363478 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.178309532 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129986583 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138987251 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08356103 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.843489555 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157717939 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135174775 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.471247183 seconds)
done (took 4.78692318 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.209204627 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08461441 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094196693 seconds)
  done (took 0.85599878 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064806747 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12409918 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.078300363 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066345954 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.0652387 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07894907 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065801523 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064716638 seconds)
  done (took 1.228427202 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072237587 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067146979 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081434915 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066217199 seconds)
  done (took 0.972543029 seconds)
done (took 4.025031438 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.893338409 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.231362754 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186658055 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.443419391 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.144745504 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182699053 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673392543 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343093722 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208978222 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098184106 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.1023731 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.371693771 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105405254 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665710943 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074984987 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.102811801 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.156846839 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426796306 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079062984 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081787834 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101260314 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139904619 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.099279849 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074990161 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.165687964 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070106309 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145386492 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.092666885 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066902289 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.2392875 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.187559976 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684849749 seconds)
  done (took 10.361643849 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095593305 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114586788 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06708247 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136560203 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.114992698 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069475672 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070334421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081246532 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089702666 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.155580327 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111100783 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103495621 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079474605 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068617852 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098125492 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209701677 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104879732 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082769986 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084717746 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074424665 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11951702 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081576954 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091014462 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076023991 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.149905573 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.1929376 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108422013 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.109325195 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067645252 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093267198 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.126363806 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127163828 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066432775 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080637102 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.151379184 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094333321 seconds)
  done (took 4.44415851 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.044432756 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.169754946 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090521232 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149676689 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083677841 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.12381191 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066052239 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096921422 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241264275 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.097506702 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.465840866 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110274142 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101319938 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066297622 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08396363 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066784107 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.520624632 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109029606 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134114918 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083843971 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088885557 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068590847 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096387932 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081336286 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0670812 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067091104 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118966741 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.317347399 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126873874 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083115116 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.177966468 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10718859 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066452965 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118898415 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180435256 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107802874 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121219499 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066255813 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064264302 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166162426 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089185205 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06537887 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103400093 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102309208 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117496494 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08245943 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066656729 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178197538 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065408361 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096865581 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.882563657 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.163695824 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088401907 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065309559 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281791282 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083296905 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081508445 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062885361 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062365986 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.249275539 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148307514 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065933903 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08135443 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065546514 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067263178 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.392096198 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073098236 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.724558144 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069708114 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076047287 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083713585 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066199717 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.106011144 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072309246 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087943404 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084396124 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081009149 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068504046 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064357605 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081959395 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067463779 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098818653 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201505953 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068330562 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081921241 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064424899 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062630404 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100701553 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109829386 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06889245 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.063955155 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114874787 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067736619 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082326561 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100331791 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082160266 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.097898491 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068854594 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126335131 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067366782 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134893385 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066693712 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108542761 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071134709 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112382367 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092564518 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070645522 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.151082073 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063243365 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080392928 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065439884 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063249131 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083891624 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066371565 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096101999 seconds)
  done (took 20.675538005 seconds)
done (took 37.210187093 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.296094658 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088949333 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.088426492 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.072183542 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088736643 seconds)
  done (took 1.38881465 seconds)
done (took 2.117239424 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143606391 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09855029 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078118361 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094810536 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06238462 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114366592 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112621309 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079460551 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112439043 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.062613547 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108558781 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06299766 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076845493 seconds)
  done (took 1.963978317 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080692801 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082854437 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083153137 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079901469 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076446591 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079994499 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07822149 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101476795 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078286968 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085296821 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063597869 seconds)
  done (took 1.611661726 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079416751 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081376175 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083306405 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.078919464 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077172365 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079811002 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078881802 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098428507 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078052032 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085239339 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063967045 seconds)
  done (took 1.611871287 seconds)
done (took 5.905639117 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077443737 seconds)
  done (took 0.797630266 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.689259139 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.325165584 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082530397 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.130041104 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.229502288 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.149678336 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.425462315 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108014409 seconds)
  done (took 10.041653175 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.11296992 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085058903 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068337974 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082937568 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069926475 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087215469 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070376766 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068369906 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082309682 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067786078 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083390883 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070439987 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081776985 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067938639 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071246212 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082516187 seconds)
  done (took 2.041433052 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.102290566 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10089353 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.088409916 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074224188 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086990509 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071815552 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08962191 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073551356 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0849928 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071858318 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088818766 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073272351 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085901712 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064728783 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.088300683 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075832527 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084336811 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073980669 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088037721 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075228268 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088832861 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064991989 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085308514 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074039757 seconds)
  done (took 2.787048579 seconds)
done (took 16.393754552 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.127695835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073979799 seconds)
  done (took 0.928615731 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07958689 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094848198 seconds)
  done (took 0.910544928 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081491955 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078667973 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08726448 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.090140516 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065810448 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079456935 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.099737482 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065859236 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065474863 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079871833 seconds)
  done (took 1.530169364 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067455975 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.090616133 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069022969 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094784416 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07273489 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.077575792 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072052281 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081450276 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077126824 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076416 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070751458 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096095117 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070633121 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097102287 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07189287 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081203914 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084553733 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067036672 seconds)
  done (took 2.154676915 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064150038 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065926519 seconds)
  done (took 0.868144854 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065370111 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062898933 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079388172 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065043559 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077015705 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062560629 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077594638 seconds)
  done (took 1.228083563 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390592524 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108797718 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.240406924 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085907427 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10146027 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.270471484 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.080743828 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071072144 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086020772 seconds)
  done (took 2.211769851 seconds)
done (took 10.565993118 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078249404 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084660373 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.107515913 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414641259 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.102962842 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06622572 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.140564912 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.201220034 seconds)
done (took 1.935333442 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.122683216 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.589528625 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.391250096 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208551614 seconds)
  done (took 1.929624871 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.366594758 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089596604 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072950195 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065409674 seconds)
  done (took 1.338393411 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064963204 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06927705 seconds)
  done (took 0.880833183 seconds)
done (took 5.012421788 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066252314 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065738159 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077684672 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065400272 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062729721 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078117375 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098049887 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081655393 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06533435 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063225359 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079188626 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065694781 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.080944811 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065359964 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063413329 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077665149 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065145857 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063755041 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079368261 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063342921 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062991813 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079816145 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063217307 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077472845 seconds)
  done (took 2.49127161 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083735078 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.080867618 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07101566 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086074313 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069557512 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086005607 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070511018 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067429828 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085298092 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06823135 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083622035 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070058188 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081693777 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069716724 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081937908 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069822889 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086105215 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066012829 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068154607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084642173 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071352269 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081248521 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070086259 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085622295 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070523468 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083413787 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068225668 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081165373 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070481408 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084907487 seconds)
  done (took 3.044184767 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070501626 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063040129 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078673483 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069820819 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063332299 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079748787 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063458275 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078409751 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063250304 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063462775 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079173973 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062789735 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063551996 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079162589 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063953013 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08163638 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078911668 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063613383 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077868452 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064191916 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066294412 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078210848 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063713516 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077784636 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062957307 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063044331 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07830339 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063310425 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06392452 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078360316 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067078052 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066204373 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077692032 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069764091 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081739311 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063450305 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067192198 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077700415 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064076967 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063319956 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076912802 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064270387 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077775024 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069364398 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063663264 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080383025 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062936414 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06512886 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078342489 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066143097 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078030577 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062796783 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065592236 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078827993 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067152942 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062755551 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078503901 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062839001 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.078809906 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063284324 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065003997 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078030918 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06610532 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064357989 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093008562 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070422952 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078181532 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065049917 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064313229 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08008525 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065813251 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092228971 seconds)
  done (took 5.839605451 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114067998 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090184833 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08058137 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065063828 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077182316 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062933635 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067000673 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078324553 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06580023 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084433807 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06396871 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065515412 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07992153 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076376891 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078361103 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065313739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084130081 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061489407 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063974801 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081516914 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064180075 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081374401 seconds)
  done (took 2.404853661 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.18063015 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085590456 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107366845 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087745642 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06731135 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087837277 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069992009 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084336911 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070145194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082927547 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068276566 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084272665 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067702224 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082137449 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068371427 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082553595 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070049666 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082809311 seconds)
  done (took 2.284775712 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076213335 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065706105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102366744 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06540633 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081323302 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068349814 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086398317 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074303645 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083013078 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065919515 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088716025 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068126073 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083058571 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.170899027 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068611419 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079828944 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067817738 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080628222 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073336336 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084825476 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070766451 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087845887 seconds)
  done (took 2.548868322 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079463163 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067533809 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097606645 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083286276 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061535613 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06397634 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086979656 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066144403 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086606248 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067131204 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065170709 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080293029 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070006783 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080237573 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070607416 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0817044 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067492694 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080567001 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067426439 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062389288 seconds)
  done (took 2.243309028 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085720229 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081721373 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06706165 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089721197 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067143269 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082023266 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07508325 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08180624 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06720495 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105810584 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067543982 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081708448 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075322761 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086782986 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06688747 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089201105 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075660645 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089215438 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066904329 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082087365 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105866658 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067113795 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089444876 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067431985 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067102419 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081587323 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067225941 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086606062 seconds)
  done (took 2.977944534 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06547754 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066378622 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078892294 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063772448 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064131691 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0788836 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064370631 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063367821 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081139335 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063920111 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065727986 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08132586 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066289891 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080816062 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066139579 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065927426 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080709744 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063874742 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063944731 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078615779 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065963177 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065685487 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080466424 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064745947 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078494463 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065663204 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063853167 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078681991 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065194945 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064270332 seconds)
  done (took 2.857181685 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074907845 seconds)
    (2/2) benchmarking "in"...
    done (took 0.088261156 seconds)
  done (took 0.92706419 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062534255 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079555798 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078547973 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069967081 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084379674 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066723082 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088548399 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069369479 seconds)
  done (took 1.358528178 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081348422 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076766647 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082101589 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077676605 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092604749 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083057819 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15129552 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081709316 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072281264 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081722367 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079828074 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064983779 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.087610548 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066393206 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.087525171 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072177434 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06416487 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086181416 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068183524 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080240144 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06803237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092129146 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068491576 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06325123 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08300431 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074555729 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.092568547 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067620438 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08504618 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073499452 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087219179 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060483498 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066428132 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.082317562 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064220155 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091691592 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080688967 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08426892 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074100999 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067478309 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090785997 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062070321 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085770857 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072471931 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091423517 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067224378 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081958086 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061689602 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064706348 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083956622 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061527057 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067002428 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076538839 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073531197 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08431268 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076166954 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080786491 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067595366 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069458819 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08475532 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072791941 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083392778 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068462782 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06551941 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08732966 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071860651 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089679576 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061722789 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060484307 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079097621 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07642754 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103188946 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072488585 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081450966 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067513562 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078951068 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069030932 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067342356 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087098675 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071962161 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081841924 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071718848 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087834302 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06654266 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068490037 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089624721 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064876582 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083278754 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064660958 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097209874 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065458158 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079392475 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063923322 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076411944 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084358824 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066083889 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079416609 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073047966 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060802156 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082406787 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06725792 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082087205 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07646469 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087475478 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071726375 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090277468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074348042 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065736467 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085701418 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063534023 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082764473 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066071064 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074074285 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076294156 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069273632 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082593385 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067338102 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090100308 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064562488 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066905758 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088687369 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072304625 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080479866 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063341952 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068849785 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081359557 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069567905 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088932436 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06577475 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076913565 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061717597 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070048547 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081432237 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070741589 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085995317 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069371499 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060703681 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079247545 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070793653 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.0898405 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067191836 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083638728 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071709714 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06781756 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080550032 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072922404 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084354235 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065350824 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087038988 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066726629 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061627772 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084122107 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06853328 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080795643 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069062065 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069014366 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084753227 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068036182 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08035531 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071552152 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082717141 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065236246 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066018068 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080764294 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076233936 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083823113 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06162601 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063538125 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088037662 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064995047 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081769492 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06496085 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068781263 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.081917094 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064826291 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081519518 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068015327 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092424216 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070162765 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067381028 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087433335 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077411331 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081776519 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069238602 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081859826 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066767114 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066873305 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090735631 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071689351 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086363009 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069260069 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078791564 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071633629 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073092661 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081260201 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064455055 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080690297 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069669863 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071050137 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085936616 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067198519 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080232956 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06729125 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085281357 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06915403 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066225265 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080940909 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071191947 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081276054 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072486201 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082773021 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077115535 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084676969 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061272485 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070448964 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080360934 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073143452 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077257884 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064567394 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066123789 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082538246 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065672256 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068701981 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076317786 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073410402 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088879106 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066887405 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064918361 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081287035 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072690892 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082820318 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069916941 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085185157 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07229113 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09159763 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065177488 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069900009 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092225394 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066773036 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075871072 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071095882 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065550836 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081097516 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065781341 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079902259 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069145995 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089364765 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072308016 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060686038 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084134665 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064819401 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065246413 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077775058 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071209631 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.084962836 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067613788 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088499444 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067673507 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067169443 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084999615 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066936461 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082549647 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06795878 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068068917 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082668515 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069378419 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081275789 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069962518 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065562716 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080022379 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068213125 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08207465 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067008515 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071054317 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081611731 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067123096 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084152626 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067363194 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083033824 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066312138 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066228167 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084941344 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066994161 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066249844 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.083700377 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061447579 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088813242 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066011193 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089408701 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066493999 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063536755 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086523667 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068921506 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085920114 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06751395 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082864359 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067103473 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066039183 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084505812 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073436989 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080008987 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07698888 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09003379 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0665543 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069341593 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082394563 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068324553 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065122785 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082679009 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.0677072 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082529957 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06681652 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086576631 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069587823 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067612382 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083911716 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068617434 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082558298 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067744537 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061144828 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081915311 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066476166 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.0660679 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091885432 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066761682 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082045372 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066289041 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08377894 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065803512 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0633078 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.08918044 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073653347 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083556089 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073433018 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081486595 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067986054 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092455847 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063117463 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064393944 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079863444 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065231517 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089901064 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067096062 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075538651 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082364032 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066128484 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079215839 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067670622 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065230097 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076678641 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064569686 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085786032 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065073601 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065255532 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082607642 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070778231 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083441097 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075584905 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065481507 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083695036 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067241966 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079641315 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065109607 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065366479 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084610367 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067139712 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080502883 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063536878 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065825323 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083075041 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067394381 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081681147 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067729302 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073599584 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081760186 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069640704 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085991711 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062239882 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069102699 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082062857 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066601386 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081567627 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069687246 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069069083 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083556914 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075461915 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081830556 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068055497 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082883031 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064357222 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065704093 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081533878 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066498416 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081478059 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067627315 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07318217 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080225167 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070475408 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081742749 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067329466 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072722582 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083611638 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069443577 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089116646 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067028735 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083900969 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074062688 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08536689 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069736568 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067574427 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084633725 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07238144 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.0812537 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072529892 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065972957 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08298237 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068969963 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080126436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066395744 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066378937 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081774126 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072059436 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083359238 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065590261 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065022445 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081340787 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067689002 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085326188 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074046987 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083765488 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069272236 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06214069 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079751335 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067566293 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064216973 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084574709 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069493243 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08764027 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0688964 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082424774 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066396634 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074405451 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088413365 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070437754 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080830778 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070133684 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067648763 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085031564 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0680866 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082773702 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068280649 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06958062 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084815707 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065852848 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089327832 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070224468 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084063995 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068203636 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068263254 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082440555 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062569794 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083112886 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068900196 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07173343 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084645454 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066832105 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093197355 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065095161 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066577145 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085460978 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065592886 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086740568 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06248659 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083486152 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067626299 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067195168 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078150742 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06606232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063766389 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085318342 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066128707 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077667402 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076864463 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091043013 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069424254 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065828867 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081473181 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062380226 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078270226 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066316324 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06761885 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084190968 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076743896 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081300156 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06584906 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061539862 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082488142 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069493647 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085195381 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06501316 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06128012 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081746062 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069915865 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.087776552 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065855572 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066556342 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085708738 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068630734 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080512793 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069877655 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063136007 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086612032 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078600345 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.0840812 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068093136 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088102496 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074405737 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083223259 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06256428 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067242313 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085945194 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067884135 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084026616 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067498324 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097972115 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070389176 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065805372 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082254317 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069710806 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082819251 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074446086 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066936253 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083351198 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07091705 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08490541 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074142026 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085157152 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07401865 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085808858 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069722251 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065720913 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082970201 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065030912 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066839711 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084471316 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066952324 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087000979 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07452922 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08236477 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077315597 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092583819 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06913611 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062824866 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08188257 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066071856 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078348209 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068148401 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064003721 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08155913 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064683731 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080955115 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067348859 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070959024 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083396568 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067809631 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082244272 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060785597 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069181486 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084726587 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068027766 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063259469 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083510487 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067279933 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086994624 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070285995 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080490292 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067932578 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067568212 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083902315 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062566645 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088324381 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065735104 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068770816 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082149954 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067646972 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.083039032 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070439643 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070946409 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084349459 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069077978 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09170903 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069282909 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081249322 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064361153 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071492355 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081130908 seconds)
  done (took 45.456845204 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105622009 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079870302 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062667194 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079163401 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073884749 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080363338 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062605212 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062952695 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078905151 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065783753 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078571451 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062113721 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087021495 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084645458 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090894092 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066533471 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078768805 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063214229 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078989489 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06409085 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087934453 seconds)
  done (took 2.393434555 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07371098 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08728912 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072073599 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092552855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066853439 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087398525 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072613035 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086974268 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092429603 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067422389 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092212896 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070733033 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08343214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067448587 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083835291 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070903969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091564282 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067635494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.086215886 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072372943 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086797073 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072738552 seconds)
  done (took 2.544216194 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066475662 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065890468 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084043945 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061508666 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065341551 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078134473 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069880434 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.080517381 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068995057 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064223921 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081267219 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066088225 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084049947 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063244278 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066171505 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080470415 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13473391 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069092576 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065637246 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.084689276 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06202846 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085016488 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06254025 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06227364 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.081693794 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07043457 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.083331545 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064052417 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065145262 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08175909 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066163247 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08065894 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066962838 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065742582 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082308476 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065740708 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065048252 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082396097 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062200135 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.080770559 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066551917 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062180665 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082875489 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067708592 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06404931 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08068711 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067294893 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082860499 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061602033 seconds)
  done (took 4.376764094 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083768941 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.137551724 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08573531 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120292337 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080191861 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.090672904 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069494831 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118922978 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063078655 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082485908 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.099141871 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080323156 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083649975 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070472734 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089338053 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06602583 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083673891 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064938377 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087078804 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065842714 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087175818 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072835792 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.097199525 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07901716 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08606387 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065655604 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082139626 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07099605 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0947009 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070838847 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087272879 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07107905 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.097740982 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067830349 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082528131 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068133248 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.098926536 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.082314075 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068955496 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.0637122 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084821094 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071134148 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.089828614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081889435 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083836156 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071341513 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083509764 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063075834 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096177018 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068752073 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091359366 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.097533792 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070278443 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084156134 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071888046 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.097279545 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067084959 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081394792 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069662659 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095023143 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064200363 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086696273 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080404785 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084223911 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073873287 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.096845625 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071706874 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087045245 seconds)
  done (took 6.509196501 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074728523 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089059479 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080890595 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098002798 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089582653 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073256009 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08909392 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073474326 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088719199 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07755451 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089130549 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110490229 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06804982 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092163151 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072538307 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089578301 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07214514 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089914338 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072270265 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088676378 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.088429413 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08025024 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088749597 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080220211 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118535372 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084146509 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071967432 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089134067 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080945504 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089172863 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100627282 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073045421 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088589003 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080177651 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.101074178 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.088960023 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066384951 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088777129 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072984961 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089302825 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0679147 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098167465 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072102675 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084694397 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072177762 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089006037 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.097296793 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084167323 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092027858 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094419794 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072638652 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096487164 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072642076 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08943373 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09776999 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104083481 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097334097 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096641572 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072967226 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096874593 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09713238 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086528693 seconds)
  done (took 6.143736616 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085491109 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091516031 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077225739 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079454567 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064506843 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087108556 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065175183 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081214438 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0744453 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0908279 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077772975 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087709488 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072830903 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094032638 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087542154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073384007 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087189049 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070228677 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090657179 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070761547 seconds)
  done (took 2.423711931 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074670039 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100425041 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067643274 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07109171 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086807385 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072244606 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086458889 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070199851 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084376908 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069578105 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092448749 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077019031 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08424077 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072753082 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092403177 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071906951 seconds)
  done (took 2.090300229 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077326458 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093311876 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081250966 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08412551 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065352824 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081091497 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066217616 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062756343 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080087456 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08041743 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083989801 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068919131 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083525376 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065345092 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063032804 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086297606 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062901677 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082060777 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066324164 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.097895753 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077253259 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.082015589 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066711959 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067441049 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.084720057 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07161912 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.083849844 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063705456 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082786867 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067472944 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084597367 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074415733 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080968262 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065393457 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064774446 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081385956 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06691394 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083854799 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069510148 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06585926 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082576659 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06633456 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083733742 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06876325 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079931054 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067748846 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06264413 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089186189 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065550363 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083195634 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066930175 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085248382 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067720163 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075420128 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087581809 seconds)
  done (took 4.968411339 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078958603 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068905319 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080378354 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064707443 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086163878 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067953582 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069063104 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086547611 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067909911 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081522306 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068236979 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086255743 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068328084 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069057087 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085266463 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070211109 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079484703 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068304374 seconds)
  done (took 2.167739677 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071537831 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066161441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090677771 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066934147 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083263129 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068569379 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061698025 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082728579 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064944535 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083913253 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066194966 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068202039 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082376229 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069504865 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083332285 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066444714 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068857682 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082015263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067044217 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079881294 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069283645 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064232218 seconds)
  done (took 2.429916543 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072299298 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092065896 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.159705171 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.104980856 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082398994 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.09701532 seconds)
  done (took 1.431369278 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09027216 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097001817 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067639892 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105018756 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074384286 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085314022 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068385467 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085256966 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076881591 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098014253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067242317 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094087579 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093314591 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078494825 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090271123 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073468575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085904271 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068143436 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08440307 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084849272 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086981159 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093211943 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068090626 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085282474 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068611559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093867946 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076367658 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09893566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084468606 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076944888 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09006595 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068989188 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094054482 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098749082 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070131179 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094660389 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068421863 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103268244 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073596016 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09362534 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069175457 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091796698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093309116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073147064 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092930019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069089859 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089865777 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06776635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08643241 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109456688 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073688265 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093627768 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073053349 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09384397 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093685509 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10987068 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081199263 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092805955 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0729689 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099115431 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092878387 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07351181 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094203933 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098637821 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074153442 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093244828 seconds)
  done (took 6.434266446 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080901596 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103186908 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069170212 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099026475 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094021811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067941472 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085011409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069136962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0864711 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068145576 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125956907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068465689 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093700713 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093994542 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068875467 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085034586 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06905309 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093950597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069133507 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109720806 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085615636 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076218462 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094032145 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093768435 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081918588 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091548118 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068840497 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086200502 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068597028 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086159842 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073565008 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086460338 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093709795 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068803029 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093196555 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069250202 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085883081 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073875807 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085253362 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074476605 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094211883 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103131843 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068904244 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085219762 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081630408 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086512739 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068685198 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086071838 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068549323 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085765629 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081564698 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099854326 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098886659 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076425762 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08724852 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068748897 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086120462 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067151135 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087096325 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091700833 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076288807 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085703321 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110696322 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068922561 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085618458 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077389029 seconds)
  done (took 6.344376569 seconds)
done (took 125.43810231 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202641778 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18196542 seconds)
  done (took 1.207866184 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068846991 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095613858 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096384826 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127611906 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084821172 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100527435 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116517946 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079451216 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066993481 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084632772 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068127355 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086236678 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130786474 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066952985 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085237256 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069508891 seconds)
  done (took 2.258587946 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101691118 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.19253825 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10699524 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06580676 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097017703 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077803236 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084392189 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077870084 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090144984 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066569423 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077397288 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094181369 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06544881 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094092297 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071846859 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096194411 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065358549 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09625466 seconds)
  done (took 2.455915252 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10435571 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139109819 seconds)
  done (took 1.074350621 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.19636986 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.120754661 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.197462273 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.407985186 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.201103408 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.273437691 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.169024927 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.167975475 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.150391007 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.167070059 seconds)
  done (took 2.879787953 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097756509 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.166729945 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305336956 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.134496596 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086659812 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.112540459 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.135774446 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.106833282 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081575941 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098603854 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080151794 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095593512 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.114761708 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07522744 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092643883 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077252093 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.118085548 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074806207 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095653992 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075825736 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115382045 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067346798 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091695415 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074379242 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.095028417 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077951708 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083829377 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066481583 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074673102 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093877186 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07812143 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.110318099 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096711917 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.126889237 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100030079 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.127256008 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078448281 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089925364 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075121137 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090502446 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077793927 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09463024 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.083767701 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094636136 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066240982 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094906397 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066289315 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066265159 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097597911 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077464547 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097734144 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095511682 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.126510842 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.077740919 seconds)
  done (took 6.088552364 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.735776911 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.130401408 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071322178 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.789538682 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10942084 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082674927 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.699073757 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11487528 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204995623 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750926804 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08692873 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097027159 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.194909299 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.210185137 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.969319976 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.260597569 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.619222194 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102476134 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127797254 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.128234399 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135761577 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150060626 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141929388 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427129044 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094721104 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071282864 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132543487 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.095701965 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.135424074 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101916743 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073954013 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14957575 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223693677 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171843535 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074359957 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090612205 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07047682 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.142992665 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233404942 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.182657673 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.135008273 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087857954 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070973991 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135706664 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12688149 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088074019 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1374491 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.148792093 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.14380919 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092022036 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076684803 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13750685 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.154782567 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.138659462 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079928324 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286785136 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.275884294 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070985384 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117436966 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101022259 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.208819398 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100726274 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.17134305 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133993022 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.183837025 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069566494 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.761927393 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.143412791 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069779748 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095303537 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116635474 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073585747 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.154914094 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.121883694 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.36691274 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137319553 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09295167 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069277523 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21907604 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084219507 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089360294 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13590309 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075437666 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119608612 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139001705 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16011024 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.143429895 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.203643675 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138545339 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134050719 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093495522 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120113655 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074686287 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.185044361 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.186805204 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.135036562 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.182501615 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.156337031 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.136899789 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.14369156 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07541895 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166020726 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096225132 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099438065 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134368234 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.183794347 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.119620543 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081748722 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092523149 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137198375 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.121700446 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084496491 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.155224452 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.145476811 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.451002739 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.141552598 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087016008 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08541717 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134702667 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.135625763 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095327558 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.227675126 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099152465 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162343837 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117995854 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068003909 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117593274 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.136676756 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097539851 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09986802 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.155071596 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077196899 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.20923335 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.184345252 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076903565 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210116657 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.157656534 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074890564 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.144201355 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11777223 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141204917 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096740643 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136390237 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073138198 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749625676 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139489386 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118819888 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092626317 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168894571 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070746658 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08130508 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102888311 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067276363 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754650212 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104110386 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079752713 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101801188 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075220985 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118628353 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132410534 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092531696 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135468641 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195908873 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075988059 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116965522 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101496538 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135729917 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074992328 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101897758 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082277008 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103564408 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121848436 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072296811 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103260576 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.142804014 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.13637832 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.185449663 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.536455633 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090147207 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081852398 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194259636 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069485163 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.254822809 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132742741 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.191127879 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136765055 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098035454 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.252233614 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.137808853 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171558986 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.1037542 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14835117 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067426626 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.153834287 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.137876015 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070102054 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093383726 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.136500921 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140881578 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137277957 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925647199 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069622898 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198151508 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088595654 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.146353835 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093860088 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076049725 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262943472 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07100858 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142296517 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158543718 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074425242 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102513691 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.670402668 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.0811325 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.15555822 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074410267 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187617146 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139133372 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133350411 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13370161 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095354104 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.135244544 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.18189949 seconds)
  done (took 39.647581413 seconds)
done (took 56.444604174 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26587573 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.18759144 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.237792646 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142738212 seconds)
  done (took 1.757539794 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142053736 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104240699 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.114809581 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084241221 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102481262 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084439123 seconds)
  done (took 1.483885096 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.397223569 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262858401 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227962747 seconds)
  done (took 1.742866432 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289886113 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.225202239 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.440965293 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.290260011 seconds)
  done (took 2.207032474 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.187089556 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.110464984 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066782103 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104495959 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.157772892 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246625828 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125663217 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.183721072 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078668478 seconds)
  done (took 2.163206969 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.192492401 seconds)
done (took 10.40196664 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.105021716 seconds)
    (2/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.217554025 seconds)
    (3/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.227534424 seconds)
    (4/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.300584004 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.201146274 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.129328063 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.0992291 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.141656013 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.195525197 seconds)
    (10/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.26088451 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082766187 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.297799544 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086615232 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077882107 seconds)
    (15/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081908057 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095468577 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.217921838 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.226411778 seconds)
    (19/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092733751 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088384793 seconds)
    (21/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079678369 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.257956343 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.262478219 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.257022816 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101321635 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.0938555 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.273343071 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092285041 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.1139928 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.213123097 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114358569 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111499764 seconds)
    (33/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.111305631 seconds)
    (34/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094680533 seconds)
    (35/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.211698311 seconds)
    (36/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076662033 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.224476254 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08670379 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169670883 seconds)
    (40/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098676667 seconds)
    (41/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.174135267 seconds)
    (42/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076764852 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115217092 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.124417388 seconds)
    (45/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099158704 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072931538 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.15246889 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074496112 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.231712133 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117978605 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097925489 seconds)
    (52/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095993148 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10255975 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093285456 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126739396 seconds)
    (56/309) benchmarking ("sort", Int8, false)...
    done (took 0.159765361 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112004062 seconds)
    (58/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073628126 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.116272399 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064668007 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072846123 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.219619326 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092371516 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070065384 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092217306 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072954837 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072619423 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.175379206 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094593905 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08710861 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.258945804 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067585352 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.118875941 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.244898225 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064235194 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067959004 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09679446 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092855697 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113903362 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086893022 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.071528202 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089689367 seconds)
    (83/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.098261361 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.1119508 seconds)
    (85/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052136787 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.154080614 seconds)
    (87/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05212999 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.094974973 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054041514 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.15914184 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054312173 seconds)
    (92/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076964142 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088546323 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074795977 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087314123 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 0.06714207 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.245498108 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066116037 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.112073003 seconds)
    (100/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070842846 seconds)
    (101/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051474467 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.18817451 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092228006 seconds)
    (104/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074317537 seconds)
    (105/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.143865515 seconds)
    (106/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.210734152 seconds)
    (107/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091445671 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167331041 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067873922 seconds)
    (110/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.258119514 seconds)
    (111/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072904827 seconds)
    (112/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086647475 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.168100195 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06581387 seconds)
    (115/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.232457846 seconds)
    (116/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075986951 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.195232297 seconds)
    (118/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072245385 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115480255 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.252518112 seconds)
    (121/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077707153 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095106675 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075038828 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065636956 seconds)
    (125/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087293151 seconds)
    (126/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05189314 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.162873875 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.185913684 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065667197 seconds)
    (130/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076558564 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085503661 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133586931 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.074230184 seconds)
    (134/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066850382 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112303668 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.133726416 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094431003 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.159289077 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073009162 seconds)
    (140/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054420854 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092595385 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072907798 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071111077 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142951876 seconds)
    (145/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109173825 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092700983 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073027796 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112659458 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099439486 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072206367 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.260983145 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.106191682 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066983753 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.245159172 seconds)
    (155/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111232095 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085286695 seconds)
    (157/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052691035 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066211173 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093270551 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089701792 seconds)
    (161/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052335705 seconds)
    (162/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175531791 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.196514517 seconds)
    (164/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.235480577 seconds)
    (165/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.214829595 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094812423 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07632738 seconds)
    (168/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203538181 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091955696 seconds)
    (170/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070786818 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086681133 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053192386 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066744062 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087248257 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10709848 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094249976 seconds)
    (177/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080598948 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052607263 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.094113091 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066316247 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100673121 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.226267899 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.087298455 seconds)
    (184/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053535509 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053266835 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142123872 seconds)
    (187/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052848601 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093986274 seconds)
    (189/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071624092 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065408723 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.244663574 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095550259 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168239108 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.072859081 seconds)
    (195/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053990804 seconds)
    (196/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052047975 seconds)
    (197/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118540258 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052840294 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064181159 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110402995 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.238963644 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079169037 seconds)
    (203/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101987271 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066061991 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06583962 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099030719 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053395548 seconds)
    (208/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052973331 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172802177 seconds)
    (210/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073431507 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095335438 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073193126 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09389409 seconds)
    (214/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069951101 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061287389 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109309763 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097110265 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074194881 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071629793 seconds)
    (220/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096914 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118113286 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06770958 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088304221 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064854789 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05187555 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08635075 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062185271 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067547526 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087370446 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052941837 seconds)
    (231/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051178132 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08651673 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052366086 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053022594 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.075212813 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138211796 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073240892 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077055892 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051773009 seconds)
    (240/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085420863 seconds)
    (241/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107197634 seconds)
    (242/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06071222 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100936191 seconds)
    (244/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067359794 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.168660351 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.233923984 seconds)
    (247/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098404189 seconds)
    (248/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.073788598 seconds)
    (249/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09005902 seconds)
    (250/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090087267 seconds)
    (251/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052140214 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054737298 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.166838824 seconds)
    (254/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071191095 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.08606477 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072626334 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115600054 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052186684 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065805793 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051619448 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134714245 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071411618 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.073674292 seconds)
    (264/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108305758 seconds)
    (265/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138767731 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074595784 seconds)
    (267/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093541214 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 0.125440928 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052804217 seconds)
    (270/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095897702 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156204211 seconds)
    (272/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067492787 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065599385 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072602111 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066003262 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067986368 seconds)
    (277/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.083076417 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08690894 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109287395 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139585815 seconds)
    (281/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.073889139 seconds)
    (282/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074067374 seconds)
    (283/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052794603 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093484849 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065414438 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066663152 seconds)
    (287/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.073477094 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064983602 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091035396 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085670844 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074502059 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071620199 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104342666 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065988788 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092247888 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108092029 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.072079565 seconds)
    (298/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073018747 seconds)
    (299/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053050656 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.082893829 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052677407 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052687502 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066710115 seconds)
    (304/309) benchmarking ("sort", Float32, false)...
    done (took 0.148094364 seconds)
    (305/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.091482867 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071794713 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05286251 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052337851 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143400102 seconds)
  done (took 34.386212414 seconds)
done (took 35.250945197 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081286276 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113023425 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074843446 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.113142525 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080923496 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099575295 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072851814 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099809366 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08110789 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.103036467 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079715004 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055267576 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095451842 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075367954 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094840297 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092928381 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.09936844 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07301019 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073613116 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085513029 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073819919 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086105599 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068370164 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055973569 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.098265672 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073047836 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.093802688 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07560704 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066723087 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.086611039 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070421692 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073717956 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086307626 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079576155 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092343838 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074446856 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07531912 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097271058 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068394447 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085996856 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074372765 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066627498 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093668536 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074801159 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.091898498 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072000715 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074785981 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099691868 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092575249 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089402215 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075292833 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.097663339 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077743505 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072261229 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090989798 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074846971 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091442949 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094039492 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095137097 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069340398 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074530846 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095265883 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072154206 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094981412 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07469466 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075724782 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097641206 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071919673 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096103469 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072145099 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066344871 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094224593 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070620448 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086212526 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076705201 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.0768922 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085850279 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072349738 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072792326 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092164359 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065719365 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08818803 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068507996 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073004388 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088614375 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056008376 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070314608 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092211317 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066706934 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074686858 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093021457 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073465449 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088179565 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077166487 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065539549 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091525568 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067374206 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066289278 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088588316 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070807029 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.085600547 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068179244 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074940444 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087386662 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071992479 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.100261327 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066602027 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073577512 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085623341 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066101325 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101596723 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076054161 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066970798 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088452158 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065635837 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073680545 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086219826 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067136732 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065206461 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08662236 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072263338 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08612831 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067968245 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073357432 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.0994477 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068902968 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069212332 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088487325 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067165718 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092115902 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06666137 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066738392 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088638279 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063861587 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069156604 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086634366 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073675749 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067826291 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094211784 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068888377 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094423673 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071233861 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072379642 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092041292 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065700863 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059386779 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088854576 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068696033 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067497092 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087077278 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068871836 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086069218 seconds)
done (took 13.065037275 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066480749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.166471778 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124301796 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096318451 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107614204 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067117623 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.097680363 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124324916 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06802039 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125701874 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088534697 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.105401812 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114683383 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086797538 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066830836 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069806254 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.088615337 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08826926 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123063918 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.107013506 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.137809681 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065878718 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118102961 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090469757 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109632069 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114174458 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067583614 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070673047 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.090619011 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102902229 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107435699 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070529343 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066812799 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.120004187 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.114325263 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085381999 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086340666 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08439925 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08740827 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067101349 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111372818 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099264975 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.101935562 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.102003917 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070483203 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069967949 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088159923 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086285065 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111996843 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.101562031 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088714904 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13026591 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089679133 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083807974 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065058854 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.10822391 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102612844 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069529367 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067430975 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089962844 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067389995 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070032892 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109780089 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.113103151 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070913321 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103421487 seconds)
  done (took 7.119273978 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08489198 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.114838918 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083910659 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.104997644 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066329725 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067629622 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088002518 seconds)
  done (took 1.526659257 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067220245 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089563495 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11181974 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090935397 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.10704764 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087648759 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098379458 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068325023 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104870296 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068573645 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109648251 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104423938 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089558854 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074143267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.113590628 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067686178 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091076299 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088283022 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070589853 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111536709 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070646233 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.108741361 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070368016 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067625841 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102861954 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068428503 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137015967 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072561871 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089887923 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071247388 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066064311 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.136680876 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102802521 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078771296 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068105198 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103757518 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08324624 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086288316 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08475987 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09319784 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083344716 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068110777 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090172897 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066449027 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093417639 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079009758 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068486357 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090095057 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070814938 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109068734 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068725996 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082755092 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088701504 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072456329 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089994825 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073105651 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077075818 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089635317 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087568996 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089846725 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084992699 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105442755 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082419336 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084691918 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091811861 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081534327 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102854279 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07072054 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06937829 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092231255 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08508612 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086923168 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069312895 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09986608 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069256068 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090895749 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112959935 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070274081 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.09846846 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068228678 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068141112 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088709371 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091676198 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091869424 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068371422 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071753484 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091732393 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066079441 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088228929 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071394334 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066446572 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089871663 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070795636 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067965718 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091739455 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084995196 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.089368191 seconds)
  done (took 9.212563005 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06822662 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068938088 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091123729 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068916262 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068762853 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.089896261 seconds)
  done (took 1.382242204 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097290119 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.090916619 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082369904 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.093939137 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10727076 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103523588 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083136302 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10446896 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085728532 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.100533483 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083513878 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104196417 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089554116 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.094224382 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083326998 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094454913 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083050694 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098344768 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080214487 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094870514 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087944309 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.094791762 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074104137 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105033194 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07092356 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07344115 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098504201 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081223581 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100643499 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082814252 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094740241 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071546796 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093381808 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082573174 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104108342 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072688748 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094177139 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071643881 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097767751 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070975371 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104363519 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074500518 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078968301 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.092988287 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.103783622 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073573304 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072055695 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098108153 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082289579 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093347578 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071952729 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094436429 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071841924 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093456647 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073222026 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104569777 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072223497 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.103984538 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07372537 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072638206 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.091055114 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071075757 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103796147 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071499883 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101943667 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072177014 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093755217 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074884793 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095155172 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073690825 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.092748536 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070282119 seconds)
  done (took 7.224506577 seconds)
done (took 27.374727202 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.631668691 seconds)
  done (took 1.556226774 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.765100889 seconds)
  done (took 1.693145801 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 13.624881806 seconds)
  done (took 14.555186773 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.595600014 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.74524903 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.795968054 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154754643 seconds)
  done (took 3.217951346 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.849221879 seconds)
  done (took 1.796078428 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232402008 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.241810453 seconds)
  done (took 1.406993543 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.704239768 seconds)
  done (took 1.640846614 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.262907705 seconds)
  done (took 2.195305307 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.31973184 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18107726 seconds)
  done (took 1.442319982 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.507611519 seconds)
  done (took 1.445805463 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.291967521 seconds)
  done (took 7.235687222 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228043723 seconds)
  done (took 1.180963231 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267109458 seconds)
  done (took 1.209372491 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.914412173 seconds)
  done (took 3.855770133 seconds)
done (took 45.366341936 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078603421 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08150065 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102460656 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078649085 seconds)
  done (took 1.277862616 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078391584 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073560063 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099466095 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073052832 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.099962712 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073484189 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097403722 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078354617 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072786404 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095942855 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073840374 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094630931 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075892375 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.096462992 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071081008 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075815279 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098023364 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073839711 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.097860975 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074296245 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070892809 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096995996 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076184927 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093793499 seconds)
  done (took 2.961172156 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077665516 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07308128 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096380319 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072723282 seconds)
  done (took 1.26489875 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076526713 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.114709911 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089654804 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.098546645 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092922648 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109086453 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070436277 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070128423 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09376459 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077405953 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090239883 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098194981 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109211149 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077075961 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100708702 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066726906 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06947886 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109373792 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077831619 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100035551 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071127997 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098565732 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069089098 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089945334 seconds)
  done (took 3.071773175 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0775796 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103067879 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.100619381 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089316757 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.114323339 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066299954 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.098127032 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091821265 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.147880862 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065908657 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093228139 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066458175 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.094884111 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066054503 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077695386 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132180932 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112307068 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.091919538 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096843587 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.088085712 seconds)
  done (took 2.827816507 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075078876 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069734876 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088039753 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069214853 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076185336 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.094919863 seconds)
  done (took 1.425558539 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068898562 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067566372 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088549943 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067046953 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072593774 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.089776928 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067057213 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068316116 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089297589 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067902879 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06744719 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088057634 seconds)
  done (took 1.853727388 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.41341886 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068974625 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.091597567 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066345366 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071682949 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089126071 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08031023 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068695198 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113300459 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067377855 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09011553 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069111082 seconds)
  done (took 2.245933893 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252750001 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07774176 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316715954 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165573994 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135116665 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153045555 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103975703 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138763417 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193289964 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135495618 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197518983 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216506105 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131809908 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165262615 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113018233 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13112416 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181156342 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217592565 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128246496 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196033319 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201239505 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153802839 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177027411 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125967875 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132141933 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141676091 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071528366 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103292005 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225423205 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158119337 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196298148 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134531348 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117308605 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202652034 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215653276 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190368022 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160454152 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085167755 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.153787793 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160810986 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251720359 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113056682 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215132934 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108751821 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104592029 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16872234 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143598338 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.142849988 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133921778 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112614237 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170685771 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233576082 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.185482488 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087500522 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135583583 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13719501 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140856039 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126688574 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237901694 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190463112 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179094335 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072055732 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120342643 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183074562 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156835332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.138640638 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.173486333 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093605954 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188476314 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183960109 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140943149 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194570567 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.156235853 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111791167 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144028005 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166975844 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150247517 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224218832 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150913736 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073182711 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170502704 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101663785 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105164745 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166702875 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077093283 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22909892 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123004181 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113372439 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137438822 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133395777 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134427187 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213676326 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174969054 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128147187 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066312468 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126831292 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147527516 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193864569 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08820215 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132508608 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143331521 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102114816 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163180118 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099042391 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150623855 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079563526 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148223725 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159087248 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099956608 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15031739 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126413589 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10364879 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18436901 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190591792 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113255469 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106439459 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197495202 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151987841 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.128974123 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196313844 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186483683 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125213192 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124268937 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172539384 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236594792 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113585154 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218946691 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104349274 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107342476 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.111879772 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152265695 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137359969 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147032315 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08380265 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150784482 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220660661 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.0988523 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096144784 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162187419 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10392828 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104951684 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136747981 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100017065 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.118122893 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12486921 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.130636795 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165247581 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151313707 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132091379 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148951938 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122894506 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214130311 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113047131 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105231379 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127804089 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.092789987 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.161821421 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188814701 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103753971 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219960903 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153273023 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128625078 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144582194 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084026479 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166953032 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103678525 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071551898 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192418701 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137149017 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110948112 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.204395704 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128876643 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.152222081 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149557109 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157721938 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156739484 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182994751 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106986291 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112315455 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138767111 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150284054 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098060662 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094845075 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106535309 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129099268 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117899844 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084812516 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168889709 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175413476 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098866953 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137557383 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12182263 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175668011 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100550675 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155480236 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.144931505 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11949935 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18221532 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210128563 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16259776 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124100893 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19681114 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072447405 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075585959 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113519713 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153021619 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107871747 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084014876 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140621007 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199879557 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154996197 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160734606 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135445638 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147822501 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209461411 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072749895 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141657852 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175753594 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151429329 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.152199698 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112305258 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099838297 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196130297 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127941223 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241205557 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142361878 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150580088 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179107713 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128375744 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104626072 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103826396 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188278686 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129699139 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179144715 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126716814 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113899888 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135427872 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082332538 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128551595 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152558806 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143354902 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184586183 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.141773756 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158504828 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101540591 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140843844 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150356022 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146255192 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065667992 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14630996 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217355838 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119025096 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14435016 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181899774 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103969298 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.149510935 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233783151 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172404017 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109276748 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133036137 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14829586 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156625222 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145452284 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167438635 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133926147 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162105037 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136050109 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109850052 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088785801 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12372596 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133100548 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119759679 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137413248 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.142410017 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094843715 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182079454 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137351216 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135396447 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144550085 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100046633 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116484112 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098029593 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230396758 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1464497 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227516088 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126353325 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.200729569 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196358235 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100178528 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079647585 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105425569 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168694021 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108479113 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161274747 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097508805 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129337965 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152732453 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193537945 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095859232 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092964877 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134914653 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160442487 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136426648 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123499671 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106397603 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21687644 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131081487 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079866686 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150874902 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129081493 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127819106 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229541265 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062818042 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12165438 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076552254 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105647657 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156465267 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210474376 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083298667 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.150112819 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145909437 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146799166 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156103933 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124114373 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121945024 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113897045 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198491606 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155499359 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.114737155 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138293445 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156905567 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20990509 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1068794 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.119429815 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224769591 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182887509 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.216389632 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.112690284 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141862541 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141525401 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136889517 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168985633 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108859321 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220373279 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083670985 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187810364 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128191538 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09364555 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177901294 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097826791 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113309469 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176862478 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145329906 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107456007 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079994381 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161971069 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147882199 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103742279 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099376413 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1799068 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097901392 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164756859 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222352513 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082823931 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132097315 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121465637 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083443695 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13029371 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12886615 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11175446 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.119818228 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222623274 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.115026303 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20332588 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168420453 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139426469 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188092567 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101816666 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.660585132 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103769577 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184071557 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142511326 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256418043 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099853485 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146422231 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136885098 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147201272 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192098027 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130785254 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177995594 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182785854 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.147124042 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080591488 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128248404 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136234258 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.113555669 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132633064 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141452186 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141085652 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.101795796 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168104154 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154469156 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.0820948 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120448539 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21234921 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143782799 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171499914 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167713986 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109891211 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144820177 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191357824 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081788364 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.147873289 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210189017 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13288767 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124689895 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082442282 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130698426 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226839313 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074741791 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213877948 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15094063 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135509935 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139605534 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144365815 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183858238 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132192555 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15145077 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096520142 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160437152 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117167716 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109041982 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101819443 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107446739 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135847961 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124286614 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127243139 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137704245 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184198632 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071732529 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119263304 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127788185 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168729736 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23126992 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.113967662 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083424548 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142107807 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137058737 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.140845558 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174453064 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083043252 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107966853 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08347309 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1343792 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135378164 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141196599 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104827521 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136495908 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219412961 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109967247 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225837011 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120549389 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133783825 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070723374 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104611007 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121288821 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097598922 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128425108 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122416003 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226288662 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098913226 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.115726915 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117940098 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074612684 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107067405 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157141303 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136870874 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147375454 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121057759 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065001048 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131824232 seconds)
  done (took 69.929862912 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134871858 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.102911499 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116656986 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171790113 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14431432 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236953691 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180156801 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22103534 seconds)
  done (took 2.335490106 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069387019 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116354194 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102167979 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11330553 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089023617 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068808909 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.289812027 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.107046434 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067120746 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.112639465 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.115162882 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09058109 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.4512918 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066876349 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.091796372 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08275503 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067766958 seconds)
  done (took 3.119833188 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423732507 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.578854972 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.446994651 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073334172 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.631086041 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089274043 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.970082039 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.154606224 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072349319 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.401463774 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.741746134 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125766633 seconds)
  done (took 16.738077051 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075009919 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069626482 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107288246 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083780776 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096035637 seconds)
  done (took 1.464141824 seconds)
done (took 111.453278638 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079917033 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.352723089 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053746575 seconds)
  done (took 1.46584669 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08374095 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084981153 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109762308 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083520776 seconds)
  done (took 1.399636398 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075041996 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077142838 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10898803 seconds)
  done (took 1.294910203 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.277511824 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16210231 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088631599 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082832466 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077861246 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102864195 seconds)
  done (took 1.297777979 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072275085 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074838198 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096711256 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076465426 seconds)
  done (took 1.347804079 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076494744 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053830163 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055327289 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080046384 seconds)
  done (took 1.299225549 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08965188 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.103584089 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081794105 seconds)
  done (took 1.306342401 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107434747 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.109148799 seconds)
  done (took 1.25135901 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081520708 seconds)
  done (took 1.109880957 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091987425 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.137667191 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.152832111 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.133892439 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.163517951 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.134643962 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.109794255 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087194442 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.101512807 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.11199641 seconds)
  done (took 2.259557722 seconds)
done (took 15.662675163 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078956103 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380878089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361114587 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114830922 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668826708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356307107 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98728898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.115661259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107953069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091598363 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084114032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672827438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.954847681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320055053 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965764614 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320340166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674385434 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068295481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067807444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092381658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952831709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091650347 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068057425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068110543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67341229 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371053609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092617193 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321456516 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067735068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094193475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355864833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092895256 seconds)
  done (took 15.759290788 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07056413 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140171329 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074358852 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083539717 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094572378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070100587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.095874725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070229857 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143385657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068783655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.108662715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068679848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072508108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093299532 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087289769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092632938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069071217 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069754521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092884056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069091733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110392543 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068890684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0686695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092665949 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069254549 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.103810251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06955151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068225276 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092290421 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07157363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.095160699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069223703 seconds)
  done (took 3.750239674 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114314381 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149856096 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074602231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126317122 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112119731 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095123077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.166208674 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094208065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146937365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068495433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.108988041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068159511 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124334608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06930579 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.111593425 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069035258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069561564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092360828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068570862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092128736 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086753994 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067835003 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092646556 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069127254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092374469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081328373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068544609 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094678616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069740711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093808234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071619276 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069243006 seconds)
  done (took 4.023341062 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072720009 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074736678 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107018708 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083736521 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094065696 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073153306 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07334429 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.094239565 seconds)
  done (took 1.718042585 seconds)
done (took 26.28080616 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078596978 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070487918 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.097712774 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081170262 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097360612 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079566693 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067796157 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099406784 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075759874 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073547039 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.100113307 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067770767 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.0954168 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068240585 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074296057 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092610864 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080570207 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096697406 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080210451 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.10371567 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070202538 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075393041 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097969246 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079554417 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103407931 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080455949 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079750012 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098076385 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069624474 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097139324 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077091924 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.108257905 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069188903 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079093772 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.092329643 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068808355 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067665228 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09261554 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079360046 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.09927303 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070509495 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099249741 seconds)
  done (took 4.568774885 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088750302 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092680465 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110178795 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062405237 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092210162 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.062191036 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089191469 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.085105523 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062849165 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113343428 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056301245 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058535896 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.083765435 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054680223 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058282133 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057266064 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08630242 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057043892 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.057748266 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.083257052 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.061374519 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055119677 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060049932 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083847931 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057680633 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062520955 seconds)
  done (took 2.936966192 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.083724475 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081314274 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112084858 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152435615 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106339741 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101008199 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078048333 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.085417291 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108756742 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068586789 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095637625 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096050166 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08687806 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.099778841 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068437438 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.107078744 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082727123 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069520912 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.09923658 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088606 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.108192977 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07801997 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113102651 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079831997 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067138749 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094332685 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071687962 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.105594145 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073434922 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076753397 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09670082 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07152145 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.093871934 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079535178 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.095537995 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069967767 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08721294 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101977607 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076902658 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092934132 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071551929 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069212914 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.111803333 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111898825 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09169617 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074279166 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074842441 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.101706661 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067628639 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110042954 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077046119 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067453372 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.095075539 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067868644 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.092035451 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082027693 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06959776 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094688787 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077690743 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095159341 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080248704 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071440197 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107312585 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068038518 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099906177 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067845542 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068018995 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091469417 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090696407 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093383263 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107379562 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069018917 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093949708 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07719801 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100244735 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074256041 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068362703 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107344838 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077748638 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.095892408 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077379269 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.095878836 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071075481 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086142531 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095606836 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070624491 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068977053 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098206466 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070611123 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093269264 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081606131 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068209127 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095197355 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085902315 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091963279 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069550123 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073693636 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.097036332 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067794294 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103854553 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073169873 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068577379 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102284698 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068402918 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094988381 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077886089 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071847006 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091846068 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072451408 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098988554 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068576409 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069191086 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095341964 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069724336 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101487281 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074646761 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072491828 seconds)
  done (took 11.107370068 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.188435888 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.18077657 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07048977 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.173850089 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076340413 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.105421729 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.175719431 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096458989 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093918776 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069404182 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068765611 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129240437 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123712267 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108784511 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105144261 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068165077 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110740642 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10624155 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.178282178 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.171541913 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112557475 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076650928 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070038882 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.09520533 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070943504 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103210226 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084747039 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101527704 seconds)
  done (took 4.17734962 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081262334 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.121968967 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074649739 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08606703 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115830192 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068275169 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.097485194 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070026096 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.1055283 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080097275 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093605492 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073790436 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074985622 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.101659141 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069854151 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101647851 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077064989 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069779807 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.096488571 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072560721 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.099068433 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080147899 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07184412 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092714056 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074846724 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092649213 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064979243 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.109525052 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069302214 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.111185479 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067180186 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073957017 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102858007 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06979649 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067440343 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095599571 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070179731 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094965883 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070034039 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06742384 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.092007973 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058386765 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067855287 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105540637 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074652946 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.085420326 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074177465 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073629619 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09808442 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067086598 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095533375 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071231056 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072147683 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101632986 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07381498 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073141696 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097210207 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067160281 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099810134 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070980261 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064952103 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092024424 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073902223 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066959291 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101833095 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073652425 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091947069 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070593197 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072604631 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.099045066 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070738114 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071069076 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091080815 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070632075 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097371302 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072869281 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071333222 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09163346 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068154639 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068475132 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.081279329 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06858564 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054618381 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096084474 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067408602 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066980106 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095340404 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075976959 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105819463 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070964842 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.098979785 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069899242 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067435378 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096514818 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063543562 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071258346 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.106854907 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083223937 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093154221 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06621995 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105828811 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073146044 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067215033 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.082378188 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075290327 seconds)
  done (took 9.641797569 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.091051331 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092116032 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095007951 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081473675 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.118416425 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092262812 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10027228 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075032561 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069650041 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.110722365 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069135886 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.101535075 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072672454 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077003962 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.11773953 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076142475 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095337845 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077559076 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076132288 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.128339478 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081326968 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107451642 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.078893253 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094223696 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073462406 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080038124 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.121084667 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078741101 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103514787 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.083332135 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078902967 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.120408221 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.08333914 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097464077 seconds)
  done (took 4.172245477 seconds)
done (took 37.640879266 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.12766065 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.31565813 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.113812725 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.908464602 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.138823557 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.131988933 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.126309541 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.1145332 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.971983067 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.114637926 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.370839735 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.612911342 seconds)
done (took 58.112369021 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.128064591 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.25130229 seconds)
    (2/2) benchmarking "String"...
    done (took 1.382529256 seconds)
  done (took 3.702020535 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.442830719 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.053981564 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.397571129 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.112259101 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.125451625 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.57861829 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.514343677 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.872905519 seconds)
  done (took 26.713602241 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.11096804 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.434329889 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.989098747 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.984481334 seconds)
  done (took 16.577711725 seconds)
done (took 56.623383841 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.101942684 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.173299836 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.119888914 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.097802696 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.206231406 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.130902587 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.450157272 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.140278909 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.113309689 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.098978319 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.111862726 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.111181765 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.116053797 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.436530389 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.117309288 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.111079893 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.112502163 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.607735778 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.454384701 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.119767027 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.130290871 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.119691634 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.11635621 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.11561216 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.146370756 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.123573831 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.112805899 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.136505627 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.827962965 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.113202611 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.182330506 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.579995377 seconds)
  done (took 186.696204927 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.112003776 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.183904412 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.28774275 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.152917836 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.53066955 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.311714592 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.224340391 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.61897831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.125847858 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.139948941 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.368396136 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.114993498 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.420180884 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.099197974 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.122857899 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.216438024 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.313515903 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.416375889 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.12799443 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.358728275 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.12227435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.361406961 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.266596986 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.331292737 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.12636625 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.186240326 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.144285948 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.116550598 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.304708778 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.280704986 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.146069086 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.119690944 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.599953901 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.972519775 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.139138408 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.135163871 seconds)
  done (took 146.659986118 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.36860993 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.113897559 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.113483375 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.11477431 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.139298394 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.112634298 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.558392102 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.560432526 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.600329615 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.41294924 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.16999564 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.250855106 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.115195895 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.202372217 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.12672031 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.115649074 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.129827159 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.140466644 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.116762729 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.114338675 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.559403772 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.127918738 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.114604634 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.121257577 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.114039945 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.14017785 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.50398461 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.301701254 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.114768057 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.139481907 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.414786747 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.152351645 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.115457514 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.32710652 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.288273106 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219258898 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.117824754 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.141581667 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.114934462 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.372270685 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.116240197 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.114900151 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.118268915 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.615948831 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.117645897 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.561847211 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.118088736 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.932141781 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.1186077 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.116133959 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.221230632 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.411723505 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.117249763 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.11605307 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.118221305 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.115415645 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.116317214 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.11703232 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.14096563 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.230910624 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.210179815 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.116426049 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.119198436 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.142472304 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.11740072 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.267642037 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.117096728 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.434302489 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.171035565 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.221640024 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.563699042 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.119899816 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.117569912 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.205068816 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230290183 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.117530549 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.118170394 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.116792042 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.11769936 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.218301949 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.117305216 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.459924627 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.123412758 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.118039132 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.173687627 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.204841402 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.117830124 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.11725191 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.326197876 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.119436217 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.115999916 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.736509492 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206006756 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.117180752 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.116155171 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.118021089 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.460618517 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.565774154 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.212537336 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.120450749 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.245594572 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.11871578 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.471133248 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.557249978 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.617952631 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.122366037 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219787809 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.12352905 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.120550969 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.117821395 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.146903571 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.118505345 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.177283204 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.119724316 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.509575832 seconds)
  done (took 332.68949244 seconds)
done (took 668.472856293 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.720665672 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.708836594 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.812491327 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.710791772 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.692267289 seconds)
  done (took 9.710715028 seconds)
done (took 10.776201067 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.280401256 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.280622347 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.168939413 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.281746631 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.144114025 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.295177879 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.260174673 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.139187082 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.20849107 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.181868659 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.207935314 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.161728053 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.143066843 seconds)
  done (took 16.819284493 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.413828732 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.414783568 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.184036295 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411312936 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.160458838 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.447280532 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.309976289 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.314772542 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304833834 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.136025226 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.13328937 seconds)
  done (took 15.298266294 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.421183983 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.415712042 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.188255131 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417552146 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.162040554 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418890965 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.314405056 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318936848 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.306103447 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.135322455 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.133502079 seconds)
  done (took 15.298592736 seconds)
done (took 48.481488691 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.129078342 seconds)
  done (took 2.196978058 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.160102227 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.316998772 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.14293158 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.135094001 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.131220824 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.13309667 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.135698134 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.131143429 seconds)
  done (took 10.355339269 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.129724918 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.128641745 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.127281669 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.127307515 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.129598346 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.13062086 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.130524235 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.127031729 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.128042169 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.126459616 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.129574108 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.129744895 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.126603252 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.12848451 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.130148114 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.127705844 seconds)
  done (took 19.124617257 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.128924234 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.127605738 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.127478004 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.128432388 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.127480773 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.126717873 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.128720415 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.128268008 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.127441818 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.127817501 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.127975371 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.128074043 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.128287274 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.127085058 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.128449362 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.128712878 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.128385983 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.128114459 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.132921148 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.128460094 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.128691525 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.127698951 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.128971285 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.129190847 seconds)
  done (took 28.150092569 seconds)
done (took 60.893294307 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.890827696 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.50856358 seconds)
  done (took 8.467712134 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.129214467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.131112265 seconds)
  done (took 3.330443318 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.129803047 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.129829855 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.130356656 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.130764943 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.131555987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.131112322 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.130608477 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.130931816 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.131317946 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.131636073 seconds)
  done (took 12.3776527 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.13047154 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.131493377 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.128712233 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.130335998 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.13102064 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.129129268 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.131558381 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.131830446 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.131196967 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.129503268 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.131344907 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.129773996 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.131441456 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.129681226 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.131532521 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.128319648 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.1295029 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.129132233 seconds)
  done (took 21.416589518 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.130988452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.131840758 seconds)
  done (took 3.332266038 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.128766212 seconds)
    (2/7) benchmarking "second"...
    done (took 1.128197719 seconds)
    (3/7) benchmarking "month"...
    done (took 1.129038695 seconds)
    (4/7) benchmarking "year"...
    done (took 1.129765788 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.128776026 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.129473606 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.129778302 seconds)
  done (took 8.974590583 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.134203275 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.301092776 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.382715902 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.728867996 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.133467653 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.136696371 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.01256298 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.136494555 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.139335043 seconds)
  done (took 13.175984118 seconds)
done (took 72.143271441 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.08946362 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.126687953 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.890336868 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.133161366 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.142652538 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.469474985 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.131117767 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.25743979 seconds)
done (took 36.311399026 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.145369844 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.799674203 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.802431099 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.128121992 seconds)
  done (took 10.801949766 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.113353437 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.938831472 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.117205242 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.046295328 seconds)
  done (took 17.287863183 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.67156486 seconds)
    (2/2) benchmarking "read"...
    done (took 1.455649157 seconds)
  done (took 4.198554451 seconds)
done (took 39.504532505 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.134046337 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.134102001 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.131505118 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.13363139 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.131277841 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.130670984 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.134785495 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.133937784 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.134063991 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.130927049 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.132969318 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.133943546 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.135479104 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135248257 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.132337553 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1328679 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.134831509 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.131565669 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.134263014 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.132703951 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13230756 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.135237137 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.132458123 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.133812977 seconds)
  done (took 28.271719954 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.135468392 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.135066513 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.135213971 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.135442759 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.133244723 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.136532557 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.135609162 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.134194849 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.135479646 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.136211361 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.13367579 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.132344014 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.135382361 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.133242349 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135813601 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.133564662 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.13716711 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132748024 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.134840758 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.134399266 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.136078838 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.134181235 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.134100379 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.135769432 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.134636744 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.134208627 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.136505001 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.13453319 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.136790333 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.133586046 seconds)
  done (took 35.121487631 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.140266462 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.141862148 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.136748974 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.136578596 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.137413299 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.136054024 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.136382588 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.135869962 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.136775441 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.137372381 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.136916706 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.136808822 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.136336664 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.137050916 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.137298157 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.136441676 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.139495167 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.133335731 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.132959656 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.133523254 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.133647413 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.133151703 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.133426625 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.133700727 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.134264307 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.132967404 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.125086854 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.125140422 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.126069378 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.125888407 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.12546064 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.12577131 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.126018984 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.125214628 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.124088583 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.117735738 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.122238207 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.122456147 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.117785741 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.118243313 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.118340823 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.118358401 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.117530895 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.11500665 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.113304707 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.113936837 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.112449605 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.114207825 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.113399163 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.113681102 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.114153788 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.113357911 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.113794103 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.111745943 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.11258909 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.112317325 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.112309091 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.111538611 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.112136754 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.112943605 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.112695908 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.112643564 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.110456218 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.110056751 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.11104471 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.110139549 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.1106322 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.110332672 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.110269145 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.110500452 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.109939977 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.109064841 seconds)
  done (took 81.94607401 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.109420406 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.106699201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.106085174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.106419415 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.106517339 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.108510334 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.106354864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.107140214 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.10531144 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.107268399 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108401463 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.106560031 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.105315299 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.10854443 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.107959139 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.106463231 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.108567986 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.105760392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.107784511 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.108986862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.108828961 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.105892417 seconds)
  done (took 25.407228367 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.109009896 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.109365016 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.105663907 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.108546332 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.106877713 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.10930218 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.109286893 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.1086499 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.108838281 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.106062439 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.107595285 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108558156 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.106020312 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.104497198 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.106452235 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.10510876 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.108864245 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.105708085 seconds)
  done (took 20.982419285 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.106642811 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.103366947 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.105431001 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.103825379 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.103521706 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.106050681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.104155647 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.106214783 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.105427752 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.104955135 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.104462539 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.104483545 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.103946682 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.102871783 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103896356 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.102632462 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.105172137 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.101147602 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.105814656 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.100986637 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.101464119 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.103847315 seconds)
  done (took 25.338304294 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.103078702 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.103662333 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.100984614 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.101531805 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.102657347 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.102349215 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.103138206 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.099887115 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.102191518 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.102204191 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.100494295 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.10359543 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.099630533 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.101304045 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.100244046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.100274346 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.103053951 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.10171169 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.102400385 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.099947158 seconds)
  done (took 23.07839288 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.10210433 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.104291423 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.103583836 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.102876787 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.101731445 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.101721443 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.101933539 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.10136584 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.101841138 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.103243009 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.10158255 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.102418732 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.100420349 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.099631035 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.099214163 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.099500417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.100747185 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.099555252 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.10088534 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.100023809 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.100512756 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.09684727 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.097031006 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.097777505 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.097047091 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.097756679 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.097033996 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.097534855 seconds)
  done (took 31.853704547 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.097600432 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.095207333 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.093572687 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.093309497 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.094178652 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.092610279 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.092893018 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.093837707 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.096224443 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.093490706 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.096237027 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.09688024 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.095824442 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.095953291 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.096472478 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.09646938 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.095513619 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.094384801 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.095203049 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.094238275 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.096803415 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.096502135 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.095952251 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.094885585 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.094949449 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.096514652 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.094750064 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.094868722 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.097153292 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.093248039 seconds)
  done (took 33.892493051 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.115843279 seconds)
    (2/2) benchmarking "in"...
    done (took 1.11495181 seconds)
  done (took 3.266757221 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.094247213 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.097698503 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.097229055 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.095299523 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.095312827 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.097570508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.097134552 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.094044674 seconds)
  done (took 9.804660011 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.096914966 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.098647421 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.097167902 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.098508531 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.098362186 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.097288342 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.102219652 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.112982785 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.099787629 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.099472689 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.103423879 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.103115276 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.102159772 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.099197184 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.098247139 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.101496734 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.099614542 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.100145518 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.099749691 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.100515073 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.100315936 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.102814671 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.101782559 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.097538731 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.100595246 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.108698479 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.1047159 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.100807007 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.099638275 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.103602639 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.099353756 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.096904863 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.100605406 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.100111145 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.10021205 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.100717143 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.108803772 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.114277783 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.106718973 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.101746041 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.101660479 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.098899957 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.101876482 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.101363046 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.10306678 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.101187413 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.101876188 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.09880539 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.100370952 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.103475195 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.103972946 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.099683365 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.09859102 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.104451819 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.102288501 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.109206847 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.115945157 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.103527133 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.106751773 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.110464533 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.113103306 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.108077071 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.103303635 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.103244051 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.109596947 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.120481855 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.108956898 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.114293301 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.099447891 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.10239351 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.108918214 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.114424792 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.109920427 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.103051224 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.103052416 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.103113043 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.102356268 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.103188318 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.109054599 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.120276859 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.103252449 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.103384051 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.110639187 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.120388781 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.101641311 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.103594907 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.103022927 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.103731936 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.103747252 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.11277405 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.118323503 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.103602771 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.10284547 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.102703074 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.10456297 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.10377192 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.102722019 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.103603921 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.101756034 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.103903108 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.104241788 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.106580326 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.110686669 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.103638887 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.105130395 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.110317335 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.104571315 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.102091311 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.110825014 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.104692666 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.104255823 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.105442651 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.108345927 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.101955728 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.106113445 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.111089196 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.104824495 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.10585656 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.104796339 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.105504055 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.114068585 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.126388083 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.103437199 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.105283078 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.108249345 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.113220601 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.104829695 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.107963413 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.105080298 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.10246423 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.102536723 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.106269741 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.104619763 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.105184828 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.105128363 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.106642284 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.102762768 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.105155684 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.105733913 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.106540463 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.105965374 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.104417461 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.106286803 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.109445584 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.105300945 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.106980877 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.112459103 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.105737662 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.106523825 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.106425225 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.104084213 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.106742608 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.106113119 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.106594664 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.105345368 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.105876091 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.107517733 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.100987725 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.100387961 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.10101465 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.100808346 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.101110724 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.103632309 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.101370407 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.105393282 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.099985038 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.096124199 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.097434663 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.096772907 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.096970353 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.096754628 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.096029202 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.100009277 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.103063866 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.097978528 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.098710803 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.096618937 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.094372326 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.094883877 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.094865418 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.096616329 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.1006415 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.094853055 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.100638618 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.096335779 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.093938762 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.093905326 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.09432189 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.092479354 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.092886051 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.096015609 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.099953008 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.105133167 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.101625835 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.093956566 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.096863298 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.094901742 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.096562246 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.098952269 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.094011217 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.094505675 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.094665681 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.093880006 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.093834468 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.094728683 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.093633645 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.093862927 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.094789916 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.094809487 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.094622705 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.094923896 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.095836333 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.095138397 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.092151743 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.095092258 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.094805633 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.093813628 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.093482209 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.093997574 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.094632863 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.095889681 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.095201749 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.101326425 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.093505336 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.096031728 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.096878568 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.094637885 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.094639065 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.094796616 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.097126031 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.09509968 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.102357238 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.110381924 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.096164433 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.10274568 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.109908757 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.09587405 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.09907873 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.096385947 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.093872184 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.097393856 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.100599336 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.095696784 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.096295088 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.096283285 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.096568497 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.096836543 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.101986911 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.09479519 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.096473205 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.096652124 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.099011316 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.09401527 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.098279327 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.097222998 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.097654372 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.099067252 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.096812277 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.096677515 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.097592928 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.097140578 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.096452096 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.097777844 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.098590196 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.102732189 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.101670277 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.097807345 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.098167789 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.097639675 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.09959924 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.098329094 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.096773072 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.096359264 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.107696292 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.102984068 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.104153221 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.098049252 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.096927763 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.10348496 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.097921741 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.100156542 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.096786082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.098351696 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.09785046 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.097044157 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.095209687 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.09771115 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.09845723 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.099583906 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.099007977 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.101230241 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.099154903 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.098496506 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.098043019 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.098651903 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.098669359 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.097461796 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.098493423 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.10055084 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.100731526 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.097648553 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.098894929 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.105470125 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.112280181 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.099846932 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.098835416 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.098443731 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.098128357 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.100025453 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.098093825 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.101096892 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.104973249 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.101565192 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.106290544 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.099483704 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.107096963 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.098493166 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.101795763 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.104829805 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.097399396 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.098406662 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.099689697 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.099322794 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.106779777 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.114034292 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.100177924 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.103539706 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.100436668 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.10021755 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.100033141 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.10026138 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.101641681 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.10013222 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.108276028 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.114488557 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.10422646 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.101479116 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.098653605 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.101034416 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.100036394 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.099201973 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.104026234 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.100508174 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.101349289 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.100360065 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.100769161 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.101641189 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.101255871 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.101422109 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.098632606 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.101507004 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.108090577 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.116327372 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.104003966 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.10180032 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.108987642 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.103376538 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.108009376 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.115569093 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.10228678 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.101082752 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.101226594 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.102254573 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.100356801 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.102706046 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.101925134 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.102162643 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.104030726 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.100962012 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.103766252 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.103033189 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.101998372 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.102078279 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.110939222 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.121955889 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.103225976 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.105686033 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.100203289 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.102389214 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.105575173 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.102531991 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.101687121 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.104159739 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.11135125 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.109225232 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.102909259 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.103680787 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.102459271 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.103020141 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.103281987 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.103212632 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.102930576 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.102002333 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.104898424 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.10272841 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.106411011 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.103180632 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.103528898 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.103536226 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.103984909 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.111075465 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.103719389 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.104826675 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.102538554 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.103293314 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.103696299 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.102982769 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.103316555 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.103561547 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.10345248 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.105087344 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.10893812 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.106914684 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.105948081 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.102490828 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.103540138 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.103557974 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.104557295 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.104476191 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.10362881 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.105461145 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.104446786 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.104368742 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.105340547 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.1035623 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.104962461 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.104732358 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.104458876 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.10639646 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.109662756 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.103623031 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.101938522 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.104625492 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.104414455 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.10367756 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.104740449 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.111740548 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.107743586 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.112953196 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.111253802 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.107358114 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.105546872 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.107323665 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.111396351 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.104511283 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.105669748 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.105306189 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.10712484 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.105661507 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.107529782 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.104735386 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.111926895 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.105689183 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.104712241 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.113316453 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.120376333 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.105842564 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.107517074 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.109230498 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.105605167 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.104488658 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.106873669 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.10566172 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.112084292 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.12187407 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.106113319 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.107694592 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.104746791 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.108130357 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.109152499 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.10631462 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.107853421 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.104655495 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.107165626 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.107185154 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.107105555 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.104468478 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.106479708 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.106812113 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.10862285 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.111596026 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.104239435 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.108351033 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.106651541 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.1073346 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.107807781 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.107539194 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.104525772 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.104534967 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.107390054 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.107906294 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.108238939 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.109923743 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.107603226 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.107384896 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.107181971 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.108352203 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.110087011 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.115324875 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.114537555 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.105203951 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.107222576 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.109245751 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.111737554 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.107184242 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.107209599 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.107908572 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.109041962 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.108171365 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.108487297 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.108652901 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.109785217 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.122329159 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.122328398 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.109024781 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.10946236 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.112189153 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.108906023 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.106854525 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.108888009 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.111257941 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.112444517 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.114512249 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.109190732 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.116432118 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.123587029 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.110417024 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.112283018 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.111728104 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.115216849 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.112679305 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.10919133 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.109203145 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.113327965 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.122094713 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.110179123 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.118530684 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.134958349 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.124804269 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.109971511 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.110837909 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.109435246 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.110634404 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.112223673 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.111525148 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.110088115 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.11006202 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.110522684 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.111783245 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.114786301 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.111803964 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.11115099 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.110737604 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.109965279 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.11156383 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.108666186 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.111480379 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.110584636 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.110913788 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.111845751 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.11170229 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.111957749 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.122138784 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.119320718 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.111378602 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.112271136 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.108613986 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.114973379 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.114237053 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.119926058 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.117532941 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.111988498 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.111829544 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.112765982 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.111964926 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.109681527 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.112491975 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.112347737 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.111455588 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.109057059 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.123073778 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.118895071 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.11609367 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.112085334 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.113210002 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.11222389 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.113253916 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.112236319 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.111569166 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.113735441 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.113792 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.11509266 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.112169385 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.111956007 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.115532543 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.118217711 seconds)
  done (took 659.332176249 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.111072857 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.110158305 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.109412965 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.110693415 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.110168688 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.110628898 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.109676397 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.110847894 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.109444393 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.1104644 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.110503734 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.111037528 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.110824757 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.111812561 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.11097931 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.111007757 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.110654772 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.111373839 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.111501431 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.111491554 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.111088775 seconds)
  done (took 24.376020262 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.11335039 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.111484558 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.110807809 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.113436282 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.111481472 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.113985485 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.112081985 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.113806574 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.113667148 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.111379061 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.114339738 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.113645557 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.112022708 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.112479961 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.112083945 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.115223395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.114053778 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.111499249 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.114594668 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.11221241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.114377308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.112264932 seconds)
  done (took 25.53574941 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.115388285 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.115034848 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.114095602 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.113182095 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.115734604 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.11295396 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.116800958 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.11634068 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.115839063 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.114895092 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.114225739 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.116261594 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.120354973 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.119034419 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.118131168 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.116026231 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.259662943 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.115254232 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.115917981 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.115048736 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.112626353 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.120655432 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.112691054 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.112238366 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.114741079 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.115213346 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.115940855 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.116032517 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.114885163 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.115974725 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.118331953 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.115926062 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.115350943 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.117438298 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.115191045 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.117033294 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.118804537 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.116962181 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.11362734 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.116632206 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.125333675 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.132142282 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.116250593 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.122973052 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.116666843 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.11673491 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.119635715 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.122774114 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.114582703 seconds)
  done (took 55.917680752 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.116510978 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.117721494 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.114169992 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.117437078 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.116836199 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.116343483 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.117328752 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.117299759 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.114969557 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.115177981 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.117151361 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.11504512 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.116064563 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.118166615 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.118062683 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.116045793 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.116049535 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.11637558 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.116277353 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.11619985 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.116923647 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.118915652 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.117780371 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.116616741 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.118525149 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.117291802 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.116528398 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.118506059 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.116893729 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.116488477 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.119617803 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.11849521 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.119629816 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.117204759 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.117045917 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.119308032 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.118215971 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.115995361 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.120008403 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.116523441 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.120177914 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.120039488 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.119450258 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.120149525 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.117673772 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.116824354 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.117940353 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.116343074 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.1194193 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.120198548 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.120345778 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.11740635 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.120367325 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.117822235 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.120269012 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.120601549 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.118614549 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.117478026 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.120671952 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.118518117 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.118162556 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.120613881 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.11770581 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.120404087 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.119624379 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.118510233 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.118348494 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.119609957 seconds)
  done (took 77.075513717 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.120399514 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.120910684 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.11984163 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.120585196 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.120209315 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.119988793 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.120060237 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.120685541 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.120031059 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.120501867 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.121192487 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.121079527 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.121444745 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.121228755 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.120313331 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.12110108 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.120821653 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.121780212 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.120266262 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.120437603 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.121440541 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.121371328 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.121502052 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.121470599 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.121311053 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.121770848 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.122137934 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.121635712 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.12173406 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.121446907 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.122145109 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.121475562 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.121559233 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.121792707 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.121914836 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.121974921 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.122297024 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.122226904 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.121591281 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.122568711 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.123009198 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.122275323 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.122392403 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.122653488 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.121719989 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.122977703 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.122583826 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.123727717 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.123045933 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.123744679 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.122309494 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.123656731 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.123977316 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.12255111 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.122834114 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.122946987 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.124317942 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.122841979 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.123205717 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.12355009 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.123291973 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.123559986 seconds)
  done (took 70.615296219 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.123304208 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.123414924 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.121605745 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.120852835 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.123839575 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.121938831 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.123128705 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.123661813 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.12402053 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.124374937 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.124657591 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.121781584 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.121608082 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.123865041 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.122363765 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.121806032 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.121805243 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.121142245 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.124974687 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.121586734 seconds)
  done (took 23.517527292 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.121762781 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.124973306 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.121471094 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.122106741 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.124414401 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.121850285 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.124820146 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.125262788 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.122582268 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124898518 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.124328021 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.125251903 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.122466579 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.123157477 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.125502769 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.122604745 seconds)
  done (took 19.039812979 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.122127317 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.124671717 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.12445553 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.12531043 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.122548877 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.122884689 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.125218607 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.123172932 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.123017899 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.125522604 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.124869202 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.125551643 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.125606752 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.125461886 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.123846468 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.125942357 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.124052706 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.123438677 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.126289975 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.125457005 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.123630848 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.123312768 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.125729441 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.127344387 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.12346281 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.123879156 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.123481728 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.122496008 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.124623899 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.12650781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.123146285 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.12471981 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.124569708 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.123936495 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.12821953 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.124191864 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.126799005 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.126625898 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.126581448 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.127003787 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.12613301 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.124782188 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.126965348 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.126813297 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.125140207 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.127238081 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.124617402 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.125875293 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.126250244 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.125237292 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.127229713 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.128013936 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.126806585 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.129006246 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.127024874 seconds)
  done (took 62.950023533 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.126168473 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.127607035 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.124650424 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.128267516 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.12705772 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.125193958 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.1283571 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.126516545 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.126172413 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.127385626 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.126692887 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.127866344 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.12529879 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.128163226 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.125864428 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.129505485 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.125543611 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.126740532 seconds)
  done (took 21.348267384 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.125950641 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.126062492 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.12850672 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.126560304 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.125407739 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.128610119 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.125564558 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.128755034 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.127655209 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.126746953 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.126416852 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.129497726 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.128353622 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.12945843 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.127290911 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.126781987 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.129546217 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.1299195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.126976279 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.12668987 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.129475171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.129779277 seconds)
  done (took 25.87640159 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.128203671 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.128278623 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.142719896 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.165557466 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.155708463 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.129022224 seconds)
  done (took 7.915882043 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128628376 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.129882058 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.127483458 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.13086511 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130018919 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127543887 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127118784 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128014135 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.129875538 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128964077 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.126699011 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130742705 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.129679846 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.126535196 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.129626726 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130469408 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128065946 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127981526 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128942061 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.13139909 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.128102749 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131199761 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.1278718 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128674158 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128963491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.129027479 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131252292 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.129490882 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.129041985 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131192324 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130714581 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.128328586 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130638336 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.129819084 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.133243523 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131768259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128993585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131195606 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131237582 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.129997925 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.132346064 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.133102809 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132931701 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.129317707 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132612115 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.1299299 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.129841772 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130752817 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.129286096 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.133155545 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132023163 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.129874498 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.133088961 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132299408 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.132366215 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.132911661 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131023118 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130653262 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132867114 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.130346909 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.130266082 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132795269 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.130416592 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131048635 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.132215319 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.130681145 seconds)
  done (took 75.666025635 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130633176 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.130781229 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130305231 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.131467632 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.130154993 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131083925 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130541769 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.131430469 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130578857 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.129895876 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.133644454 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130483023 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131060649 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.13124268 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.129999946 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131553071 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131386218 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.130145129 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131395476 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.134057167 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131828079 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130864047 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.13147667 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131710173 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131290749 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.133136502 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.130954395 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.13217493 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132510611 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132048746 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132001186 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1319351 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.131916924 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.132080791 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.132172282 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132047336 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.132571559 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.132372277 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131435432 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.134922072 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132642752 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.13494693 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.132101212 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.1326119 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132640449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131982301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.132410754 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.133153029 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131843268 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132996646 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.133773492 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.133940461 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.13424438 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.133435097 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132558002 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.132970556 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.132279963 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.13198039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.133508044 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.135282886 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132762944 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132881681 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.13615516 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.133771583 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.133281676 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.133405318 seconds)
  done (took 75.798354995 seconds)
done (took 1544.999159076 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.151167987 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.132498064 seconds)
  done (took 13.356082593 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.297099295 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.249287469 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.134251777 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.139677304 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.134285792 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.156834086 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.128830264 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.135065357 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.133299198 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.134681225 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.133347254 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.321138939 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.188136731 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.135238655 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.134843905 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.226039002 seconds)
  done (took 39.85687693 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.158723726 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.1436307 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.239433801 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.157023238 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.163521604 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.305186281 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.18838514 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.141994343 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.286878361 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.17696632 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.493887196 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.164322842 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.143605676 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.104229678 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.157053286 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.305303812 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.354103651 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.499026307 seconds)
  done (took 26.256689012 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.52578387 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.137203587 seconds)
  done (took 8.739622442 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.149410471 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.135482739 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.167995063 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.134460591 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.158449872 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.219769979 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.192684615 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.152327795 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.170545933 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.193550296 seconds)
  done (took 62.752872631 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.159706588 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.142403197 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.143541521 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.140931572 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.134632064 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.134610444 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.141611179 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.137081846 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.220795391 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.252110839 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.153808776 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.148775956 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.143143069 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.142368012 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.139739169 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.175182576 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.274302325 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.140539647 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.138834992 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.148013528 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.142497724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.246934396 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.177302704 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.139636712 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.251036206 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.28681545 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.145069721 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.149215488 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.260205168 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.139934087 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.141926269 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.141116913 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.144497652 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.683381467 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.653029791 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.14781901 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.163271735 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.15110332 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.14002338 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.281628612 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.142903469 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.149934251 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.1374765 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.616032542 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.293384355 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.243998942 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.203782049 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.144613686 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.144594462 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.201533327 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.143369888 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.144600332 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.169096697 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.858851691 seconds)
  done (took 99.472413168 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.154974509 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.622975975 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.304716377 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.153359392 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.953240045 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.727874544 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.137592412 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.381956009 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.147920998 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.136195123 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.406301121 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.599948688 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.139463935 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.211052426 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.62136932 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.143528519 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.138081321 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.998207357 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.138365975 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.139756788 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.541015871 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.150923761 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.14855736 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.388181508 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.174143324 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.558417367 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.389399371 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.606645283 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.137198638 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.138291914 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.566715936 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.139800957 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.152351179 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.138674452 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.39121054 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.449234535 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.428611038 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.139803595 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.161164421 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.142198501 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.163138855 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.556501962 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.439731707 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.137704241 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.15141894 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.560194815 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.138381178 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.141869264 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.143554614 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.341164255 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.881309086 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.139066814 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.389682108 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.139779289 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.399243296 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.208625798 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.176173362 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.587913914 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.138391333 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.245015229 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.153699796 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.140785422 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.140916412 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.142598329 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.143009937 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.443271894 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.513612198 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.145413131 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.446780585 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.559947789 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.139523171 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.62314716 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.996142909 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.165495376 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.181912268 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.145439336 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.809534963 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.590037619 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.19657836 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.140217151 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.431452715 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.143371163 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.396979319 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.152299023 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.151587286 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55388207 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.157631886 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.14052236 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.13997848 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.145175481 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.903210372 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.145163773 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.387829003 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.165940784 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.140819017 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.141696708 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.173252458 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.141996811 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.142414347 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.141132327 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.627525677 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.149703755 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.249630224 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.15746395 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.150621498 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.140907376 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.14453423 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.140107195 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.361293889 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.741866128 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.142504497 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.141799525 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.142003354 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.156596821 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.377577071 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.142604765 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.40879485 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.144962855 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.140508617 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.155376741 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.775752042 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.15567961 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.142294575 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.147015329 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.953525928 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.345813318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.158971063 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.153528924 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.142889722 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.154583028 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.358795311 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.146100484 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.200301482 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.145958517 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807061182 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.152329532 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.147273437 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.554793803 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.151120788 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.001854621 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.159446859 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.142853449 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.433909615 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.396079864 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.417386766 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.144484143 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.14362243 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.803386256 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.165559297 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.274144409 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.160612653 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.144777699 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.338478165 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.326475988 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.144302745 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.683394235 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.144705424 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.356307928 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.155901975 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.447523885 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.595507292 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.143278316 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.149796514 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.81365235 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.778684472 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.949397614 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.148315015 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.402267889 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.145359775 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.593279743 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.144681198 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.145081728 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.719985919 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.145641779 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.152507818 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.14451357 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.145249396 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.208882172 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.317029944 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.709290016 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.144265322 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.564834544 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.17902963 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.145239963 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.145698846 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.144655099 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.49917851 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.188681399 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.145403554 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.187300303 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.146557327 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.149304793 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.57648337 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.03520983 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.146734826 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.296346262 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.739495722 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.144500693 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.146284273 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.898596159 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.344672741 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.655150017 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.168335845 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.413598518 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.149611758 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.183581992 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.894446197 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.210751085 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.57508732 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.145521461 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.146214942 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.714847307 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.14663209 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.192725353 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.14654355 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.146276326 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.642938115 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.147598581 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.152126429 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.350016034 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.154419907 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.395294635 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.147069799 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.1780607 seconds)
  done (took 1066.254261963 seconds)
done (took 1317.761101206 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.14709928 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.147935276 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.136782824 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.149092022 seconds)
  done (took 25.671046169 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.157464466 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.153049422 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.155092735 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.152261458 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.154549642 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.153687308 seconds)
  done (took 8.016272083 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.216360546 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.147537947 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.149577777 seconds)
  done (took 18.604241689 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.344410397 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.298114458 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.480233722 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.053930254 seconds)
  done (took 9.267524325 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.154213803 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.155669279 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.15465469 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.157432741 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.158111057 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.160568179 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.157156579 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.15742003 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.159789141 seconds)
  done (took 11.504876238 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.654698318 seconds)
done (took 78.80802135 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.213528749 seconds)
    (2/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.326280913 seconds)
    (3/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.441065158 seconds)
    (4/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.927135534 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.700390806 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.918784461 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.173197307 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.367244595 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.257546095 seconds)
    (10/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.428275117 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.377434872 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.444843598 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.753963486 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.189959059 seconds)
    (15/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.375475724 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.188260055 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.432869134 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.457471707 seconds)
    (19/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.18752486 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.250612197 seconds)
    (21/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.318325419 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.897675704 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.603954005 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.660292306 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.202258804 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.176609865 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.136949423 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.673200971 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.974575418 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.654022193 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.484132791 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.132512922 seconds)
    (33/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.143520248 seconds)
    (34/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.278350285 seconds)
    (35/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.116326864 seconds)
    (36/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.177627999 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.150219437 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.977073408 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.150715925 seconds)
    (40/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.160446647 seconds)
    (41/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.698246112 seconds)
    (42/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.162725514 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.541943934 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.79771227 seconds)
    (45/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.257389979 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.252860588 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.46011309 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.275856102 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.48884277 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.65033444 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.200092193 seconds)
    (52/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.155755227 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.228130246 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.827464915 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.141112705 seconds)
    (56/309) benchmarking ("sort", Int8, false)...
    done (took 4.232003245 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.516200593 seconds)
    (58/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.286167498 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.979565674 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.234651589 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.13802027 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.146127844 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.237557771 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.2157361 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.262483943 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.819750884 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.411309066 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.575940889 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.152518252 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.36405831 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.159291174 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.212322798 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.151716536 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.278891431 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.139673474 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.230627025 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.235756545 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.202767443 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.283914417 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.496162509 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.296555222 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.866478309 seconds)
    (83/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.238112284 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.16643713 seconds)
    (85/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.916270928 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.152835306 seconds)
    (87/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.660172084 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.239184587 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.140021361 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.168128917 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.981182628 seconds)
    (92/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.152460378 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.231726382 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.235134761 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.262551335 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 5.287357472 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.364558995 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.946277368 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.26160938 seconds)
    (100/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.23920144 seconds)
    (101/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.245619808 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.237880006 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.836072558 seconds)
    (104/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.161541493 seconds)
    (105/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.184880365 seconds)
    (106/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.587610325 seconds)
    (107/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.235415335 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.155444831 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.213766599 seconds)
    (110/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.450910654 seconds)
    (111/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.72652691 seconds)
    (112/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.317687884 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.140260657 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.579900921 seconds)
    (115/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.409877974 seconds)
    (116/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.170841756 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.156115903 seconds)
    (118/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.136873994 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.328251585 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.927941506 seconds)
    (121/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.163907329 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.180353604 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.378835873 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.93125805 seconds)
    (125/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.736370155 seconds)
    (126/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.823897552 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.161304701 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.154136943 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.913059375 seconds)
    (130/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.241010238 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.995333904 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.156668828 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.181811996 seconds)
    (134/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.17052868 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.171760402 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.661619484 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.178118327 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.3050446 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.412657136 seconds)
    (140/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.153582914 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.846550142 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.412192411 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.401958682 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.233437791 seconds)
    (145/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.293045551 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.182563044 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.258937172 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.979402301 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.169693792 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.355713753 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.525024754 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.414592161 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.157359458 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.747602471 seconds)
    (155/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.831807348 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.54007189 seconds)
    (157/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.627737508 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.832380687 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.18274675 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.384512513 seconds)
    (161/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.309694861 seconds)
    (162/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.143732842 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.157601942 seconds)
    (164/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.416726711 seconds)
    (165/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.304017374 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.178984468 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.257911146 seconds)
    (168/309) benchmarking ("sort", BigInt, false)...
    done (took 6.157781925 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.581954222 seconds)
    (170/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.238831697 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.178377023 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.145877677 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.158405947 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.776706963 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.475179467 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.198654044 seconds)
    (177/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.672739675 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.376628862 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.157259879 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.607751114 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.161341376 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.360298102 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.28518272 seconds)
    (184/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.999151835 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.137011441 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.179802016 seconds)
    (187/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.713341849 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.184813516 seconds)
    (189/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.184549056 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.001389233 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.446593217 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.199957935 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.15830554 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.908970064 seconds)
    (195/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.576128795 seconds)
    (196/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.538828596 seconds)
    (197/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.352477112 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.746764984 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.216630416 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.174192486 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.221682991 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.860439026 seconds)
    (203/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.361801992 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.349669784 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.57401584 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.849765083 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.923211546 seconds)
    (208/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.498618283 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.180265349 seconds)
    (210/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.168324292 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.800003132 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.184588588 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.37577643 seconds)
    (214/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.164549075 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.486916002 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.505277093 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.159980126 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.685492693 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.193792203 seconds)
    (220/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.338001445 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.190713081 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.694286667 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.170144933 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.20100266 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.365663917 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.494134936 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.495955489 seconds)
    (228/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.276038059 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.160436082 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.152620613 seconds)
    (231/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.870668399 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.159174898 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.373951118 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.145856788 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.147338205 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.167861542 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.680205512 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.28322133 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.667872306 seconds)
    (240/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.407952965 seconds)
    (241/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.511432152 seconds)
    (242/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.486966664 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.407812789 seconds)
    (244/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.16149575 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.187957403 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.315302479 seconds)
    (247/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.704418719 seconds)
    (248/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.655905239 seconds)
    (249/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.172113778 seconds)
    (250/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.180246421 seconds)
    (251/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.572510714 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.163278036 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.161923652 seconds)
    (254/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.176553044 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.839248653 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.187457064 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.813048356 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.682782008 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.364927846 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.868628228 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.263161916 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.18747885 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.149467266 seconds)
    (264/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.311429523 seconds)
    (265/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.162874153 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.552867021 seconds)
    (267/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.28689664 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 5.409842398 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.148603485 seconds)
    (270/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.199734124 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.274120033 seconds)
    (272/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.245937033 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.259667698 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.377505846 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.558447019 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.223137375 seconds)
    (277/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.299621458 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.50814622 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.189254456 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.270718049 seconds)
    (281/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.732749789 seconds)
    (282/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.190436011 seconds)
    (283/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.368107969 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.246494444 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.244539413 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.161317088 seconds)
    (287/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.608163512 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.28048405 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.290070198 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.672196034 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.875685856 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.361598201 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.237834533 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.162399412 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.219121 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.835351777 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.46885878 seconds)
    (298/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.189724319 seconds)
    (299/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.503487803 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.340123177 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.718221914 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.568013168 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.164502687 seconds)
    (304/309) benchmarking ("sort", Float32, false)...
    done (took 5.149572203 seconds)
    (305/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.287150646 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.186013916 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.569289118 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.189077785 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.199184348 seconds)
  done (took 852.676636188 seconds)
done (took 853.770064811 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.196115223 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.19015127 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.17269086 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.196258732 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.284506876 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.210803589 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.184399453 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.176111545 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.222594286 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.223708887 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.173454514 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.208345845 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.176214054 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.175009648 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.174128278 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.189133221 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.076112537 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.176297515 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.192688243 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.185684378 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.191412295 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.174713274 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.223933962 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.207741041 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.179048106 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.178060048 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.178128189 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.194372482 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.287329741 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.180034532 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.178311367 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.187205149 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.076784875 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.173607589 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.170449688 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.196703568 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.187228718 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.185833824 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.17906067 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.208054647 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.432888592 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.176297476 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.177329207 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.17620444 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.176677709 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.180348406 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.178790308 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.182684421 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.189036059 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.190994017 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.441606923 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.191625641 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.180293835 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.177661449 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.187173662 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.177620776 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.179670498 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.192535806 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.196034121 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.19211418 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.069662141 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.181224468 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.178697273 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.194269551 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.184622776 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.463801927 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.172162484 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.181079169 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.45065609 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.182100713 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.465537773 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.18572803 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.178560603 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.19107107 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.209672268 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.082719485 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.173221952 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.176938144 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.185489648 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.17690217 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.187647428 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.191073723 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.183396687 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.178532174 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.19312453 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.211617053 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.188799495 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.180189148 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.188373001 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.199115179 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.185421764 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.190851338 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.182653428 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.174648445 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.188021561 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.182220131 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.181648759 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.181565701 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.183817926 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.189296309 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.440399804 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.195125173 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.175855841 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.175633125 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.177633871 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.19257137 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.441547038 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.179998614 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.200918911 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.227134301 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.180999297 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.075701659 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.182940119 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.195276226 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.189071898 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.183016932 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.175299038 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.078129608 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.433540258 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.195171128 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.181506431 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.17993131 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.196073381 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.18180239 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.177503678 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.086595844 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.181361348 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.194963009 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.300850974 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.191497082 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.212538751 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.179132882 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.183289553 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.215368462 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.197181342 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.21286364 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.183919537 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.197362071 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.197528018 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.177005677 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.191741307 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.191366762 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.181512158 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.187391176 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.17524581 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.216044811 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.193425517 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.194561805 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.202105105 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.302957016 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.178377555 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.077577195 seconds)
done (took 199.255939498 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.258333494 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.177488064 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.279067735 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.178502065 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.293489335 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.294821459 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.174953779 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.176228517 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.175542226 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.582933795 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.17609774 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.176389648 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.178106925 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.176664949 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.281934284 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.178599984 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.17569064 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.554925977 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.179414404 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.25687831 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.176928027 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.176664919 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.178351936 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.601771377 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.174865168 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.172126274 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.2562739 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.179929377 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.54858699 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.177950325 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.175352029 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.560138173 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.279834369 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.196520218 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.189927357 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.186684054 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.294389654 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.194648268 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.281212365 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.28078628 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.280358286 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.217929005 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.177614223 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.176962607 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.181534219 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.181504165 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.177570055 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.207290572 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.177127256 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.178391403 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.544852353 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.189201011 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.188714039 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.177852443 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.177896192 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.199478794 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.178234579 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.181297081 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.280372853 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.180482165 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.2512436 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.589462393 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.600393809 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.180771703 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.17636373 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.179062435 seconds)
  done (took 138.556845102 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.247346917 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.253972759 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.286166623 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.180629961 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.231068083 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.291464997 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.182439882 seconds)
  done (took 9.789853178 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.186346335 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.18122065 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.230089224 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.230508342 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.18038869 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.329078373 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.182026925 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.192497595 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.17857595 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.233855969 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.18402783 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.181848984 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.188997918 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.182351372 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.231392425 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.19340858 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.29666729 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.182743159 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.182889053 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.339392804 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.180255827 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.189601724 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.240293653 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.194176361 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.183422021 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.189120306 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.746561444 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.182832626 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.179779659 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.182059139 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.180709379 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.22074221 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.183064227 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.180975071 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.180941047 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.299614056 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.182580302 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.180785943 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.183687404 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.178126434 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.183131109 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.183141746 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.183670556 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.181195511 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.183727608 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.207209277 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.184155615 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.183062679 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.184153335 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.184584136 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.234348931 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.184933675 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.181435594 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.181475222 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.239318046 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.191031439 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.184699771 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.180795651 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.184662427 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.183217785 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.339952492 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.232100392 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.183658522 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.232371799 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.184523009 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.184767816 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.185768988 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.185423531 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.238458817 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.185446115 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.23312586 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.183103837 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.339546183 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.206691875 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.184947145 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.186797187 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.187717292 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.18567882 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.18101494 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.191492482 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.183217519 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.186825416 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.19121049 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.182934308 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.183525403 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.288224799 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.294826728 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.182948007 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.197796576 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.192785691 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.18401357 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.238846819 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.185742215 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.18401842 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.238119493 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.300306171 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.247221513 seconds)
  done (took 138.548523417 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.191416245 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.194686531 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.188008379 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.203456724 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.185474032 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.185840138 seconds)
  done (took 8.270019447 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.188089865 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.187644663 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.18651992 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.186562734 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.186174468 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.188184043 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.18716679 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.187680584 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.189789036 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.187790185 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.188543847 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.18893381 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.187831588 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.187051244 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.188344566 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.187727474 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.18721202 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.185313316 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.186760907 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.18760142 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.281542869 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.187729094 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.1873073 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.187151914 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.191966259 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.189002415 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.195790318 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.188019213 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.186874209 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.19558559 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.189955689 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.189069061 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.18834536 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.192031813 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.192225177 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.189286267 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.190701967 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.189303928 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.186586174 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.188284749 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.190618849 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.189223348 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.189186737 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.190800226 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.190099417 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.192648094 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.193214129 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.196271618 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.190874348 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.190538044 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.191291835 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.189620486 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.19007054 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.191715813 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.191551108 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.193332928 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.194116545 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.189686739 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.189007832 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.190500511 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.190403386 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.190111948 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.190515106 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.192669004 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.196042287 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.191755348 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.191706237 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.192378825 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.189995656 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.189365377 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.191090202 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.187478203 seconds)
  done (took 87.878927962 seconds)
done (took 384.158249446 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.346124763 seconds)
  done (took 7.471377849 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.283616103 seconds)
  done (took 7.409210888 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.060636644 seconds)
  done (took 19.19041198 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.220280386 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.294210006 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.199539747 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.193717963 seconds)
  done (took 26.033871834 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.184425199 seconds)
  done (took 7.310738992 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.183619219 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.195256855 seconds)
  done (took 13.506680151 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.340060997 seconds)
  done (took 7.466540885 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.261405571 seconds)
  done (took 7.391881007 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.206390943 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.198648875 seconds)
  done (took 13.768913202 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.170378661 seconds)
  done (took 7.297201998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.778883254 seconds)
  done (took 7.907550824 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.195659512 seconds)
  done (took 7.32450256 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.265311508 seconds)
  done (took 7.392831431 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.341092293 seconds)
  done (took 8.468375997 seconds)
done (took 149.065843146 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.185041842 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.186444241 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.185904241 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.187042078 seconds)
  done (took 25.871221193 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.225923327 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.226744886 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.227568122 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.237665925 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.22922477 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.226075704 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.218912563 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.219235374 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.237739146 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.229388232 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.229015399 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.229290714 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.225986818 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.219423109 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.229292061 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.228417372 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.238423066 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.227738859 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.219399602 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.230089083 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.194110015 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.237456394 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.229109017 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.195626053 seconds)
  done (took 30.539545916 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.390666589 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.264078916 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.346781781 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.245757101 seconds)
  done (took 6.376031195 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.244719274 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.247056819 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.257688564 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.297453464 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.323184509 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.256664341 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.221324514 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.2149378 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.201688839 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.247498122 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.322371726 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.262754087 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.332246069 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.195159773 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.381286912 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.194505666 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.195023944 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.245546627 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.297991892 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.327551871 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.195034045 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.246171655 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.249663453 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.263069848 seconds)
  done (took 31.35020114 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.193363459 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.20212277 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.199451386 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.194116045 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.194291673 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.194900566 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.20048604 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.195462949 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.215496017 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.194889937 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.193547181 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.194087368 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.193933071 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.194646129 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.193910562 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.207448799 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.207017374 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.194716301 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.19743516 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.200825207 seconds)
  done (took 25.092988371 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.188745383 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.041859627 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.540217769 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.443776311 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.188819612 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.189228646 seconds)
  done (took 26.723238639 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.257937227 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.371801775 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.195936082 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.513745048 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.588357213 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.195421648 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.195391067 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.405089244 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.675037692 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.68165484 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.246604379 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.255978546 seconds)
  done (took 17.714160113 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.19134311 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.191374873 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.196693154 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.207131864 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.244674312 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.199257047 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.202405338 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.188912568 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.246730734 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.248541978 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.199761703 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.245590939 seconds)
  done (took 35.695016357 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.278067556 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236391847 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.046671855 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906949735 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910338358 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.401386143 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.933748162 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602901233 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.196821339 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.464733867 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265317955 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.292518932 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.446510604 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.200181283 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.193523112 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.125168125 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417487224 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631021539 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.193640593 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865918603 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.218266269 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.200160725 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.04071481 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.219476643 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.403090439 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.168414999 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.45242722 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.968585682 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451104691 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.203598869 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.202837178 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.192356559 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.466286822 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816386673 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.288035862 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.202290938 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.880802092 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.739323974 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.17935938 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.973647199 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.599028661 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.197027782 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.203030933 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.193709472 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.127023165 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.199787471 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612712903 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.200956643 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.904734996 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.194660784 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.203557993 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.290553014 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.197186118 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.762534978 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203273279 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.200139878 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.190893714 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.199191319 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770713634 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.326732073 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.202552229 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.128869467 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.561648769 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87936411 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764167644 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.296610549 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.197975891 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.198679019 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.127615756 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.946943084 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.210619958 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341384554 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.220287754 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.843999169 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840736404 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.851691598 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.138684431 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695722326 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.208064254 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.130147184 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423200902 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.969173944 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.131095341 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.140850482 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.128844412 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837043436 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.20480335 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.506434356 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.202383237 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605228563 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.207327654 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.211428715 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.21972053 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.417940298 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.079703023 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.195082756 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.638025038 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334943879 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.217201666 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60761234 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.131123288 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.198569359 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450635037 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.407726577 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.205746403 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.132220452 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383015297 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.205549798 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.213364794 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.209936951 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.208662087 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.728065746 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.207314819 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.335144975 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.214697538 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.972627438 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877115209 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.211989464 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.299317491 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.872463579 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.438747932 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.903676379 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.097567436 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.265627343 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.200175428 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.196867924 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.999554127 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047974805 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.099066381 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.199119973 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.205874189 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.208858178 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.197794907 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.146914311 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.195938057 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.876871392 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.976830135 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.420966148 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.205844189 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474341396 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132598655 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345071385 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.20703592 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.420753631 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.307406938 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.19629609 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456805429 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.199690177 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.203683625 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.209493732 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.216716226 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.295514681 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.220081656 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.201428244 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.455309303 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.202500927 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.202342649 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.996797832 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.978959883 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.202449774 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.203491117 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.020173462 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733892549 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176273127 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.207926645 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087897963 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.214158831 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.266333554 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.205279156 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.209147119 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.877624641 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.007395768 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.204901491 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.20020626 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422640757 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.209578129 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.99014343 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282013724 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.381313733 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.738383834 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.213810751 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.134446536 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.910843981 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.8929302 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.201315731 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.388239267 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.200388223 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.209630561 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.211193006 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.694829766 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.738920154 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.202317737 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.904977412 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.206934365 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.211342837 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.206627667 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.201182167 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.832586251 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.360143723 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.214887256 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.212068856 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344425649 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.214669725 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.134262215 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.717615597 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.206304196 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.202899478 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.976122635 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.235397915 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.928704302 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666232259 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460206708 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.869137275 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.21427503 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.992153788 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.232578262 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.21118057 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.657911936 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.216245184 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.207990812 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.21111996 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.212567152 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.911891303 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.640596578 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.773813962 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871649675 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68443356 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068189004 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.210711683 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.106920625 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.620911555 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.137275113 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.858902748 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374179902 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621120938 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147801226 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386498666 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.322910652 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908826651 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.212509012 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430146225 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068310145 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.662366204 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.227825528 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.414999733 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.237546096 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.211952281 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.133563798 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.506249156 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429645107 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.672779645 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284793525 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621518826 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.656277946 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.993868826 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.202201485 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.463499262 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359784521 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.834011476 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.590431095 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.203033957 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.896508218 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674763883 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.213853621 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.730159341 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779182752 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.206662705 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.388598807 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.142369321 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.214339331 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.21562245 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.205819097 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.347640804 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.207383116 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.460389768 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.21644209 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139285859 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.204507206 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687956386 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.058154806 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.209521046 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.205525531 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888495453 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2059152 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474753573 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.208401177 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.818156395 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209447785 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.138400412 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139066503 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.898315381 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.208594235 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179962342 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646815295 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.557198729 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.202247105 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.229321267 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046803913 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.461193221 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.219414084 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.740021982 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430792572 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.982393687 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.229110276 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.306355253 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.71208218 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.206818426 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.108398438 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.441071547 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028981 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.43012363 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.088522412 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.111429892 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.204451407 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.419379247 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.105065621 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.914727897 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444677302 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.918353785 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.215265667 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861749017 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.232928168 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.910634949 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231530052 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.566293502 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.214401953 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.277794548 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.216451957 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.218539269 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.217781515 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365183186 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.913594688 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.224391934 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.220455413 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.304143915 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.366141264 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.828762928 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.982420821 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74768414 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890577343 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.747252667 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.22171545 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.20803463 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.207154039 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.14109375 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356487266 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.733144777 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482364752 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337445637 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.632803194 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2314156 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.72613406 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227405851 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419981697 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482703046 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.078123376 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.213169555 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.866398372 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.102582198 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.219855533 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.418956449 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657837384 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716761259 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333303048 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.208642589 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625332008 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484905377 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.298716096 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.208832745 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.796426701 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.228338454 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.487466654 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.215046521 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.973236342 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358099848 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.219715819 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835970697 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.218518 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.368865057 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.983432918 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.004697437 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.466548773 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.631141864 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.221050229 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.749613277 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.856867504 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473398499 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.279768027 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.220160875 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.314660404 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355583086 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.218891776 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.100129588 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.210873179 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051996282 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.920427834 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.219656887 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756152509 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473419293 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.208639359 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.218781213 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233471522 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.219381209 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.434247647 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865170777 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.436659227 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.219611179 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.214361264 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.200379387 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755962111 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.223355608 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.144001545 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.214594837 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441104542 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.447640722 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.236306626 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.664426958 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.923132275 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725626795 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.18436381 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.232507254 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.213902356 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862012834 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754347243 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.851128115 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.660486309 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.870507999 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.218544497 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.48573392 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.216718302 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.217575251 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.488611863 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.21515337 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.219003224 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.225568752 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.751446384 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925660943 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.218719403 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.947961762 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.149604297 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.438400012 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.832695146 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150358033 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.212312614 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.381657156 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.216267103 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344331788 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.224851306 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.219443867 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21857746 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.947173189 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486517147 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.219574595 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.217220732 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.788493561 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.22009113 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.220965492 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435938229 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.220824232 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.88792095 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.567946084 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.468523992 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.222723466 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.200419972 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.217447521 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.214486675 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.932163273 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18380659 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.725923545 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731204658 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.226927301 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.225325011 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.218634502 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.431122134 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425712496 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.964466259 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.239731985 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.214698816 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.230226754 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.119430037 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.982397159 seconds)
  done (took 1504.836806584 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.220759462 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.254745562 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.254608194 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.24513877 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.248386627 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.248826603 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.294194461 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.227528418 seconds)
  done (took 51.148744031 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.218144534 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.366331222 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.244879692 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.219322045 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.224389036 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.217645964 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.62005498 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.224335743 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.224169656 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.225229224 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.218163677 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.227400327 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.788512754 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.224215637 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.223840216 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.211466189 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.225034466 seconds)
  done (took 63.065753068 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.218609539 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.410169798 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.288443248 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.228967371 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.796066368 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.214350399 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.366099673 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.231354804 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.223780653 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.522777018 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.867251133 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.260009674 seconds)
  done (took 81.786150177 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.224203274 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.22362911 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.223122228 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.223907904 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.222968006 seconds)
  done (took 7.274634551 seconds)
done (took 1908.602243881 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.461663455 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.841513872 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.800133847 seconds)
  done (took 4.79885144 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.366674684 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.415845896 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.537850019 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.556238522 seconds)
  done (took 7.035574718 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.508847081 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.590362389 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.412226401 seconds)
  done (took 5.672279254 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.528786654 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.225948281 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.3390895 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.219992083 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.22073588 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.22071293 seconds)
  done (took 19.822750245 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.223309306 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.22789768 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.223904227 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.226519306 seconds)
  done (took 6.062579993 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.206053706 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.919475109 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.207682048 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.222678733 seconds)
  done (took 17.717242391 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.969439983 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.985374191 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.967688888 seconds)
  done (took 7.083035247 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.222727963 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.064217846 seconds)
  done (took 9.446951441 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.513433863 seconds)
  done (took 2.674985821 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.35673704 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.490328792 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.225517926 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.107001375 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.192140576 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.669643385 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.709351385 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.324654396 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.093875299 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.187469576 seconds)
  done (took 25.519219693 seconds)
done (took 118.546772289 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.756580138 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.46839208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.423901712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.725587831 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.45240466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.423523493 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.42805911 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.691821583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.280174894 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.229122774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.729402898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.452826947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.381937363 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.469712452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.381857107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.220962938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.454806175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.807802453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.418217302 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.618144988 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.434842875 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.36944573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.565084323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.390372782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.453444587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.377375352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.951240685 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.226244834 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.590902629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.96919668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.377635319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.79563623 seconds)
  done (took 183.479436199 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.222952099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.246515171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.22377776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.224769158 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.233494689 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.224181809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.225510874 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.223012336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.22846014 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.22326198 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.223612644 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.22292562 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.224181237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.246138367 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.22450412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.222886235 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.223557029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.23637226 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.222834649 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.243818173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.225533072 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.240285851 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.239518281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.224745528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.224125393 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.238051466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.223748485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.231246173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.223405178 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.224048454 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.224985032 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.223985407 seconds)
  done (took 200.475650992 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.22416102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.23421751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.224218612 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.232301692 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.223620398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.23665308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.227280877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.224817281 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.231587004 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.224654251 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.236128762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.234767116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.226890858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.225070212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.226900931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.224839006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.224825025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.224737684 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.224875991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.23779187 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.225871848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.238205587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.226184092 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.225966989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.225703352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.239278895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.224775584 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.225816797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.234023413 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.224723983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.22633933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.225755504 seconds)
  done (took 200.479354076 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.42828529 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.232061059 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.234296351 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.187672622 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.233377105 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.232887844 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.225064433 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.423185544 seconds)
  done (took 13.362961076 seconds)
done (took 598.959257153 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.412823653 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.136919909 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.424738652 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.252960599 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.938305549 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.253775594 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.252961658 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.413173861 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.115987348 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.410175815 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.4013661 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.251784613 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.536509723 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.251806657 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.489385011 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.34797925 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.084943907 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.195223471 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.547810098 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.721825853 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.49571186 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.625141054 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.410536272 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.117477534 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.539950249 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.627456166 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.86296775 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.083855319 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.252830232 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.551041715 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.763062751 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.108800297 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.305410591 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.288202209 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.343266334 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.324751639 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.089575377 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.285641438 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.428686055 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.391916213 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.716330027 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.936057113 seconds)
  done (took 85.158192168 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.223142682 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.223713047 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.222583471 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.223474186 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.224582569 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.222964701 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.222158634 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.223911327 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.223394268 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.222936242 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.222571203 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.224713386 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.223372089 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.22416838 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.222751023 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.22285513 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.222457602 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.226093488 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.224065634 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.223292985 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.2237746 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.22297882 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.223609244 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.223423012 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.224617808 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.22510895 seconds)
  done (took 32.982937143 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.243216252 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.474618447 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.627039917 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.241935468 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.236601602 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.240271216 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.306375441 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.238105217 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.239451544 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.240344532 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.381716284 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.240131798 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.273100471 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.634778576 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.240400378 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.238018009 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.238254244 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.238282929 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.483912239 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.247716937 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.309478231 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.239066716 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.308724649 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.248915964 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.240629051 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.239256748 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.242374938 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.753086465 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.241016839 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.383802887 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.937751583 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.306883388 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.705842602 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.640287053 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.935287331 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.242002626 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.239187962 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.390463057 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.240922874 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.239293518 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.309044631 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.239536994 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.639991553 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.852599955 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.254255526 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.239534082 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.772476058 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.385385948 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.458081075 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.244257481 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.656340496 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.239330246 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.238237654 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.237207878 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.457460854 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.243811708 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.236343906 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.75554058 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.241827656 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.30752263 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.238200417 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.23674839 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.488470909 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.237987729 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.483495766 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.238345897 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.24708744 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.238439228 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.637149293 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.239813645 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.869248706 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.252304095 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.238718699 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.382349238 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.483751295 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.799736234 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.240554493 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.493970266 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.717056449 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.306526219 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.242198295 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.739585588 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.309888224 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.241392166 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.241541816 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.240590965 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.239898247 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.284678857 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.30596378 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.792850305 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.858161123 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.767758862 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.310559081 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.250662367 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.23927638 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.759416717 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.240504497 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.239646918 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.634078623 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.865140326 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.254361971 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.247310125 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.852574751 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.255825326 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.30979308 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.244804281 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.646875853 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.240305867 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.285213347 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.239983357 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.246647706 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.24234694 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.309760047 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.242935702 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.24098377 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.839149672 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.40363434 seconds)
  done (took 163.547560944 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.248361942 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.233607609 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.233513225 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.249236666 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.232812753 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.238761502 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.232138978 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.233777646 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.239113867 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.233471123 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.232548436 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.234815099 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.236862571 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.237364037 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.243553783 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.240915469 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.844708572 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.235061473 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.234932169 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.233679618 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.015103023 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.23612772 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.233518484 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.234108731 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.235520679 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.234894877 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.234553686 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.23647006 seconds)
  done (took 149.183888538 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.241520354 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.750301422 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.24296767 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.360961888 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.259903002 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.239650736 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.358151125 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.294113639 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.243180915 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.238663665 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.239565198 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.514895706 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.242334011 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.705303059 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.413140661 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.359092909 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.704451226 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.243087067 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.240057499 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.240153948 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.362761314 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.248600345 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.516110464 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.75939394 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.244429263 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.759381982 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.233523964 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.242236322 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.240985135 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.759413578 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.241669931 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.519745963 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.313849256 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.295242894 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.761108212 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.708375695 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.707621472 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.373290604 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.242578569 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.2396254 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.24042788 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.231686176 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.761785566 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.246346515 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.243295298 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.755004783 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.258062428 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.244302762 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.251381621 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.240799875 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.296377926 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.297713262 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.524457751 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.767556004 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.313744513 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.263395952 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.36044623 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.619545157 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.245753453 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.707851927 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.231390498 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.762900408 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.247294595 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.23235429 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.244000419 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.249030866 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.379113145 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.362063474 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.709262638 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.245008314 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.709715825 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.37950857 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.242538906 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.242950037 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.245728372 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.766822995 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.712441444 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.380183407 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.36698936 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.41860136 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.234023825 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.243976876 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.232998449 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.313997148 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.243287218 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.768075576 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.713358997 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.245301831 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.246373734 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.245760791 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.244916475 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.402681491 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.768062457 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.316749368 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.704198896 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.539439499 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.528124486 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.247889309 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.298006713 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.244542979 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.526863814 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.248653966 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.296728442 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.680855126 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.52878791 seconds)
  done (took 148.142532268 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.475689551 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.342059624 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.330956257 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.350966858 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.819906303 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.78571539 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.476522002 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.363187017 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.345342183 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.479792777 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.32278205 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.336934006 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.401419291 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.312937632 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.942430939 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.305489814 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.33146592 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.366956683 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.334588981 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.211054442 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.838261551 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.520344888 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.40335596 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.114752219 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.334842863 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.951628491 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.769067107 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.808255181 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.407417701 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.48330345 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.762711994 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.299271436 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.146785882 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.865334941 seconds)
  done (took 60.52160647 seconds)
done (took 640.703609142 seconds)
SAVING RESULT...
DONE!
